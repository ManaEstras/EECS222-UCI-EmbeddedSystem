//////////////////////////////////////////////////////////////////////
// C++ source file generated by SpecC V2.2.1
// Design: ProdCons
// File:   ProdCons.cc
// Time:   Wed Apr 12 18:57:51 2017
//////////////////////////////////////////////////////////////////////

// Note: User-defined include files are inlined in this file.

// Note: System-defined include files are inlined in this file.

#include "ProdCons.h"


unsigned int _IDcnt = 0;
// channel class definitions /////////////////////////////////////////

C::C()
    : _specc::channel()
{   
}

C::~C(void)
{   
}

#line 35 "ProdCons.sc"
char C::Receive(void)
{   
    char Y;
    _specc::wait(event(&Req), ((void*)0));
    Y = Data;
    _specc::notify(event(&Ack), ((void*)0));
    return Y;
}

#line 29 "ProdCons.sc"
void C::Send(char X)
{   
    Data = X;
    _specc::notify(event(&Req), ((void*)0));
    _specc::wait(event(&Ack), ((void*)0));
}

// behavior class definitions ////////////////////////////////////////

#line 48 "ProdCons.cc"
Prod::Prod(unsigned int _idcnt, IS (&Port))
    : _specc::behavior(_idcnt), Port(Port)
{   
    char _scc_init_S[18] = 
    { 

#line 51 "ProdCons.sc"
      'A','p','p','l','e','s',' ','a','n','d',' ','O','r','a','n','g','e','s' };
    
    {   unsigned int _scc_index_0;
	for(_scc_index_0 = 0; _scc_index_0 < 18; _scc_index_0++)
	    S[_scc_index_0] = _scc_init_S[_scc_index_0];
    }
}

#line 64 "ProdCons.cc"
Prod::~Prod(void)
{   
}

#line 52 "ProdCons.sc"
void Prod::main(void)
{   
    printf("Producer starts.\n");
    for(i = 0; i < 18; i++ )
    {   
	X = S[i];
	printf("Producer sends '%c'\n", X);
	Port.Send(X);
    }
    printf("Producer ends");
}

#line 82 "ProdCons.cc"
Cons::Cons(unsigned int _idcnt, IR (&Port))
    : _specc::behavior(_idcnt), Port(Port)
{   
}

Cons::~Cons(void)
{   
}

#line 69 "ProdCons.sc"
void Cons::main(void)
{   
    printf("Consumer starts.\n");
    for(j = 0; j < 18; j++ )
    {   
	Y = Port.Receive();
	printf("Consumer received '%c'.\n", Y);
    }
    printf("Consumer starts.\n");
}

#line 104 "ProdCons.cc"
Main::Main(unsigned int _idcnt)
    : _specc::class_type(_idcnt),
    Chan(),
    R(_IDcnt, Chan),
    S(_IDcnt, Chan)
{   
}

Main::~Main(void)
{   
}

#line 90 "ProdCons.sc"
int Main::main(void)
{   
    printf("Main starts.\n");
    { _specc::fork _scc_fork_0(&S), _scc_fork_1(&R); _specc::par(&_scc_fork_0, 
	    &_scc_fork_1, ((_specc::fork*)0));
    }
    printf("Main Done.\n");
    return 0;
}

#line 128 "ProdCons.cc"
Main _scc_main(_IDcnt);

int main(void)
{   
    int _scc_main_return;
    
    _specc::start();
    _scc_main_return = _scc_main.main();
    _specc::end();
    return(_scc_main_return);
}

void _scc_bit4_err_handle(
    const _bit4& bit4vec)
{   
    char temp_bits[1024], *p;
    p=bit2str(2,&temp_bits[1023], bit4vec);
    _specc::abort(
	"ERROR:\t Casting a bit4 vector failed \n"
	"Bit4 vector contains X/Z values %s\n"
	"Simulation aborted.\n", p);
	
}

//////////////////////////////////////////////////////////////////////
// End of file ProdCons.cc
//////////////////////////////////////////////////////////////////////
