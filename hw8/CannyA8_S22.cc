//////////////////////////////////////////////////////////////////////
// C++ source file generated by SpecC V2.2.1
// Design: CannyA8_S22
// File:   CannyA8_S22.cc
// Time:   Mon Jun 12 00:34:40 2017
//////////////////////////////////////////////////////////////////////

// Note: User-defined include files are inlined in this file.

// Note: System-defined include files are inlined in this file.

#include "CannyA8_S22.h"


unsigned int _IDcnt = 0;
// variable definitions //////////////////////////////////////////////

unsigned int __PRF_globalCounter[197];

// channel class definitions /////////////////////////////////////////

c_img_queue::c_img_queue(const unsigned long int (&size))
    : _specc::channel(), size(size),
    buffer(0),
    n(0ul),
    p(0ul),
    wr(0ul),
    ws(0ul)
{   
}

c_img_queue::~c_img_queue(void)
{   
}

#line 53 "CannyA8_S1.sc"
void c_img_queue::cleanup(void) { if ( !n) { free(buffer); buffer = 0;
    }
}

#line 53 "CannyA8_S1.sc"
void c_img_queue::receive(unsigned char (*d)[4110080]) { while( !n) { wr++ ; _specc::wait(event(&r), ((void*)0)); wr-- ;
    }

#line 53 "CannyA8_S1.sc"
    if (n <= p) { { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) ( *d)[_scc_index_0] = (buffer[p - n])[_scc_index_0]; }
    }
    else 

#line 53 "CannyA8_S1.sc"
    {    { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) ( *d)[_scc_index_0] = (buffer[p + size - n])[_scc_index_0]; }
    }

#line 53 "CannyA8_S1.sc"
    n-- ; if (ws) { _specc::notify(event(&s), ((void*)0));
    }

#line 53 "CannyA8_S1.sc"
    cleanup();
}

#line 53 "CannyA8_S1.sc"
void c_img_queue::send(unsigned char d[4110080]) { while(n >= size) { ws++ ; _specc::wait(event(&s), ((void*)0)); ws-- ;
    }

#line 53 "CannyA8_S1.sc"
    setup(); { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) (buffer[p])[_scc_index_0] = (d)[_scc_index_0]; } p++ ; if (p >= size) { p = 0;
    }

#line 53 "CannyA8_S1.sc"
    n++ ; if (wr) { _specc::notify(event(&r), ((void*)0));
    }
}

#line 53 "CannyA8_S1.sc"
void c_img_queue::setup(void) { if ( !buffer) { unsigned char dummy[4110080]; unsigned long int i; if ( !(buffer = (unsigned char (*)[4110080])malloc(sizeof(unsigned char [4110080]) * size))) { perror("c_typed_queue"); abort();
	}

#line 53 "CannyA8_S1.sc"
	for(i = 0; i < size; i++ ) { memcpy( &buffer[i],  &dummy, sizeof(unsigned char [4110080]));
	}
    }
}

#line 86 "CannyA8_S22.cc"
c_time_queue::c_time_queue(const unsigned long int (&size))
    : _specc::channel(), size(size),
    buffer(0),
    n(0ul),
    p(0ul),
    wr(0ul),
    ws(0ul)
{   
}

c_time_queue::~c_time_queue(void)
{   
}

#line 59 "CannyA8_S1.sc"
void c_time_queue::cleanup(void) { if ( !n) { free(buffer); buffer = 0;
    }
}

#line 59 "CannyA8_S1.sc"
void c_time_queue::receive(unsigned long long int *d) { while( !n) { wr++ ; _specc::wait(event(&r), ((void*)0)); wr-- ;
    }

#line 59 "CannyA8_S1.sc"
    if (n <= p) {  *d = buffer[p - n];
    }
    else 

#line 59 "CannyA8_S1.sc"
    {     *d = buffer[p + size - n];
    }

#line 59 "CannyA8_S1.sc"
    n-- ; if (ws) { _specc::notify(event(&s), ((void*)0));
    }

#line 59 "CannyA8_S1.sc"
    cleanup();
}

#line 59 "CannyA8_S1.sc"
void c_time_queue::send(unsigned long long int d) { while(n >= size) { ws++ ; _specc::wait(event(&s), ((void*)0)); ws-- ;
    }

#line 59 "CannyA8_S1.sc"
    setup(); buffer[p] = d; p++ ; if (p >= size) { p = 0;
    }

#line 59 "CannyA8_S1.sc"
    n++ ; if (wr) { _specc::notify(event(&r), ((void*)0));
    }
}

#line 59 "CannyA8_S1.sc"
void c_time_queue::setup(void) { if ( !buffer) { unsigned long long int dummy; unsigned long int i; if ( !(buffer = (unsigned long long int *)malloc(sizeof(unsigned long long int) * size))) { perror("c_typed_queue"); abort();
	}

#line 59 "CannyA8_S1.sc"
	for(i = 0; i < size; i++ ) { memcpy( &buffer[i],  &dummy, sizeof(unsigned long long int));
	}
    }
}

// behavior class definitions ////////////////////////////////////////

#line 152 "CannyA8_S22.cc"
Stimulus::Stimulus(unsigned int _idcnt, i_img_sender (&ImgOut), i_time_sender (&StartTime))
    : _specc::behavior(_idcnt), ImgOut(ImgOut), StartTime(StartTime)
{   
}

Stimulus::~Stimulus(void)
{   
}

void Stimulus::main(void)

#line 130 "CannyA8_S1.sc"
{   
    int i = 0; int n = 0;
    char infilename[40];
    unsigned long long int t;
    char buf[21];

#line 171 "CannyA8_S22.cc"
    __PRF_globalCounter[162u]++ ;

#line 136 "CannyA8_S1.sc"
    for(i = 0; true; i++ )
    {   

#line 178 "CannyA8_S22.cc"
	__PRF_globalCounter[163u]++ ;

#line 138 "CannyA8_S1.sc"
	n = i % 20;
	sprintf(infilename, "video/EngPlaza%03d.pgm", n + 1);

#line 185 "CannyA8_S22.cc"
	__PRF_globalCounter[164u]++ ;

#line 144 "CannyA8_S1.sc"
	if (0)

#line 191 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[165u]++ ;

#line 144 "CannyA8_S1.sc"
	    printf("Reading the image %s.\n", infilename);
	}

#line 199 "CannyA8_S22.cc"
	__PRF_globalCounter[166u]++ ;

#line 145 "CannyA8_S1.sc"
	if (read_pgm_image(infilename, Image, 1520, 2704) == 0) {

#line 205 "CannyA8_S22.cc"
	    __PRF_globalCounter[167u]++ ;

#line 146 "CannyA8_S1.sc"
	    fprintf(stderr, "Error reading the input image, %s.\n", infilename);
	    exit(1);
	}

#line 213 "CannyA8_S22.cc"
	__PRF_globalCounter[168u]++ ;

#line 149 "CannyA8_S1.sc"
	ImgOut.send(Image);
	t = now();
	printf("%9s: Stimulus sent frame%3d.\n", time2str(buf, t / (1 * 1000000ull)), n + 1);
	StartTime.send(t);
    }
}

#line 224 "CannyA8_S22.cc"
int Stimulus::read_pgm_image(

#line 76 "CannyA8_S1.sc"
    const char *infilename, unsigned char *image, int rows, int cols)
{   
    struct _IO_FILE *fp;
    char buf[71];
    int c; int r;

#line 234 "CannyA8_S22.cc"
    __PRF_globalCounter[169u]++ ;

#line 86 "CannyA8_S1.sc"
    if (infilename == ((void *)0))

#line 240 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[170u]++ ;

#line 86 "CannyA8_S1.sc"
	fp = stdin;
    }
    else 

#line 87 "CannyA8_S1.sc"
    {   

#line 252 "CannyA8_S22.cc"
	__PRF_globalCounter[171u]++ ;

#line 88 "CannyA8_S1.sc"
	if ((fp = fopen(infilename, "r")) == ((void *)0)) {

#line 258 "CannyA8_S22.cc"
	    __PRF_globalCounter[172u]++ ;

#line 89 "CannyA8_S1.sc"
	    fprintf(stderr, "Error reading the file %s in read_pgm_image().\n", 
		infilename);
	    return (0);
	}
    }

#line 268 "CannyA8_S22.cc"
    __PRF_globalCounter[173u]++ ;

#line 99 "CannyA8_S1.sc"
    fgets(buf, 70, fp);

#line 274 "CannyA8_S22.cc"
    __PRF_globalCounter[174u]++ ;

#line 100 "CannyA8_S1.sc"
    if (strncmp(buf, "P5", 2) != 0) {

#line 280 "CannyA8_S22.cc"
	__PRF_globalCounter[175u]++ ;

#line 101 "CannyA8_S1.sc"
	fprintf(stderr, "The file %s is not in PGM format in ", infilename);
	fprintf(stderr, "read_pgm_image().\n");

#line 287 "CannyA8_S22.cc"
	__PRF_globalCounter[176u]++ ;

#line 103 "CannyA8_S1.sc"
	if (fp != stdin)

#line 293 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[177u]++ ;

#line 103 "CannyA8_S1.sc"
	    fclose(fp);
	}

#line 301 "CannyA8_S22.cc"
	__PRF_globalCounter[178u]++ ;

#line 104 "CannyA8_S1.sc"
	return (0);
    }

#line 308 "CannyA8_S22.cc"
    __PRF_globalCounter[179u]++ ;

#line 106 "CannyA8_S1.sc"
    do  {

#line 314 "CannyA8_S22.cc"
	__PRF_globalCounter[180u]++ ;

#line 106 "CannyA8_S1.sc"
	fgets(buf, 70, fp);
    }
    while(

#line 106 "CannyA8_S1.sc"
	buf[0] == '#');

#line 325 "CannyA8_S22.cc"
    __PRF_globalCounter[181u]++ ;

#line 107 "CannyA8_S1.sc"
    __isoc99_sscanf(buf, "%d %d",  &c,  &r);

#line 331 "CannyA8_S22.cc"
    __PRF_globalCounter[182u]++ ;

#line 108 "CannyA8_S1.sc"
    if (c != cols || r != rows) {

#line 337 "CannyA8_S22.cc"
	__PRF_globalCounter[183u]++ ;

#line 109 "CannyA8_S1.sc"
	fprintf(stderr, "The file %s is not a %d by %d image in ", infilename, cols, rows);
	fprintf(stderr, "read_pgm_image().\n");

#line 344 "CannyA8_S22.cc"
	__PRF_globalCounter[184u]++ ;

#line 111 "CannyA8_S1.sc"
	if (fp != stdin)

#line 350 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[185u]++ ;

#line 111 "CannyA8_S1.sc"
	    fclose(fp);
	}

#line 358 "CannyA8_S22.cc"
	__PRF_globalCounter[186u]++ ;

#line 112 "CannyA8_S1.sc"
	return (0);
    }

#line 365 "CannyA8_S22.cc"
    __PRF_globalCounter[187u]++ ;

#line 114 "CannyA8_S1.sc"
    do  {

#line 371 "CannyA8_S22.cc"
	__PRF_globalCounter[188u]++ ;

#line 114 "CannyA8_S1.sc"
	fgets(buf, 70, fp);
    }
    while(

#line 114 "CannyA8_S1.sc"
	buf[0] == '#');

#line 382 "CannyA8_S22.cc"
    __PRF_globalCounter[189u]++ ;

#line 119 "CannyA8_S1.sc"
    if ((unsigned int)rows != fread(image, cols, rows, fp)) {

#line 388 "CannyA8_S22.cc"
	__PRF_globalCounter[190u]++ ;

#line 120 "CannyA8_S1.sc"
	fprintf(stderr, "Error reading the image data in read_pgm_image().\n");

#line 394 "CannyA8_S22.cc"
	__PRF_globalCounter[191u]++ ;

#line 121 "CannyA8_S1.sc"
	if (fp != stdin)

#line 400 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[192u]++ ;

#line 121 "CannyA8_S1.sc"
	    fclose(fp);
	}

#line 408 "CannyA8_S22.cc"
	__PRF_globalCounter[193u]++ ;

#line 122 "CannyA8_S1.sc"
	return (0);
    }

#line 415 "CannyA8_S22.cc"
    __PRF_globalCounter[194u]++ ;

#line 125 "CannyA8_S1.sc"
    if (fp != stdin)

#line 421 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[195u]++ ;

#line 125 "CannyA8_S1.sc"
	fclose(fp);
    }

#line 429 "CannyA8_S22.cc"
    __PRF_globalCounter[196u]++ ;

#line 126 "CannyA8_S1.sc"
    return (1);
}

#line 436 "CannyA8_S22.cc"
Monitor::Monitor(unsigned int _idcnt, i_img_receiver (&ImgIn), i_time_receiver (&StartTime))
    : _specc::behavior(_idcnt), ImgIn(ImgIn), StartTime(StartTime)
{   
}

Monitor::~Monitor(void)
{   
}

void Monitor::main(void)

#line 207 "CannyA8_S1.sc"
{   
    char outfilename[128];
    int i; int n;
    unsigned long long int d = 0ull; unsigned long long int t; unsigned long long int t1; unsigned long long int t2; unsigned long long int t3 = 0ull;
    char buf1[21]; char buf2[21];
    float FPS; float Ts;

#line 456 "CannyA8_S22.cc"
    __PRF_globalCounter[104u]++ ;

#line 214 "CannyA8_S1.sc"
    for(i = 0; i < 20; i++ )
    {   

#line 463 "CannyA8_S22.cc"
	__PRF_globalCounter[105u]++ ;

#line 216 "CannyA8_S1.sc"
	ImgIn.receive( &EdgeImage);
	StartTime.receive( &t1);
	t2 = now();
	t = t2 - t1;

	d = t2 - t3;

	Ts = d / (1 * 1000000ull);
	Ts = Ts / (1 * 1000000ull);
	FPS = 1 / Ts;
	n = i % 20;
	printf("%9s: Monitor received frame%3d with%9s us delay.\n", 
	    time2str(buf2, t2 / (1 * 1000000ull)), n + 1, time2str(buf1, t / (1 * 1000000ull)));
	printf("%9s:  %f useconds after previous frame, %f FPS\n", 
	    time2str(buf2, t2 / (1 * 1000000ull)), Ts, FPS);




	sprintf(outfilename, "EngPlaza%03d_edges.pgm", n + 1);

#line 488 "CannyA8_S22.cc"
	__PRF_globalCounter[106u]++ ;

#line 236 "CannyA8_S1.sc"
	if (0)

#line 494 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[107u]++ ;

#line 236 "CannyA8_S1.sc"
	    printf("Writing the edge image in the file %s.\n", outfilename);
	}

#line 502 "CannyA8_S22.cc"
	__PRF_globalCounter[108u]++ ;

#line 237 "CannyA8_S1.sc"
	if (write_pgm_image(outfilename, EdgeImage, 1520, 2704, "", 255) == 0) {

#line 508 "CannyA8_S22.cc"
	    __PRF_globalCounter[109u]++ ;

#line 238 "CannyA8_S1.sc"
	    fprintf(stderr, "Error writing the edge image, %s.\n", outfilename);
	    exit(1);
	}

#line 516 "CannyA8_S22.cc"
	__PRF_globalCounter[110u]++ ;

#line 241 "CannyA8_S1.sc"
	t3 = now();
    }

#line 523 "CannyA8_S22.cc"
    __PRF_globalCounter[111u]++ ;

#line 243 "CannyA8_S1.sc"
    printf("%9s: Monitor exits simulation.\n", time2str(buf2, t2 / (1 * 1000000ull)));
    sim_exit(0);
}

#line 531 "CannyA8_S22.cc"
int Monitor::write_pgm_image(

#line 167 "CannyA8_S1.sc"
    const char *outfilename, unsigned char *image, int rows, 
    int cols, const char *comment, int maxval)
{   
    struct _IO_FILE *fp;

#line 540 "CannyA8_S22.cc"
    __PRF_globalCounter[112u]++ ;

#line 176 "CannyA8_S1.sc"
    if (outfilename == ((void *)0))

#line 546 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[113u]++ ;

#line 176 "CannyA8_S1.sc"
	fp = stdout;
    }
    else 

#line 177 "CannyA8_S1.sc"
    {   

#line 558 "CannyA8_S22.cc"
	__PRF_globalCounter[114u]++ ;

#line 178 "CannyA8_S1.sc"
	if ((fp = fopen(outfilename, "w")) == ((void *)0)) {

#line 564 "CannyA8_S22.cc"
	    __PRF_globalCounter[115u]++ ;

#line 179 "CannyA8_S1.sc"
	    fprintf(stderr, "Error writing the file %s in write_pgm_image().\n", 
		outfilename);
	    return (0);
	}
    }

#line 574 "CannyA8_S22.cc"
    __PRF_globalCounter[116u]++ ;

#line 188 "CannyA8_S1.sc"
    fprintf(fp, "P5\n%d %d\n", cols, rows);

#line 580 "CannyA8_S22.cc"
    __PRF_globalCounter[117u]++ ;

#line 189 "CannyA8_S1.sc"
    if (comment != ((void *)0))

#line 586 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[118u]++ ;

#line 190 "CannyA8_S1.sc"
	if (strlen(comment) <= 70)

#line 593 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[119u]++ ;

#line 190 "CannyA8_S1.sc"
	    fprintf(fp, "# %s\n", comment);
	}
    }

#line 602 "CannyA8_S22.cc"
    __PRF_globalCounter[120u]++ ;

#line 191 "CannyA8_S1.sc"
    fprintf(fp, "%d\n", maxval);

#line 608 "CannyA8_S22.cc"
    __PRF_globalCounter[121u]++ ;

#line 196 "CannyA8_S1.sc"
    if ((unsigned int)rows != fwrite(image, cols, rows, fp)) {

#line 614 "CannyA8_S22.cc"
	__PRF_globalCounter[122u]++ ;

#line 197 "CannyA8_S1.sc"
	fprintf(stderr, "Error writing the image data in write_pgm_image().\n");

#line 620 "CannyA8_S22.cc"
	__PRF_globalCounter[123u]++ ;

#line 198 "CannyA8_S1.sc"
	if (fp != stdout)

#line 626 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[124u]++ ;

#line 198 "CannyA8_S1.sc"
	    fclose(fp);
	}

#line 634 "CannyA8_S22.cc"
	__PRF_globalCounter[125u]++ ;

#line 199 "CannyA8_S1.sc"
	return (0);
    }

#line 641 "CannyA8_S22.cc"
    __PRF_globalCounter[126u]++ ;

#line 202 "CannyA8_S1.sc"
    if (fp != stdout)

#line 647 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[127u]++ ;

#line 202 "CannyA8_S1.sc"
	fclose(fp);
    }

#line 655 "CannyA8_S22.cc"
    __PRF_globalCounter[128u]++ ;

#line 203 "CannyA8_S1.sc"
    return (1);
}

#line 662 "CannyA8_S22.cc"
DataIn::DataIn(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut))
    : _specc::behavior(_idcnt), ImgIn(ImgIn), ImgOut(ImgOut)
{   
}

DataIn::~DataIn(void)
{   
}

void DataIn::main()

#line 253 "CannyA8_S1.sc"
{   

#line 677 "CannyA8_S22.cc"
    __PRF_globalCounter[63u]++ ;

#line 254 "CannyA8_S1.sc"
    while(1)
    {   

#line 684 "CannyA8_S22.cc"
	__PRF_globalCounter[64u]++ ;

#line 256 "CannyA8_S1.sc"
	ImgIn.receive( &Image);
	ImgOut.send(Image);
    }
}

#line 693 "CannyA8_S22.cc"
DataOut::DataOut(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut))
    : _specc::behavior(_idcnt), ImgIn(ImgIn), ImgOut(ImgOut)
{   
}

DataOut::~DataOut(void)
{   
}

void DataOut::main()

#line 267 "CannyA8_S1.sc"
{   

#line 708 "CannyA8_S22.cc"
    __PRF_globalCounter[65u]++ ;

#line 268 "CannyA8_S1.sc"
    while(1)
    {   

#line 715 "CannyA8_S22.cc"
	__PRF_globalCounter[66u]++ ;

#line 270 "CannyA8_S1.sc"
	ImgIn.receive( &Image);
	ImgOut.send(Image);
    }
}

#line 724 "CannyA8_S22.cc"
Receive_Image::Receive_Image(unsigned int _idcnt, i_img_receiver (&ImgIn), unsigned char (&image)[4110080])
    : _specc::behavior(_idcnt), ImgIn(ImgIn), image(image)
{   
}

Receive_Image::~Receive_Image(void)
{   
}

void Receive_Image::main(void)

#line 279 "CannyA8_S1.sc"
{   
    unsigned char Image[4110080];

#line 740 "CannyA8_S22.cc"
    __PRF_globalCounter[161u]++ ;

#line 282 "CannyA8_S1.sc"
    _specc::waitfor((0 * 1000000000ull) / 20);
    ImgIn.receive( &Image);
    { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) (image)[_scc_index_0] = (Image)[_scc_index_0]; }
}

#line 749 "CannyA8_S22.cc"
Gaussian_Kernel::Gaussian_Kernel(unsigned int _idcnt, float (&gaussian_kernel)[21], int (&kernel_center))
    : _specc::behavior(_idcnt), gaussian_kernel(gaussian_kernel), kernel_center(kernel_center)
{   
}

Gaussian_Kernel::~Gaussian_Kernel(void)
{   
}

void Gaussian_Kernel::main(void)

#line 323 "CannyA8_S1.sc"
{   
    int windowsize;
    int center;
    float kernel[21] = { 
      0.000000e+00f };

#line 768 "CannyA8_S22.cc"
    __PRF_globalCounter[82u]++ ;

#line 332 "CannyA8_S1.sc"
    _specc::waitfor((0 * 1000000000ull) / 20);

#line 774 "CannyA8_S22.cc"
    __PRF_globalCounter[83u]++ ;

#line 333 "CannyA8_S1.sc"
    if (0)

#line 780 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[84u]++ ;

#line 333 "CannyA8_S1.sc"
	printf("   Computing the gaussian smoothing kernel.\n");
    }

#line 788 "CannyA8_S22.cc"
    __PRF_globalCounter[85u]++ ;

#line 334 "CannyA8_S1.sc"
    make_gaussian_kernel(6.000000000000000e-01, kernel,  &windowsize);
    center = windowsize / 2;
    { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<21;_scc_index_0++) (gaussian_kernel)[_scc_index_0] = (kernel)[_scc_index_0]; }
    kernel_center = center;
}

#line 798 "CannyA8_S22.cc"
void Gaussian_Kernel::make_gaussian_kernel(

#line 296 "CannyA8_S1.sc"
    float sigma, float *kernel, int *windowsize)
{   
    int center; int i;
    float fx; float sum = 0.000000e+00f; float x;

#line 807 "CannyA8_S22.cc"
    __PRF_globalCounter[86u]++ ;

#line 301 "CannyA8_S1.sc"
     *windowsize = 1 + 2 * ceil(2.500000000000000e+00 * sigma);
    center = ( *windowsize) / 2;

#line 814 "CannyA8_S22.cc"
    __PRF_globalCounter[87u]++ ;

#line 304 "CannyA8_S1.sc"
    if (0)

#line 820 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[88u]++ ;

#line 304 "CannyA8_S1.sc"
	printf("      The kernel has %d elements.\n",  *windowsize);
    }

#line 828 "CannyA8_S22.cc"
    __PRF_globalCounter[89u]++ ;

#line 306 "CannyA8_S1.sc"
    for(i = 0; i < ( *windowsize); i++ ) {

#line 834 "CannyA8_S22.cc"
	__PRF_globalCounter[90u]++ ;

#line 307 "CannyA8_S1.sc"
	x = (float)(i - center);
	fx = pow(2.718280000000000e+00,  -5.000000000000000e-01 * x * x / (sigma * sigma)) / (sigma * sqrt(6.283185300000000e+00));
	kernel[i] = fx;
	sum += fx;
    }

#line 844 "CannyA8_S22.cc"
    __PRF_globalCounter[91u]++ ;

#line 313 "CannyA8_S1.sc"
    for(i = 0; i < ( *windowsize); i++ )

#line 850 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[92u]++ ;

#line 313 "CannyA8_S1.sc"
	kernel[i] /= sum;
    }

#line 858 "CannyA8_S22.cc"
    __PRF_globalCounter[93u]++ ;

#line 315 "CannyA8_S1.sc"
    if (0) {

#line 864 "CannyA8_S22.cc"
	__PRF_globalCounter[94u]++ ;

#line 316 "CannyA8_S1.sc"
	printf("The filter coefficients are:\n");

#line 870 "CannyA8_S22.cc"
	__PRF_globalCounter[95u]++ ;

#line 317 "CannyA8_S1.sc"
	for(i = 0; i < ( *windowsize); i++ )

#line 876 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[96u]++ ;

#line 318 "CannyA8_S1.sc"
	    printf("kernel[%d] = %f\n", i, kernel[i]);
	}
    }
}

#line 886 "CannyA8_S22.cc"
BlurX_Slice::BlurX_Slice(unsigned int _idcnt, unsigned char (&image)[4110080], float (&kernel)[21], int (&center), int (&rowStart), int (&rowEnd), float (&tempim)[4110080])
    : _specc::behavior(_idcnt), image(image), kernel(kernel), center(center), rowStart(rowStart), rowEnd(rowEnd), tempim(tempim)
{   
}

BlurX_Slice::~BlurX_Slice(void)
{   
}

void BlurX_Slice::blur_x(

#line 344 "CannyA8_S1.sc"
    int rows, int cols)
{   
    int c; int cc; int r;
    float dot;
    float sum;

#line 905 "CannyA8_S22.cc"
    __PRF_globalCounter[40u]++ ;

#line 353 "CannyA8_S1.sc"
    if (0)

#line 911 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[41u]++ ;

#line 353 "CannyA8_S1.sc"
	printf("   Bluring the image in the X-direction.\n");
    }

#line 919 "CannyA8_S22.cc"
    __PRF_globalCounter[42u]++ ;

#line 354 "CannyA8_S1.sc"
    for(r = rowStart; r < rowEnd; r++ ) {

#line 925 "CannyA8_S22.cc"
	__PRF_globalCounter[43u]++ ;

#line 355 "CannyA8_S1.sc"
	for(c = 0; c < cols; c++ ) {

#line 931 "CannyA8_S22.cc"
	    __PRF_globalCounter[44u]++ ;

#line 356 "CannyA8_S1.sc"
	    dot = 0.000000000000000e+00;
	    sum = 0.000000000000000e+00;

#line 938 "CannyA8_S22.cc"
	    __PRF_globalCounter[45u]++ ;

#line 358 "CannyA8_S1.sc"
	    for(cc = ( -center); cc <= center; cc++ ) {

#line 944 "CannyA8_S22.cc"
		__PRF_globalCounter[46u]++ ;

#line 359 "CannyA8_S1.sc"
		if (((c + cc) >= 0) && ((c + cc) < cols)) {

#line 950 "CannyA8_S22.cc"
		    __PRF_globalCounter[47u]++ ;

#line 360 "CannyA8_S1.sc"
		    dot += (float)image[r * cols + (c + cc)] * kernel[center + cc];
		    sum += kernel[center + cc];
		}
	    }

#line 959 "CannyA8_S22.cc"
	    __PRF_globalCounter[48u]++ ;

#line 364 "CannyA8_S1.sc"
	    tempim[r * cols + c] = dot / sum;
	}
    }
}

#line 968 "CannyA8_S22.cc"
void BlurX_Slice::main(void)

#line 370 "CannyA8_S1.sc"
{   

#line 974 "CannyA8_S22.cc"
    __PRF_globalCounter[49u]++ ;

#line 371 "CannyA8_S1.sc"
    _specc::waitfor(((41680 * 1000000000ull) / 20) / 8);
    blur_x(1520, 2704);
}

#line 982 "CannyA8_S22.cc"
BlurX::BlurX(unsigned int _idcnt, unsigned char (&image)[4110080], float (&kernel)[21], int (&center), float (&tempim)[4110080])
    : _specc::behavior(_idcnt), image(image), kernel(kernel), center(center), tempim(tempim),
    _scc_const_port_0(0),
    _scc_const_port_1(190),
    _scc_const_port_2(190),
    _scc_const_port_3(380),
    _scc_const_port_4(380),
    _scc_const_port_5(570),
    _scc_const_port_6(570),
    _scc_const_port_7(760),
    _scc_const_port_8(760),
    _scc_const_port_9(950),
    _scc_const_port_10(950),
    _scc_const_port_11(1140),
    _scc_const_port_12(1140),
    _scc_const_port_13(1330),
    _scc_const_port_14(1330),
    _scc_const_port_15(1520),
    sliceX1(++_IDcnt, image, kernel, center, _scc_const_port_0, _scc_const_port_1, tempim),
    sliceX2(++_IDcnt, image, kernel, center, _scc_const_port_2, _scc_const_port_3, tempim),
    sliceX3(++_IDcnt, image, kernel, center, _scc_const_port_4, _scc_const_port_5, tempim),
    sliceX4(++_IDcnt, image, kernel, center, _scc_const_port_6, _scc_const_port_7, tempim),
    sliceX5(++_IDcnt, image, kernel, center, _scc_const_port_8, _scc_const_port_9, tempim),
    sliceX6(++_IDcnt, image, kernel, center, _scc_const_port_10, _scc_const_port_11, tempim),
    sliceX7(++_IDcnt, image, kernel, center, _scc_const_port_12, _scc_const_port_13, tempim),
    sliceX8(++_IDcnt, image, kernel, center, _scc_const_port_14, _scc_const_port_15, tempim)
{   
}

BlurX::~BlurX(void)
{   
}

void BlurX::main(void)

#line 389 "CannyA8_S1.sc"
{   
    { _specc::fork _scc_fork_0(&sliceX1), _scc_fork_1(&sliceX2), _scc_fork_2(&sliceX3), _scc_fork_3(&sliceX4), _scc_fork_4(&sliceX5), _scc_fork_5(&sliceX6), _scc_fork_6(&sliceX7), _scc_fork_7(&sliceX8); _specc::par(

	    &_scc_fork_0, 
	    &_scc_fork_1, 
	    &_scc_fork_2, 
	    &_scc_fork_3, 
	    &_scc_fork_4, 
	    &_scc_fork_5, 
	    &_scc_fork_6, 
	    &_scc_fork_7, ((_specc::fork*)0));
    }
}

#line 1033 "CannyA8_S22.cc"
BlurY_Slice::BlurY_Slice(unsigned int _idcnt, float (&tempim)[4110080], float (&kernel)[21], int (&center), int (&colStart), int (&colEnd), short int (&smoothedim)[4110080])
    : _specc::behavior(_idcnt), tempim(tempim), kernel(kernel), center(center), colStart(colStart), colEnd(colEnd), smoothedim(smoothedim)
{   
}

BlurY_Slice::~BlurY_Slice(void)
{   
}

void BlurY_Slice::blur_y(

#line 407 "CannyA8_S1.sc"
    int rows, int cols)
{   
    int c; int r; int rr;
    float dot;
    float sum;

#line 1052 "CannyA8_S22.cc"
    __PRF_globalCounter[51u]++ ;

#line 416 "CannyA8_S1.sc"
    if (0)

#line 1058 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[52u]++ ;

#line 416 "CannyA8_S1.sc"
	printf("   Bluring the image in the Y-direction.\n");
    }

#line 1066 "CannyA8_S22.cc"
    __PRF_globalCounter[53u]++ ;

#line 417 "CannyA8_S1.sc"
    for(c = colStart; c < colEnd; c++ ) {

#line 1072 "CannyA8_S22.cc"
	__PRF_globalCounter[54u]++ ;

#line 418 "CannyA8_S1.sc"
	for(r = 0; r < rows; r++ ) {

#line 1078 "CannyA8_S22.cc"
	    __PRF_globalCounter[55u]++ ;

#line 419 "CannyA8_S1.sc"
	    sum = 0.000000000000000e+00;
	    dot = 0.000000000000000e+00;

#line 1085 "CannyA8_S22.cc"
	    __PRF_globalCounter[56u]++ ;

#line 421 "CannyA8_S1.sc"
	    for(rr = ( -center); rr <= center; rr++ ) {

#line 1091 "CannyA8_S22.cc"
		__PRF_globalCounter[57u]++ ;

#line 422 "CannyA8_S1.sc"
		if (((r + rr) >= 0) && ((r + rr) < rows)) {

#line 1097 "CannyA8_S22.cc"
		    __PRF_globalCounter[58u]++ ;

#line 423 "CannyA8_S1.sc"
		    dot += tempim[(r + rr) * cols + c] * kernel[center + rr];
		    sum += kernel[center + rr];
		}
	    }

#line 1106 "CannyA8_S22.cc"
	    __PRF_globalCounter[59u]++ ;

#line 427 "CannyA8_S1.sc"
	    smoothedim[r * cols + c] = (short int)(dot * 9.000000000000000e+01 / sum + 5.000000000000000e-01);
	}
    }
}

#line 1115 "CannyA8_S22.cc"
void BlurY_Slice::main(void)

#line 433 "CannyA8_S1.sc"
{   

#line 1121 "CannyA8_S22.cc"
    __PRF_globalCounter[60u]++ ;

#line 434 "CannyA8_S1.sc"
    _specc::waitfor(((43740 * 1000000000ull) / 20) / 8);
    blur_y(1520, 2704);
}

#line 1129 "CannyA8_S22.cc"
BlurY::BlurY(unsigned int _idcnt, float (&tempim)[4110080], float (&kernel)[21], int (&center), short int (&smoothedim)[4110080])
    : _specc::behavior(_idcnt), tempim(tempim), kernel(kernel), center(center), smoothedim(smoothedim),
    _scc_const_port_0(0),
    _scc_const_port_1(338),
    _scc_const_port_2(338),
    _scc_const_port_3(676),
    _scc_const_port_4(676),
    _scc_const_port_5(1014),
    _scc_const_port_6(1014),
    _scc_const_port_7(1352),
    _scc_const_port_8(1352),
    _scc_const_port_9(1690),
    _scc_const_port_10(1690),
    _scc_const_port_11(2028),
    _scc_const_port_12(2028),
    _scc_const_port_13(2366),
    _scc_const_port_14(2366),
    _scc_const_port_15(2704),
    sliceY1(++_IDcnt, tempim, kernel, center, _scc_const_port_0, _scc_const_port_1, smoothedim),
    sliceY2(++_IDcnt, tempim, kernel, center, _scc_const_port_2, _scc_const_port_3, smoothedim),
    sliceY3(++_IDcnt, tempim, kernel, center, _scc_const_port_4, _scc_const_port_5, smoothedim),
    sliceY4(++_IDcnt, tempim, kernel, center, _scc_const_port_6, _scc_const_port_7, smoothedim),
    sliceY5(++_IDcnt, tempim, kernel, center, _scc_const_port_8, _scc_const_port_9, smoothedim),
    sliceY6(++_IDcnt, tempim, kernel, center, _scc_const_port_10, _scc_const_port_11, smoothedim),
    sliceY7(++_IDcnt, tempim, kernel, center, _scc_const_port_12, _scc_const_port_13, smoothedim),
    sliceY8(++_IDcnt, tempim, kernel, center, _scc_const_port_14, _scc_const_port_15, smoothedim)
{   
}

BlurY::~BlurY(void)
{   
}

void BlurY::main(void)

#line 452 "CannyA8_S1.sc"
{   
    { _specc::fork _scc_fork_0(&sliceY1), _scc_fork_1(&sliceY2), _scc_fork_2(&sliceY3), _scc_fork_3(&sliceY4), _scc_fork_4(&sliceY5), _scc_fork_5(&sliceY6), _scc_fork_6(&sliceY7), _scc_fork_7(&sliceY8); _specc::par(

	    &_scc_fork_0, 
	    &_scc_fork_1, 
	    &_scc_fork_2, 
	    &_scc_fork_3, 
	    &_scc_fork_4, 
	    &_scc_fork_5, 
	    &_scc_fork_6, 
	    &_scc_fork_7, ((_specc::fork*)0));
    }
}

#line 1180 "CannyA8_S22.cc"
Gaussian_Smooth::Gaussian_Smooth(unsigned int _idcnt, i_img_receiver (&ImgIn), unsigned char (&image)[4110080], float (&kernel)[21], int (&center))
    : _specc::behavior(_idcnt), ImgIn(ImgIn), image(image), kernel(kernel), center(center),
    gauss(_IDcnt, kernel, center),
    receive(_IDcnt, ImgIn, image)
{   
}

Gaussian_Smooth::~Gaussian_Smooth(void)
{   
}

void Gaussian_Smooth::main(void)

#line 479 "CannyA8_S1.sc"
{   

#line 1197 "CannyA8_S22.cc"
    __PRF_globalCounter[97u]++ ;

#line 480 "CannyA8_S1.sc"
    receive.main();
    gauss.main();
}

#line 1205 "CannyA8_S22.cc"
Derivative_X_Y::Derivative_X_Y(unsigned int _idcnt, short int (&smoothedim)[4110080], short int (&delta_x)[4110080], short int (&delta_y)[4110080])
    : _specc::behavior(_idcnt), smoothedim(smoothedim), delta_x(delta_x), delta_y(delta_y)
{   
}

Derivative_X_Y::~Derivative_X_Y(void)
{   
}

void Derivative_X_Y::derivative_x_y(

#line 501 "CannyA8_S1.sc"
    int rows, int cols)
{   
    int c; int pos; int r;

#line 1222 "CannyA8_S22.cc"
    __PRF_globalCounter[67u]++ ;

#line 509 "CannyA8_S1.sc"
    if (0)

#line 1228 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[68u]++ ;

#line 509 "CannyA8_S1.sc"
	printf("   Computing the X-direction derivative.\n");
    }

#line 1236 "CannyA8_S22.cc"
    __PRF_globalCounter[69u]++ ;

#line 510 "CannyA8_S1.sc"
    for(r = 0; r < rows; r++ ) {

#line 1242 "CannyA8_S22.cc"
	__PRF_globalCounter[70u]++ ;

#line 511 "CannyA8_S1.sc"
	pos = r * cols;
	delta_x[pos] = smoothedim[pos + 1] - smoothedim[pos];
	pos++ ;

#line 1250 "CannyA8_S22.cc"
	__PRF_globalCounter[71u]++ ;

#line 514 "CannyA8_S1.sc"
	for(c = 1; c < (cols - 1); c++  , pos++ ) {

#line 1256 "CannyA8_S22.cc"
	    __PRF_globalCounter[72u]++ ;

#line 515 "CannyA8_S1.sc"
	    delta_x[pos] = smoothedim[pos + 1] - smoothedim[pos - 1];
	}

#line 1263 "CannyA8_S22.cc"
	__PRF_globalCounter[73u]++ ;

#line 517 "CannyA8_S1.sc"
	delta_x[pos] = smoothedim[pos] - smoothedim[pos - 1];
    }

#line 1270 "CannyA8_S22.cc"
    __PRF_globalCounter[74u]++ ;

#line 524 "CannyA8_S1.sc"
    if (0)

#line 1276 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[75u]++ ;

#line 524 "CannyA8_S1.sc"
	printf("   Computing the Y-direction derivative.\n");
    }

#line 1284 "CannyA8_S22.cc"
    __PRF_globalCounter[76u]++ ;

#line 525 "CannyA8_S1.sc"
    for(c = 0; c < cols; c++ ) {

#line 1290 "CannyA8_S22.cc"
	__PRF_globalCounter[77u]++ ;

#line 526 "CannyA8_S1.sc"
	pos = c;
	delta_y[pos] = smoothedim[pos + cols] - smoothedim[pos];
	pos += cols;

#line 1298 "CannyA8_S22.cc"
	__PRF_globalCounter[78u]++ ;

#line 529 "CannyA8_S1.sc"
	for(r = 1; r < (rows - 1); r++  , pos += cols) {

#line 1304 "CannyA8_S22.cc"
	    __PRF_globalCounter[79u]++ ;

#line 530 "CannyA8_S1.sc"
	    delta_y[pos] = smoothedim[pos + cols] - smoothedim[pos - cols];
	}

#line 1311 "CannyA8_S22.cc"
	__PRF_globalCounter[80u]++ ;

#line 532 "CannyA8_S1.sc"
	delta_y[pos] = smoothedim[pos] - smoothedim[pos - cols];
    }
}

#line 1319 "CannyA8_S22.cc"
void Derivative_X_Y::main(void)

#line 537 "CannyA8_S1.sc"
{   

#line 1325 "CannyA8_S22.cc"
    __PRF_globalCounter[81u]++ ;

#line 538 "CannyA8_S1.sc"
    _specc::waitfor((5340 * 1000000000ull) / 20);
    derivative_x_y(1520, 2704);
}

#line 1333 "CannyA8_S22.cc"
Magnitude_X_Y::Magnitude_X_Y(unsigned int _idcnt, short int (&delta_x)[4110080], short int (&delta_y)[4110080], short int (&magnitude)[4110080], short int (&delta_xThrough)[4110080], short int (&delta_yThrough)[4110080])
    : _specc::behavior(_idcnt), delta_x(delta_x), delta_y(delta_y), magnitude(magnitude), delta_xThrough(delta_xThrough), delta_yThrough(delta_yThrough)
{   
}

Magnitude_X_Y::~Magnitude_X_Y(void)
{   
}

void Magnitude_X_Y::magnitude_x_y(

#line 553 "CannyA8_S1.sc"
    int rows, int cols)
{   
    int c; int pos; int r; int sq1; int sq2;

#line 1350 "CannyA8_S22.cc"
    __PRF_globalCounter[98u]++ ;

#line 557 "CannyA8_S1.sc"
    for(r = 0 , pos = 0; r < rows; r++ ) {

#line 1356 "CannyA8_S22.cc"
	__PRF_globalCounter[99u]++ ;

#line 558 "CannyA8_S1.sc"
	for(c = 0; c < cols; c++  , pos++ ) {

#line 1362 "CannyA8_S22.cc"
	    __PRF_globalCounter[100u]++ ;

#line 559 "CannyA8_S1.sc"
	    sq1 = (int)delta_x[pos] * (int)delta_x[pos];
	    sq2 = (int)delta_y[pos] * (int)delta_y[pos];
	    magnitude[pos] = (short int)(5.000000000000000e-01 + sqrt((float)sq1 + (float)sq2));
	}
    }
}

#line 1373 "CannyA8_S22.cc"
void Magnitude_X_Y::main(void)

#line 567 "CannyA8_S1.sc"
{   

#line 1379 "CannyA8_S22.cc"
    __PRF_globalCounter[101u]++ ;

#line 568 "CannyA8_S1.sc"
    _specc::waitfor((5340 * 1000000000ull) / 20);
    magnitude_x_y(1520, 2704);
    { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) (delta_xThrough)[_scc_index_0] = (delta_x)[_scc_index_0]; }
    { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) (delta_yThrough)[_scc_index_0] = (delta_y)[_scc_index_0]; }
}

#line 1389 "CannyA8_S22.cc"
Non_Max_Supp::Non_Max_Supp(unsigned int _idcnt, short int (&gradx)[4110080], short int (&grady)[4110080], short int (&mag)[4110080], unsigned char (&nms)[4110080], short int (&magThrough)[4110080])
    : _specc::behavior(_idcnt), gradx(gradx), grady(grady), mag(mag), nms(nms), magThrough(magThrough)
{   
}

Non_Max_Supp::~Non_Max_Supp(void)
{   
}

void Non_Max_Supp::main(void)

#line 783 "CannyA8_S1.sc"
{   
    unsigned char result[4110080];

#line 1405 "CannyA8_S22.cc"
    __PRF_globalCounter[129u]++ ;

#line 786 "CannyA8_S1.sc"
    _specc::waitfor((27200 * 1000000000ull) / 20);
    non_max_supp(1520, 2704, result);
    { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) (nms)[_scc_index_0] = (result)[_scc_index_0]; }
    { unsigned int _scc_index_0; for(_scc_index_0=0;_scc_index_0<4110080;_scc_index_0++) (magThrough)[_scc_index_0] = (mag)[_scc_index_0]; }
}

#line 1415 "CannyA8_S22.cc"
void Non_Max_Supp::non_max_supp(

#line 585 "CannyA8_S1.sc"
    int nrows, int ncols, unsigned char *result)
{   
    int colcount; int count; int rowcount;
    short int *magptr; short int *magrowptr;
    short int *gxptr; short int *gxrowptr;
    short int *gyptr; short int *gyrowptr; short int z1; short int z2;
    short int gx; short int gy; short int m00;
    float mag1; float mag2; float xperp; float yperp;
    unsigned char *resultptr; unsigned char *resultrowptr;

#line 1429 "CannyA8_S22.cc"
    __PRF_globalCounter[130u]++ ;

#line 598 "CannyA8_S1.sc"
    for(count = 0 , resultrowptr = result , resultptr = result + ncols * (nrows - 1); 
	count < ncols; resultptr++  , resultrowptr++  , count++ ) {

#line 1436 "CannyA8_S22.cc"
	__PRF_globalCounter[131u]++ ;

#line 600 "CannyA8_S1.sc"
	 *resultrowptr =  *resultptr = (unsigned char)0;
    }

#line 1443 "CannyA8_S22.cc"
    __PRF_globalCounter[132u]++ ;

#line 603 "CannyA8_S1.sc"
    for(count = 0 , resultptr = result , resultrowptr = result + ncols - 1; 
	count < nrows; count++  , resultptr += ncols , resultrowptr += ncols) {

#line 1450 "CannyA8_S22.cc"
	__PRF_globalCounter[133u]++ ;

#line 605 "CannyA8_S1.sc"
	 *resultptr =  *resultrowptr = (unsigned char)0;
    }

#line 1457 "CannyA8_S22.cc"
    __PRF_globalCounter[134u]++ ;

#line 611 "CannyA8_S1.sc"
    for(rowcount = 1 , magrowptr = mag + ncols + 1 , gxrowptr = gradx + ncols + 1 , 
	gyrowptr = grady + ncols + 1 , resultrowptr = result + ncols + 1; 
	rowcount <= nrows - 2; 
	rowcount++  , magrowptr += ncols , gyrowptr += ncols , gxrowptr += ncols , 
	resultrowptr += ncols) {

#line 1467 "CannyA8_S22.cc"
	__PRF_globalCounter[135u]++ ;

#line 616 "CannyA8_S1.sc"
	for(colcount = 1 , magptr = magrowptr , gxptr = gxrowptr , gyptr = gyrowptr , 
	    resultptr = resultrowptr; colcount <= ncols - 2; 
	    colcount++  , magptr++  , gxptr++  , gyptr++  , resultptr++ ) {

#line 1475 "CannyA8_S22.cc"
	    __PRF_globalCounter[136u]++ ;

#line 619 "CannyA8_S1.sc"
	    m00 =  *magptr;

#line 1481 "CannyA8_S22.cc"
	    __PRF_globalCounter[137u]++ ;

#line 620 "CannyA8_S1.sc"
	    if (m00 == 0) {

#line 1487 "CannyA8_S22.cc"
		__PRF_globalCounter[138u]++ ;

#line 621 "CannyA8_S1.sc"
		 *resultptr = (unsigned char)255;
	    }
	    else  {

#line 1495 "CannyA8_S22.cc"
		__PRF_globalCounter[139u]++ ;

#line 624 "CannyA8_S1.sc"
		xperp =  -(gx =  *gxptr) / ((float)m00);
		yperp = (gy =  *gyptr) / ((float)m00);
	    }

#line 1503 "CannyA8_S22.cc"
	    __PRF_globalCounter[140u]++ ;

#line 628 "CannyA8_S1.sc"
	    if (gx >= 0) {

#line 1509 "CannyA8_S22.cc"
		__PRF_globalCounter[141u]++ ;

#line 629 "CannyA8_S1.sc"
		if (gy >= 0) {

#line 1515 "CannyA8_S22.cc"
		    __PRF_globalCounter[142u]++ ;

#line 630 "CannyA8_S1.sc"
		    if (gx >= gy)
		    {   

#line 1522 "CannyA8_S22.cc"
			__PRF_globalCounter[143u]++ ;

#line 634 "CannyA8_S1.sc"
			z1 =  *(magptr - 1);
			z2 =  *(magptr - ncols - 1);

			mag1 = (m00 - z1) * xperp + (z2 - z1) * yperp;


			z1 =  *(magptr + 1);
			z2 =  *(magptr + ncols + 1);

			mag2 = (m00 - z1) * xperp + (z2 - z1) * yperp;
		    }
		    else 
		    {   

#line 1540 "CannyA8_S22.cc"
			__PRF_globalCounter[144u]++ ;

#line 649 "CannyA8_S1.sc"
			z1 =  *(magptr - ncols);
			z2 =  *(magptr - ncols - 1);

			mag1 = (z1 - z2) * xperp + (z1 - m00) * yperp;


			z1 =  *(magptr + ncols);
			z2 =  *(magptr + ncols + 1);

			mag2 = (z1 - z2) * xperp + (z1 - m00) * yperp;
		    }
		}
		else 
		{   

#line 1559 "CannyA8_S22.cc"
		    __PRF_globalCounter[145u]++ ;

#line 663 "CannyA8_S1.sc"
		    if (gx >=  -gy)
		    {   

#line 1566 "CannyA8_S22.cc"
			__PRF_globalCounter[146u]++ ;

#line 667 "CannyA8_S1.sc"
			z1 =  *(magptr - 1);
			z2 =  *(magptr + ncols - 1);

			mag1 = (m00 - z1) * xperp + (z1 - z2) * yperp;


			z1 =  *(magptr + 1);
			z2 =  *(magptr - ncols + 1);

			mag2 = (m00 - z1) * xperp + (z1 - z2) * yperp;
		    }
		    else 
		    {   

#line 1584 "CannyA8_S22.cc"
			__PRF_globalCounter[147u]++ ;

#line 682 "CannyA8_S1.sc"
			z1 =  *(magptr + ncols);
			z2 =  *(magptr + ncols - 1);

			mag1 = (z1 - z2) * xperp + (m00 - z1) * yperp;


			z1 =  *(magptr - ncols);
			z2 =  *(magptr - ncols + 1);

			mag2 = (z1 - z2) * xperp + (m00 - z1) * yperp;
		    }
		}
	    }
	    else 
	    {   

#line 1604 "CannyA8_S22.cc"
		__PRF_globalCounter[148u]++ ;

#line 697 "CannyA8_S1.sc"
		if ((gy =  *gyptr) >= 0)
		{   

#line 1611 "CannyA8_S22.cc"
		    __PRF_globalCounter[149u]++ ;

#line 699 "CannyA8_S1.sc"
		    if ( -gx >= gy)
		    {   

#line 1618 "CannyA8_S22.cc"
			__PRF_globalCounter[150u]++ ;

#line 703 "CannyA8_S1.sc"
			z1 =  *(magptr + 1);
			z2 =  *(magptr - ncols + 1);

			mag1 = (z1 - m00) * xperp + (z2 - z1) * yperp;


			z1 =  *(magptr - 1);
			z2 =  *(magptr + ncols - 1);

			mag2 = (z1 - m00) * xperp + (z2 - z1) * yperp;
		    }
		    else 
		    {   

#line 1636 "CannyA8_S22.cc"
			__PRF_globalCounter[151u]++ ;

#line 718 "CannyA8_S1.sc"
			z1 =  *(magptr - ncols);
			z2 =  *(magptr - ncols + 1);

			mag1 = (z2 - z1) * xperp + (z1 - m00) * yperp;


			z1 =  *(magptr + ncols);
			z2 =  *(magptr + ncols - 1);

			mag2 = (z2 - z1) * xperp + (z1 - m00) * yperp;
		    }
		}
		else 
		{   

#line 1655 "CannyA8_S22.cc"
		    __PRF_globalCounter[152u]++ ;

#line 732 "CannyA8_S1.sc"
		    if ( -gx >  -gy)
		    {   

#line 1662 "CannyA8_S22.cc"
			__PRF_globalCounter[153u]++ ;

#line 736 "CannyA8_S1.sc"
			z1 =  *(magptr + 1);
			z2 =  *(magptr + ncols + 1);

			mag1 = (z1 - m00) * xperp + (z1 - z2) * yperp;


			z1 =  *(magptr - 1);
			z2 =  *(magptr - ncols - 1);

			mag2 = (z1 - m00) * xperp + (z1 - z2) * yperp;
		    }
		    else 
		    {   

#line 1680 "CannyA8_S22.cc"
			__PRF_globalCounter[154u]++ ;

#line 751 "CannyA8_S1.sc"
			z1 =  *(magptr + ncols);
			z2 =  *(magptr + ncols + 1);

			mag1 = (z2 - z1) * xperp + (m00 - z1) * yperp;


			z1 =  *(magptr - ncols);
			z2 =  *(magptr - ncols - 1);

			mag2 = (z2 - z1) * xperp + (m00 - z1) * yperp;
		    }
		}
	    }

#line 1698 "CannyA8_S22.cc"
	    __PRF_globalCounter[155u]++ ;

#line 767 "CannyA8_S1.sc"
	    if ((mag1 > 0.000000000000000e+00) || (mag2 > 0.000000000000000e+00))
	    {   

#line 1705 "CannyA8_S22.cc"
		__PRF_globalCounter[156u]++ ;

#line 769 "CannyA8_S1.sc"
		 *resultptr = (unsigned char)255;
	    }
	    else 
	    {   

#line 1714 "CannyA8_S22.cc"
		__PRF_globalCounter[157u]++ ;

#line 773 "CannyA8_S1.sc"
		if (mag2 == 0.000000000000000e+00)

#line 1720 "CannyA8_S22.cc"
		{   
		    __PRF_globalCounter[158u]++ ;

#line 774 "CannyA8_S1.sc"
		     *resultptr = (unsigned char)255;
		}
		else 

#line 1729 "CannyA8_S22.cc"
		{   
		    __PRF_globalCounter[159u]++ ;

#line 776 "CannyA8_S1.sc"
		     *resultptr = (unsigned char)128;
		}
	    }
	}
    }
}

#line 1741 "CannyA8_S22.cc"
Apply_Hysteresis::Apply_Hysteresis(unsigned int _idcnt, short int (&mag)[4110080], unsigned char (&nms)[4110080], i_img_sender (&ImgOut))
    : _specc::behavior(_idcnt), mag(mag), nms(nms), ImgOut(ImgOut)
{   
}

Apply_Hysteresis::~Apply_Hysteresis(void)
{   
}

void Apply_Hysteresis::apply_hysteresis(

#line 833 "CannyA8_S1.sc"
    int rows, int cols, 
    float tlow, float thigh, unsigned char *edge)
{   
    int c; int highcount; int highthreshold; int hist[32768]; int lowthreshold; int numedges; int pos; int r;
    short int maximum_mag;

#line 1760 "CannyA8_S22.cc"
    __PRF_globalCounter[0u]++ ;

#line 846 "CannyA8_S1.sc"
    for(r = 0 , pos = 0; r < rows; r++ ) {

#line 1766 "CannyA8_S22.cc"
	__PRF_globalCounter[1u]++ ;

#line 847 "CannyA8_S1.sc"
	for(c = 0; c < cols; c++  , pos++ ) {

#line 1772 "CannyA8_S22.cc"
	    __PRF_globalCounter[2u]++ ;

#line 848 "CannyA8_S1.sc"
	    if (nms[pos] == 128)

#line 1778 "CannyA8_S22.cc"
	    {   
		__PRF_globalCounter[3u]++ ;

#line 848 "CannyA8_S1.sc"
		edge[pos] = 128;
	    }
	    else 

#line 1787 "CannyA8_S22.cc"
	    {   
		__PRF_globalCounter[4u]++ ;

#line 849 "CannyA8_S1.sc"
		edge[pos] = 255;
	    }
	}
    }

#line 1797 "CannyA8_S22.cc"
    __PRF_globalCounter[5u]++ ;

#line 853 "CannyA8_S1.sc"
    for(r = 0 , pos = 0; r < rows; r++  , pos += cols) {

#line 1803 "CannyA8_S22.cc"
	__PRF_globalCounter[6u]++ ;

#line 854 "CannyA8_S1.sc"
	edge[pos] = 255;
	edge[pos + cols - 1] = 255;
    }

#line 1811 "CannyA8_S22.cc"
    __PRF_globalCounter[7u]++ ;

#line 857 "CannyA8_S1.sc"
    pos = (rows - 1) * cols;

#line 1817 "CannyA8_S22.cc"
    __PRF_globalCounter[8u]++ ;

#line 858 "CannyA8_S1.sc"
    for(c = 0; c < cols; c++  , pos++ ) {

#line 1823 "CannyA8_S22.cc"
	__PRF_globalCounter[9u]++ ;

#line 859 "CannyA8_S1.sc"
	edge[c] = 255;
	edge[pos] = 255;
    }

#line 1831 "CannyA8_S22.cc"
    __PRF_globalCounter[10u]++ ;

#line 867 "CannyA8_S1.sc"
    for(r = 0; r < 32768; r++ )

#line 1837 "CannyA8_S22.cc"
    {   
	__PRF_globalCounter[11u]++ ;

#line 867 "CannyA8_S1.sc"
	hist[r] = 0;
    }

#line 1845 "CannyA8_S22.cc"
    __PRF_globalCounter[12u]++ ;

#line 868 "CannyA8_S1.sc"
    for(r = 0 , pos = 0; r < rows; r++ ) {

#line 1851 "CannyA8_S22.cc"
	__PRF_globalCounter[13u]++ ;

#line 869 "CannyA8_S1.sc"
	for(c = 0; c < cols; c++  , pos++ ) {

#line 1857 "CannyA8_S22.cc"
	    __PRF_globalCounter[14u]++ ;

#line 870 "CannyA8_S1.sc"
	    if (edge[pos] == 128)

#line 1863 "CannyA8_S22.cc"
	    {   
		__PRF_globalCounter[15u]++ ;

#line 870 "CannyA8_S1.sc"
		hist[mag[pos]]++ ;
	    }
	}
    }

#line 1873 "CannyA8_S22.cc"
    __PRF_globalCounter[16u]++ ;

#line 877 "CannyA8_S1.sc"
    for(r = 1 , numedges = 0; r < 32768; r++ ) {

#line 1879 "CannyA8_S22.cc"
	__PRF_globalCounter[17u]++ ;

#line 878 "CannyA8_S1.sc"
	if (hist[r] != 0)

#line 1885 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[18u]++ ;

#line 878 "CannyA8_S1.sc"
	    maximum_mag = r;
	}

#line 1893 "CannyA8_S22.cc"
	__PRF_globalCounter[19u]++ ;

#line 879 "CannyA8_S1.sc"
	numedges += hist[r];
    }

#line 1900 "CannyA8_S22.cc"
    __PRF_globalCounter[20u]++ ;

#line 882 "CannyA8_S1.sc"
    highcount = (int)(numedges * thigh + 5.000000000000000e-01);

#line 894 "CannyA8_S1.sc"
    r = 1;
    numedges = hist[1];

#line 1910 "CannyA8_S22.cc"
    __PRF_globalCounter[21u]++ ;

#line 896 "CannyA8_S1.sc"
    while((r < (maximum_mag - 1)) && (numedges < highcount)) {

#line 1916 "CannyA8_S22.cc"
	__PRF_globalCounter[22u]++ ;

#line 897 "CannyA8_S1.sc"
	r++ ;
	numedges += hist[r];
    }

#line 1924 "CannyA8_S22.cc"
    __PRF_globalCounter[23u]++ ;

#line 900 "CannyA8_S1.sc"
    highthreshold = r;
    lowthreshold = (int)(highthreshold * tlow + 5.000000000000000e-01);

#line 1931 "CannyA8_S22.cc"
    __PRF_globalCounter[24u]++ ;

#line 903 "CannyA8_S1.sc"
    if (0) {

#line 1937 "CannyA8_S22.cc"
	__PRF_globalCounter[25u]++ ;

#line 904 "CannyA8_S1.sc"
	printf("The input low and high fractions of %f and %f computed to\n", 
	    tlow, thigh);
	printf("magnitude of the gradient threshold values of: %d %d\n", 
	    lowthreshold, highthreshold);
    }

#line 1947 "CannyA8_S22.cc"
    __PRF_globalCounter[26u]++ ;

#line 914 "CannyA8_S1.sc"
    for(r = 0 , pos = 0; r < rows; r++ ) {

#line 1953 "CannyA8_S22.cc"
	__PRF_globalCounter[27u]++ ;

#line 915 "CannyA8_S1.sc"
	for(c = 0; c < cols; c++  , pos++ ) {

#line 1959 "CannyA8_S22.cc"
	    __PRF_globalCounter[28u]++ ;

#line 916 "CannyA8_S1.sc"
	    if ((edge[pos] == 128) && (mag[pos] >= highthreshold)) {

#line 1965 "CannyA8_S22.cc"
		__PRF_globalCounter[29u]++ ;

#line 917 "CannyA8_S1.sc"
		edge[pos] = 0;
		follow_edges((edge + pos), (mag + pos), lowthreshold, cols);
	    }
	}
    }

#line 1975 "CannyA8_S22.cc"
    __PRF_globalCounter[30u]++ ;

#line 926 "CannyA8_S1.sc"
    for(r = 0 , pos = 0; r < rows; r++ ) {

#line 1981 "CannyA8_S22.cc"
	__PRF_globalCounter[31u]++ ;

#line 927 "CannyA8_S1.sc"
	for(c = 0; c < cols; c++  , pos++ )

#line 1987 "CannyA8_S22.cc"
	{   
	    __PRF_globalCounter[32u]++ ;

#line 927 "CannyA8_S1.sc"
	    if (edge[pos] != 0)

#line 1994 "CannyA8_S22.cc"
	    {   
		__PRF_globalCounter[33u]++ ;

#line 927 "CannyA8_S1.sc"
		edge[pos] = 255;
	    }
	}
    }
}

#line 2005 "CannyA8_S22.cc"
void Apply_Hysteresis::follow_edges(

#line 805 "CannyA8_S1.sc"
    unsigned char *edgemapptr, short int *edgemagptr, short int lowval, 
    int cols)
{   
    short int *tempmagptr;
    unsigned char *tempmapptr;
    int i;
    int x[8] = { 1,1,0,-1,-1,-1,0,1 };
    int y[8] = { 0,1,1,1,0,-1,-1,-1 };

#line 2018 "CannyA8_S22.cc"
    __PRF_globalCounter[34u]++ ;

#line 814 "CannyA8_S1.sc"
    for(i = 0; i < 8; i++ ) {

#line 2024 "CannyA8_S22.cc"
	__PRF_globalCounter[35u]++ ;

#line 815 "CannyA8_S1.sc"
	tempmapptr = edgemapptr - y[i] * cols + x[i];
	tempmagptr = edgemagptr - y[i] * cols + x[i];

#line 2031 "CannyA8_S22.cc"
	__PRF_globalCounter[36u]++ ;

#line 818 "CannyA8_S1.sc"
	if (( *tempmapptr == 128) && ( *tempmagptr > lowval)) {

#line 2037 "CannyA8_S22.cc"
	    __PRF_globalCounter[37u]++ ;

#line 819 "CannyA8_S1.sc"
	     *tempmapptr = (unsigned char)0;
	    follow_edges(tempmapptr, tempmagptr, lowval, cols);
	}
    }
}

#line 2047 "CannyA8_S22.cc"
void Apply_Hysteresis::main(void)

#line 932 "CannyA8_S1.sc"
{   

#line 2053 "CannyA8_S22.cc"
    __PRF_globalCounter[38u]++ ;

#line 933 "CannyA8_S1.sc"
    _specc::waitfor((7650 * 1000000000ull) / 20);
    apply_hysteresis(1520, 2704, 3.000000000000000e-01, 8.000000000000000e-01, EdgeImage);
    ImgOut.send(EdgeImage);
}

#line 2062 "CannyA8_S22.cc"
DUT::DUT(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut))
    : _specc::behavior(_idcnt), ImgIn(ImgIn), ImgOut(ImgOut),
    apply_hysteresis(_IDcnt, magnitude2.Value[0], nms.Value[0], ImgOut),
    blurX(_IDcnt, image.Value[0], kernel.Value[0], center.Value[0], tempim.Value[1]),
    blurY(_IDcnt, tempim.Value[0], kernel.Value[0], center.Value[0], smoothedim.Value[1]),
    derivative_x_y(_IDcnt, smoothedim.Value[0], delta_x.Value[1], delta_y.Value[1]),
    gaussian_smooth(_IDcnt, ImgIn, image.Value[1], kernel.Value[1], center.Value[1]),
    magnitude_x_y(_IDcnt, delta_x.Value[0], delta_y.Value[0], magnitude.Value[1], delta_x2.Value[1], delta_y2.Value[1]),
    non_max_supp(_IDcnt, delta_x2.Value[0], delta_y2.Value[0], magnitude.Value[0], nms.Value[1], magnitude2.Value[1])
{   
}

DUT::~DUT(void)
{   
}

void DUT::main(void)

#line 969 "CannyA8_S1.sc"
{   

#line 2084 "CannyA8_S22.cc"
    __PRF_globalCounter[61u]++ ;

#line 973 "CannyA8_S1.sc"
    { _specc::fork _scc_fork_0(&gaussian_smooth), _scc_fork_1(&blurX), _scc_fork_2(&blurY), _scc_fork_3(&derivative_x_y), _scc_fork_4(&magnitude_x_y), _scc_fork_5(&non_max_supp), _scc_fork_6(&apply_hysteresis); unsigned int _scc_first=1, _scc_last=1; for(; true; __PRF_globalCounter[62u]++ ){ _specc::pipe(7, _scc_first, _scc_last, 

#line 979 "CannyA8_S1.sc"
		&_scc_fork_0, 
		&_scc_fork_1, 
		&_scc_fork_2, 




		&_scc_fork_3, 




		&_scc_fork_4, 




		&_scc_fork_5, 




		&_scc_fork_6, &center, &delta_x, &delta_x2, &delta_y, &delta_y2, &image, &kernel, &magnitude, &magnitude2, &nms, &smoothedim, &tempim, ((void*)0)); if (_scc_last<7) _scc_last++;
	} while (_scc_first++<_scc_last){ _specc::pipe(7, _scc_first, _scc_last, &_scc_fork_0, &_scc_fork_1, &_scc_fork_2, &_scc_fork_3, &_scc_fork_4, &_scc_fork_5, &_scc_fork_6, &center, &delta_x, &delta_x2, &delta_y, &delta_y2, &image, &kernel, &magnitude, &magnitude2, &nms, &smoothedim, &tempim, ((void*)0)); if (_scc_last<7) _scc_last++;
	}
    }
}

#line 2119 "CannyA8_S22.cc"
Platform::Platform(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut))
    : _specc::behavior(_idcnt), ImgIn(ImgIn), ImgOut(ImgOut),
    _scc_const_port_0(2ul),
    _scc_const_port_1(2ul),
    canny(++_IDcnt, q1, q2),
    din(++_IDcnt, ImgIn, q1),
    dout(++_IDcnt, q2, ImgOut),
    q1(_scc_const_port_0),
    q2(_scc_const_port_1)
{   
}

Platform::~Platform(void)
{   
}

void Platform::main()

#line 1014 "CannyA8_S1.sc"
{   
    { _specc::fork _scc_fork_0(&din), _scc_fork_1(&canny), _scc_fork_2(&dout); _specc::par(
	    &_scc_fork_0, 
	    &_scc_fork_1, 
	    &_scc_fork_2, ((_specc::fork*)0));
    }
}

#line 2147 "CannyA8_S22.cc"
Main::Main(unsigned int _idcnt)
    : _specc::class_type(_idcnt),
    _scc_const_port_0(2ul),
    _scc_const_port_1(2ul),
    _scc_const_port_2(10ul),
    monitor(_IDcnt, q2, qt),
    platform(_IDcnt, q1, q2),
    q1(_scc_const_port_0),
    q2(_scc_const_port_1),
    qt(_scc_const_port_2),
    stimulus(_IDcnt, q1, qt)
{   
}

Main::~Main(void)
{   
}

int Main::main(void)

#line 1033 "CannyA8_S1.sc"
{   

#line 2171 "CannyA8_S22.cc"
    __PRF_startProfiler("CannyA8_S22.bb_counter.prf", "CannyA8_S22.fn_counter.prf", 
	__PRF_globalCounter, 197u);

#line 1034 "CannyA8_S1.sc"
    { _specc::fork _scc_fork_0(&stimulus), _scc_fork_1(&platform), _scc_fork_2(&monitor); _specc::par(
	    &_scc_fork_0, 
	    &_scc_fork_1, 
	    &_scc_fork_2, ((_specc::fork*)0));
    }

#line 2182 "CannyA8_S22.cc"
    __PRF_globalCounter[103u]++ ;

#line 1039 "CannyA8_S1.sc"
    return 0;
}

#line 2189 "CannyA8_S22.cc"
Main _scc_main(_IDcnt);

int main(void)
{   
    int _scc_main_return;
    
    _specc::start();
    _scc_main_return = _scc_main.main();
    _specc::end();
    return(_scc_main_return);
}

void _scc_bit4_err_handle(
    const _bit4& bit4vec)
{   
    char temp_bits[1024], *p;
    p=bit2str(2,&temp_bits[1023], bit4vec);
    _specc::abort(
	"ERROR:\t Casting a bit4 vector failed \n"
	"Bit4 vector contains X/Z values %s\n"
	"Simulation aborted.\n", p);
	
}

//////////////////////////////////////////////////////////////////////
// End of file CannyA8_S22.cc
//////////////////////////////////////////////////////////////////////
