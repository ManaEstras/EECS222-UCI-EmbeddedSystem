//////////////////////////////////////////////////////////////////////
// C++ header file generated by SpecC V2.2.1
// Design: CannyA8_S4
// File:   CannyA8_S4.h
// Time:   Tue Jun 13 20:04:24 2017
//////////////////////////////////////////////////////////////////////

// Note: User-defined include files are inlined in this file.

// Note: System-defined include files are inlined in this file.

#include <specc.h>

// global annotations ////////////////////////////////////////////////

/* note _SCE_LINK_OPTIONS = 
{ "-lscprof" }; */
/* note _SCE_LOG = 
{ { "Tue Jun 13 19:55:33 2017","scc CannyA8_S2 -sc2sir -I -P -L -l -xcx -xlx -I/opt/sce/inc -P. -P/opt/sce/import -L/opt/sce/lib -lbit4 -lbit -lsim -llonglong -lqthread -xl -Xlinker -xl -R -xl -Xlinker -xl /opt/sce/lib -i CannyA8_S2.sc -o CannyA8_S2.sir",
    "CannyA8_S2.sc","V2.2.1","" },
  { "Tue Jun 13 19:56:10 2017","sce","CannyA8_S2.sc","V2.2.1","Saved to /users/ugrad/2016/fall/jienengy/eecs222/hw8/CannyA8_S4.sir" },
  
  { "Tue Jun 13 19:59:14 2017","scprof -v -p -i /users/ugrad/2016/fall/jienengy/eecs222/hw8/CannyA8_S4 -o /users/ugrad/2016/fall/jienengy/eecs222/hw8/CannyA8_S4.profiled.sir CannyA8_S4 ",
    "CannyA8_S4","V2.2.1","Behavior Profiler" },
  { "Tue Jun 13 20:03:18 2017","sce","CannyA8_S4","V2.2.1","Saved to /users/ugrad/2016/fall/jienengy/eecs222/hw8/CannyA8_S4.sir" },
  
  { "Tue Jun 13 20:04:20 2017","sce","CannyA8_S4","V2.2.1","Saved to /users/ugrad/2016/fall/jienengy/eecs222/hw8/CannyA8_S4.sir" },
  
  { "Tue Jun 13 20:04:24 2017","scprof -v -m -i /users/ugrad/2016/fall/jienengy/eecs222/hw8/CannyA8_S4 -o /users/ugrad/2016/fall/jienengy/eecs222/hw8/CannyA8_S4.ins.sir CannyA8_S4 ",
    "CannyA8_S4","V2.2.1","Profile Instrumentation Simple mode" } }; */
/* note _SCE_TOP_LEVEL = "Platform"; */

// named user-defined type declarations //////////////////////////////

struct __pthread_internal_list;
struct timeval;

#line 170 "/usr/include/libio.h"
struct _IO_jump_t;

#line 42 "CannyA8_S4.h"
struct _IO_marker;
struct _IO_FILE;

#line 344 "/usr/include/libio.h"
struct _IO_FILE_plus;

#line 49 "CannyA8_S4.h"
struct exception;
struct random_data;
struct drand48_data;
struct timespec;

// named enumerator type definitions /////////////////////////////////

#line 206 "/usr/include/libio.h"
enum __codecvt_result {

    __codecvt_ok=0,
    __codecvt_partial=1,
    __codecvt_error=2,
    __codecvt_noconv=3
};

// unnamed enumerator type definitions ///////////////////////////////

#line 199 "/usr/include/math.h"
enum {
    FP_NAN=0,

    FP_INFINITE=1,

    FP_ZERO=2,

    FP_SUBNORMAL=3,

    FP_NORMAL=4
};

#line 292 "/usr/include/math.h"
typedef enum {
    _IEEE_=-1,
    _SVID_=0,
    _XOPEN_=1,
    _POSIX_=2,
    _ISOC_=3 }
    _LIB_VERSION_TYPE;

// struct/union type definitions /////////////////////////////////////

#line 43 "/opt/sce/inc/bits/huge_val.h"
typedef union { unsigned char __c[8]; double __d; } __huge_val_t;

#line 41 "/opt/sce/inc/bits/huge_valf.h"
typedef union { unsigned char __c[4]; float __f; } __huge_valf_t;

#line 54 "/opt/sce/inc/bits/pthreadtypes.h"
typedef union {
    char __size[56];
    long int __align; }
    pthread_attr_t;



struct __pthread_internal_list {

    struct __pthread_internal_list *__prev;
    struct __pthread_internal_list *__next;
};

#line 77 "/opt/sce/inc/bits/pthreadtypes.h"
typedef union {

#line 101 "/opt/sce/inc/bits/pthreadtypes.h"
    struct __pthread_mutex_s { int __lock; unsigned int __count; int __owner; unsigned int __nusers; int __kind; int __spins; struct __pthread_internal_list __list; } __data;
    char __size[40];
    long int __align; }
    pthread_mutex_t;


typedef union {
    char __size[4];
    int __align; }
    pthread_mutexattr_t;

#line 116 "/opt/sce/inc/bits/pthreadtypes.h"
typedef union {

#line 133 "/opt/sce/inc/bits/pthreadtypes.h"
    struct { int __lock; unsigned int __futex; int __total_seq1; int __total_seq2; int __wakeup_seq1; int __wakeup_seq2; int __woken_seq1; int __woken_seq2; void *__mutex; unsigned int __nwaiters; unsigned int __broadcast_seq; } __data;
    char __size[48];




    void *__align1;
    long int __align2; }
    pthread_cond_t;


typedef union {
    char __size[4];
    int __align; }
    pthread_condattr_t;

#line 162 "/opt/sce/inc/bits/pthreadtypes.h"
typedef union {

#line 179 "/opt/sce/inc/bits/pthreadtypes.h"
    struct { int __lock; unsigned int __nr_readers; unsigned int __readers_wakeup; unsigned int __writer_wakeup; unsigned int __nr_readers_queued; unsigned int __nr_writers_queued; int __writer; int __shared; unsigned long int __pad1; unsigned long int __pad2; unsigned int __flags; } __data;

#line 198 "/opt/sce/inc/bits/pthreadtypes.h"
    char __size[56];
    long int __align; }
    pthread_rwlock_t;


typedef union {
    char __size[8];
    long int __align; }
    pthread_rwlockattr_t;

#line 218 "/opt/sce/inc/bits/pthreadtypes.h"
typedef union {
    char __size[32];
    long int __align; }
    pthread_barrier_t;


typedef union {
    char __size[4];
    int __align; }
    pthread_barrierattr_t;

#line 84 "/usr/include/wchar.h"
typedef struct {
    int __count;

#line 94 "/usr/include/wchar.h"
    union { unsigned int __wch; char __wchb[4]; } __value; }
    __mbstate_t;

#line 23 "/usr/include/_G_config.h"
typedef struct {
    long int __pos;
    __mbstate_t __state; }
    _G_fpos_t;

typedef struct {
    long int __pos;
    __mbstate_t __state; }
    _G_fpos64_t;

#line 30 "/usr/include/bits/sigset.h"
typedef struct {
    unsigned long int __val[16]; }
    __sigset_t;

#line 75 "/usr/include/bits/time.h"
struct timeval {

    long int tv_sec;
    long int tv_usec;
};

#line 144 "/usr/include/bits/types.h"
typedef struct { int __val[2]; } __fsid_t;

#line 186 "/usr/include/libio.h"
struct _IO_marker {
    struct _IO_marker *_next;
    struct _IO_FILE *_sbuf;



    int _pos;
};

#line 271 "/usr/include/libio.h"
struct _IO_FILE {
    int _flags;




    char *_IO_read_ptr;
    char *_IO_read_end;
    char *_IO_read_base;
    char *_IO_write_base;
    char *_IO_write_ptr;
    char *_IO_write_end;
    char *_IO_buf_base;
    char *_IO_buf_end;

    char *_IO_save_base;
    char *_IO_backup_base;
    char *_IO_save_end;

    struct _IO_marker *_markers;

    struct _IO_FILE *_chain;

    int _fileno;



    int _flags2;

    long int _old_offset;



    unsigned short int _cur_column;
    char _vtable_offset;
    char _shortbuf[1];



    void *_lock;

#line 319 "/usr/include/libio.h"
    long int _offset;

#line 328 "/usr/include/libio.h"
    void *__pad1;
    void *__pad2;
    void *__pad3;
    void *__pad4;
    unsigned long int __pad5;

    int _mode;

    char _unused2[20];
};

#line 316 "/usr/include/math.h"
struct exception {


    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
};

#line 99 "/usr/include/stdlib.h"
typedef struct {
    int quot;
    int rem; }
    div_t;




typedef struct {
    long int quot;
    long int rem; }
    ldiv_t;

#line 119 "/usr/include/stdlib.h"
typedef struct {
    long long int quot;
    long long int rem; }
    lldiv_t;

#line 349 "/usr/include/stdlib.h"
struct random_data {

    int *fptr;
    int *rptr;
    int *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int *end_ptr;
};

#line 418 "/usr/include/stdlib.h"
struct drand48_data {

    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    unsigned long long int __a;
};

#line 68 "/usr/include/sys/select.h"
typedef struct {

#line 75 "/usr/include/sys/select.h"
    long int __fds_bits[16]; }


    fd_set;

#line 120 "/usr/include/time.h"
struct timespec {

    long int tv_sec;
    long int tv_nsec;
};

// type synonym definitions //////////////////////////////////////////

#line 50 "/opt/sce/inc/bits/pthreadtypes.h"
typedef unsigned long int pthread_t;

#line 65 "/opt/sce/inc/bits/pthreadtypes.h"
typedef struct __pthread_internal_list __pthread_list_t;

#line 151 "/opt/sce/inc/bits/pthreadtypes.h"
typedef unsigned int pthread_key_t;



typedef int pthread_once_t;

#line 212 "/opt/sce/inc/bits/pthreadtypes.h"
typedef volatile int pthread_spinlock_t;

#line 57 "/opt/sce/inc/sim/time.sh"
typedef unsigned long long int sim_time;

typedef unsigned long long int sim_delta;

typedef char sim_time_string[21];

#line 53 "/usr/include/_G_config.h"
typedef int _G_int16_t;
typedef int _G_int32_t;
typedef unsigned int _G_uint16_t;
typedef unsigned int _G_uint32_t;

#line 31 "/usr/include/bits/mathdef.h"
typedef float float_t;
typedef double double_t;

#line 24 "/usr/include/bits/sigset.h"
typedef int __sig_atomic_t;

#line 31 "/usr/include/bits/types.h"
typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef char __int8_t;
typedef unsigned char __uint8_t;
typedef short int __int16_t;
typedef unsigned short int __uint16_t;
typedef int __int32_t;
typedef unsigned int __uint32_t;

typedef long int __int64_t;
typedef unsigned long int __uint64_t;

#line 53 "/usr/include/bits/types.h"
typedef long int __quad_t;
typedef unsigned long int __u_quad_t;

#line 134 "/usr/include/bits/types.h"
typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;

typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef long int __swblk_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void *__timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;

typedef long int __ssize_t;



typedef long int __loff_t;
typedef long int *__qaddr_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;

#line 180 "/usr/include/libio.h"
typedef void _IO_lock_t;

#line 341 "/usr/include/libio.h"
typedef struct _IO_FILE _IO_FILE;

#line 364 "/usr/include/libio.h"
typedef long int __io_read_fn(void *, char *, unsigned long int);

#line 372 "/usr/include/libio.h"
typedef long int __io_write_fn(void *, const char *, unsigned long int);

#line 381 "/usr/include/libio.h"
typedef int __io_seek_fn(void *, long int *, int);


typedef int __io_close_fn(void *);

#line 49 "/usr/include/stdio.h"
typedef struct _IO_FILE FILE;

#line 65 "/usr/include/stdio.h"
typedef struct _IO_FILE __FILE;

#line 742 "/usr/include/stdlib.h"
typedef int (*__compar_fn_t)(const void *, const void *);

#line 49 "/usr/include/sys/select.h"
typedef long int suseconds_t;

#line 55 "/usr/include/sys/select.h"
typedef long int __fd_mask;

#line 85 "/usr/include/sys/select.h"
typedef long int fd_mask;

#line 34 "/usr/include/sys/types.h"
typedef unsigned char u_char;
typedef unsigned short int u_short;
typedef unsigned int u_int;
typedef unsigned long int u_long;
typedef long int quad_t;
typedef unsigned long int u_quad_t;

#line 45 "/usr/include/sys/types.h"
typedef long int loff_t;



typedef unsigned long int ino_t;

#line 61 "/usr/include/sys/types.h"
typedef unsigned long int dev_t;




typedef unsigned int gid_t;




typedef unsigned int mode_t;




typedef unsigned long int nlink_t;




typedef unsigned int uid_t;

#line 87 "/usr/include/sys/types.h"
typedef long int off_t;

#line 99 "/usr/include/sys/types.h"
typedef int pid_t;

#line 105 "/usr/include/sys/types.h"
typedef unsigned int id_t;




typedef long int ssize_t;

#line 116 "/usr/include/sys/types.h"
typedef int daddr_t;
typedef char *caddr_t;

#line 123 "/usr/include/sys/types.h"
typedef int key_t;

#line 151 "/usr/include/sys/types.h"
typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;

#line 163 "/usr/include/sys/types.h"
typedef char int8_t;
typedef short int int16_t;
typedef int int32_t;

typedef long int int64_t;

#line 174 "/usr/include/sys/types.h"
typedef unsigned char u_int8_t;
typedef unsigned short int u_int16_t;
typedef unsigned int u_int32_t;

typedef unsigned long int u_int64_t;




typedef int register_t;

#line 236 "/usr/include/sys/types.h"
typedef long int blkcnt_t;



typedef unsigned long int fsblkcnt_t;



typedef unsigned long int fsfilcnt_t;

#line 76 "/usr/include/time.h"
typedef long int time_t;

#line 92 "/usr/include/time.h"
typedef int clockid_t;

#line 104 "/usr/include/time.h"
typedef void *timer_t;

#line 40 "/usr/lib/gcc/x86_64-redhat-linux/4.4.7/include/stdarg.h"
typedef void *__gnuc_va_list;

#line 149 "/usr/lib/gcc/x86_64-redhat-linux/4.4.7/include/stddef.h"
typedef long int ptrdiff_t;

#line 211 "/usr/lib/gcc/x86_64-redhat-linux/4.4.7/include/stddef.h"
typedef unsigned long int size_t;

#line 46 "CannyA8_S2.sc"
typedef unsigned char img[4110080];
typedef short int simg[4110080];

// class declarations ////////////////////////////////////////////////

#line 620 "CannyA8_S4.h"
class i_img_sender;

#line 49 "CannyA8_S2.sc"
/* note i_img_sender._SCE_STANDARD_LIB = { "i_sender","img","img" }; */

#line 626 "CannyA8_S4.h"
class i_img_receiver;

#line 50 "CannyA8_S2.sc"
/* note i_img_receiver._SCE_STANDARD_LIB = { "i_receiver","img","img" }; */

#line 632 "CannyA8_S4.h"
class i_img_tranceiver;

#line 51 "CannyA8_S2.sc"
/* note i_img_tranceiver._SCE_STANDARD_LIB = { "i_tranceiver","img","img" }; */

#line 638 "CannyA8_S4.h"
class c_img_queue;

#line 53 "CannyA8_S2.sc"
/* note c_img_queue._SCE_STANDARD_LIB = { "c_queue","img","img" }; */

#line 644 "CannyA8_S4.h"
class i_time_sender;

#line 55 "CannyA8_S2.sc"
/* note i_time_sender._SCE_STANDARD_LIB = { "i_sender","time","sim_time" }; */

#line 650 "CannyA8_S4.h"
class i_time_receiver;

#line 56 "CannyA8_S2.sc"
/* note i_time_receiver._SCE_STANDARD_LIB = { "i_receiver","time","sim_time" }; */

#line 656 "CannyA8_S4.h"
class i_time_tranceiver;

#line 57 "CannyA8_S2.sc"
/* note i_time_tranceiver._SCE_STANDARD_LIB = { "i_tranceiver","time","sim_time" }; */

#line 662 "CannyA8_S4.h"
class c_time_queue;

#line 59 "CannyA8_S2.sc"
/* note c_time_queue._SCE_STANDARD_LIB = { "c_queue","time","sim_time" }; */

#line 668 "CannyA8_S4.h"
class Stimulus;
/* note Stimulus._PR_MEMORY_DYNAMIC_RAW = 
{ { 4ul,1ul,1ul,1ul,1ul,1ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Stimulus._PR_MEMORY_HEADER_DATATYPE = 
{ "int","unsigned long long int","void*","char[21]","char[40]","char[71]",
  "unsigned char[4110080]" }; */
/* note Stimulus._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Stimulus._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,1ul } }; */
/* note Stimulus._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note Stimulus._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Stimulus._PR_OPERATION_DYNAMIC_RAW = 
{ { 31ul,60ul,301ul,0ul,0ul,30ul,0ul,90ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,211ul,0ul,0ul,90ul,0ul,120ul,270ul,0ul,60ul,30ul,30ul,180ul,
    30ul },
  { 0ul,0ul,30ul,0ul,0ul,30ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,60ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,120ul,0ul,0ul,30ul,60ul,120ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,60ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,30ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,60ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,30ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,30ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,30ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,60ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,60ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,31ul,0ul,0ul,30ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Stimulus._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","char","int","unsigned int","unsigned long int","unsigned long long int",
  "void","void*","()","{}","interface","char[21]","char[40]","char[71]",
  "unsigned char[4110080]" }; */
/* note Stimulus._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()",".","p++","&p","()x","*","/","%","+","==",
  "!=","||","=" }; */
/* note Stimulus._PR_OPERATION_STATIC_RAW = 
{ { 1ul,2ul,24ul,0ul,0ul,1ul,0ul,13ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,17ul,0ul,0ul,3ul,0ul,32ul,24ul,1ul,2ul,1ul,4ul,7ul,2ul },
  { 0ul,0ul,5ul,0ul,0ul,1ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,17ul,0ul,1ul,1ul,3ul,5ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,1ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,1ul,0ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,2ul,0ul,0ul,1ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Stimulus._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul },
  { 0ul } }; */
/* note Stimulus._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool" }; */
/* note Stimulus._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Stimulus._PR_TRAFFIC_STATIC_RAW = 
{ { 2ul },
  { 2ul } }; */
class Monitor;
/* note Monitor._PR_MEMORY_DYNAMIC_RAW = 
{ { 2ul,5ul,2ul,1ul,2ul,1ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Monitor._PR_MEMORY_HEADER_DATATYPE = 
{ "int","unsigned long long int","float","void*","char[21]","char[128]",
  "unsigned char[4110080]" }; */
/* note Monitor._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Monitor._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,1ul } }; */
/* note Monitor._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note Monitor._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Monitor._PR_OPERATION_DYNAMIC_RAW = 
{ { 224ul,0ul,0ul,101ul,0ul,0ul,0ul,121ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 182ul,0ul,0ul,261ul,140ul,0ul,0ul,100ul,243ul,0ul,40ul,61ul,20ul,20ul },
  
  { 20ul,0ul,0ul,101ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 141ul,0ul,0ul,40ul,0ul,0ul,41ul,61ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,40ul,0ul,0ul,0ul,0ul },
  { 20ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,40ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,101ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,81ul,0ul,40ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 20ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 40ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,40ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 21ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 21ul,0ul,0ul,80ul,60ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Monitor._PR_OPERATION_HEADER_DATATYPE = 
{ "int","unsigned int","unsigned long int","unsigned long long int","float",
  "double","void","void*","()","{}","interface","char[21]","char[128]",
  "unsigned char[4110080]" }; */
/* note Monitor._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","f()",".","p++","&p","()x","*","/","%","+","-","<","<=",
  "==","!=","=" }; */
/* note Monitor._PR_OPERATION_STATIC_RAW = 
{ { 26ul,0ul,0ul,6ul,0ul,0ul,0ul,13ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 13ul,0ul,0ul,14ul,7ul,0ul,0ul,23ul,24ul,1ul,2ul,4ul,4ul,2ul },
  { 3ul,0ul,0ul,6ul,0ul,0ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 14ul,0ul,2ul,2ul,0ul,0ul,4ul,5ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,0ul,0ul,0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,5ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 2ul,0ul,0ul,4ul,3ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Monitor._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul },
  { 0ul } }; */
/* note Monitor._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool" }; */
/* note Monitor._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Monitor._PR_TRAFFIC_STATIC_RAW = 
{ { 2ul },
  { 2ul } }; */
class DataIn;
/* note DataIn._AR_MAPPED_TO = "DMA1"; */
/* note DataIn._PR_MEMORY_DYNAMIC_RAW = 
{ { 0ul } }; */
/* note DataIn._PR_MEMORY_HEADER_DATATYPE = 
{ "unsigned char[4110080]" }; */
/* note DataIn._PR_MEMORY_HEADER_ITEMTYPE = 
{ "global" }; */
/* note DataIn._PR_MEMORY_STATIC_RAW = 
{ { 1ul } }; */
/* note DataIn._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note DataIn._PR_NUMBER_STATIC_RAW = 1ul; */
/* note DataIn._PR_OPERATION_DYNAMIC_RAW = 
{ { 29ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,58ul,58ul },
  { 0ul,58ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,58ul,0ul,0ul },
  { 0ul,0ul,29ul,0ul,0ul,0ul } }; */
/* note DataIn._PR_OPERATION_HEADER_DATATYPE = 
{ "int","void","void*","{}","interface","unsigned char[4110080]" }; */
/* note DataIn._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","f()",".","&p" }; */
/* note DataIn._PR_OPERATION_STATIC_RAW = 
{ { 1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2ul,2ul },
  { 0ul,2ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul } }; */
/* note DataIn._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul },
  { 0ul } }; */
/* note DataIn._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool" }; */
/* note DataIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note DataIn._PR_TRAFFIC_STATIC_RAW = 
{ { 2ul },
  { 2ul } }; */
class DataOut;
/* note DataOut._AR_MAPPED_TO = "DMA2"; */
/* note DataOut._PR_MEMORY_DYNAMIC_RAW = 
{ { 0ul } }; */
/* note DataOut._PR_MEMORY_HEADER_DATATYPE = 
{ "unsigned char[4110080]" }; */
/* note DataOut._PR_MEMORY_HEADER_ITEMTYPE = 
{ "global" }; */
/* note DataOut._PR_MEMORY_STATIC_RAW = 
{ { 1ul } }; */
/* note DataOut._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note DataOut._PR_NUMBER_STATIC_RAW = 1ul; */
/* note DataOut._PR_OPERATION_DYNAMIC_RAW = 
{ { 21ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,42ul,42ul },
  { 0ul,42ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,42ul,0ul,0ul },
  { 0ul,0ul,21ul,0ul,0ul,0ul } }; */
/* note DataOut._PR_OPERATION_HEADER_DATATYPE = 
{ "int","void","void*","{}","interface","unsigned char[4110080]" }; */
/* note DataOut._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","f()",".","&p" }; */
/* note DataOut._PR_OPERATION_STATIC_RAW = 
{ { 1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2ul,2ul },
  { 0ul,2ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul } }; */
/* note DataOut._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul },
  { 0ul } }; */
/* note DataOut._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool" }; */
/* note DataOut._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note DataOut._PR_TRAFFIC_STATIC_RAW = 
{ { 2ul },
  { 2ul } }; */
class Receive_Image;
/* note Receive_Image._PR_MEMORY_DYNAMIC_RAW = 
{ { 1ul } }; */
/* note Receive_Image._PR_MEMORY_HEADER_DATATYPE = 
{ "unsigned char[4110080]" }; */
/* note Receive_Image._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note Receive_Image._PR_MEMORY_STATIC_RAW = 
{ { 0ul } }; */
/* note Receive_Image._PR_NUMBER_DYNAMIC_RAW = 26ul; */
/* note Receive_Image._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Receive_Image._PR_OPERATION_DYNAMIC_RAW = 
{ { 52ul,26ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,26ul,78ul },
  { 0ul,26ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,26ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,26ul,0ul,0ul },
  { 0ul,0ul,0ul,26ul,0ul,0ul,0ul },
  { 0ul,26ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,26ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,26ul,0ul,0ul,0ul,0ul } }; */
/* note Receive_Image._PR_OPERATION_HEADER_DATATYPE = 
{ "int","unsigned long long int","void","void*","{}","interface","unsigned char[4110080]" }; */
/* note Receive_Image._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","f()",".","&p","*","/","=" }; */
/* note Receive_Image._PR_OPERATION_STATIC_RAW = 
{ { 2ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul,3ul },
  { 0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,1ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul } }; */
/* note Receive_Image._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul,0ul,0ul },
  { 0ul,26ul,0ul } }; */
/* note Receive_Image._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool","unsigned char","unsigned char[4110080]" }; */
/* note Receive_Image._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Receive_Image._PR_TRAFFIC_STATIC_RAW = 
{ { 1ul,0ul,0ul },
  { 1ul,0ul,1ul } }; */
class Gaussian_Kernel;
/* note Gaussian_Kernel._PR_MEMORY_DYNAMIC_RAW = 
{ { 4ul,3ul,1ul } }; */
/* note Gaussian_Kernel._PR_MEMORY_HEADER_DATATYPE = 
{ "int","float","float[21]" }; */
/* note Gaussian_Kernel._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note Gaussian_Kernel._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul } }; */
/* note Gaussian_Kernel._PR_NUMBER_DYNAMIC_RAW = 26ul; */
/* note Gaussian_Kernel._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Gaussian_Kernel._PR_OPERATION_DYNAMIC_RAW = 
{ { 208ul,26ul,0ul,442ul,0ul,0ul,0ul,0ul,0ul },
  { 1300ul,0ul,1456ul,0ul,0ul,624ul,286ul,26ul,78ul },
  { 468ul,26ul,0ul,260ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,260ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,286ul,26ul,0ul,0ul,0ul,0ul },
  { 260ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,26ul,0ul,0ul,0ul },
  { 364ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,26ul,0ul,572ul,0ul,0ul,0ul,0ul,0ul },
  { 52ul,26ul,0ul,260ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,26ul,0ul,0ul,0ul,0ul,0ul },
  { 130ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 312ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 156ul,0ul,390ul,0ul,26ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Gaussian_Kernel._PR_OPERATION_HEADER_DATATYPE = 
{ "int","unsigned long long int","float","double","void","void*","()",
  "{}","float[21]" }; */
/* note Gaussian_Kernel._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()","p++","&p","*p","-x","()x","*","/","+","-",
  "<","=","/=","+=" }; */
/* note Gaussian_Kernel._PR_OPERATION_STATIC_RAW = 
{ { 12ul,1ul,0ul,5ul,0ul,4ul,0ul,0ul,0ul },
  { 21ul,0ul,12ul,0ul,0ul,9ul,7ul,1ul,3ul },
  { 5ul,1ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 4ul,0ul,0ul,3ul,1ul,0ul,0ul,0ul,0ul },
  { 3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul },
  { 6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul },
  { 2ul,1ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 7ul,0ul,3ul,0ul,1ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Gaussian_Kernel._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 26ul,26ul,0ul } }; */
/* note Gaussian_Kernel._PR_TRAFFIC_HEADER_DATATYPE = 
{ "int","float","float[21]" }; */
/* note Gaussian_Kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "out" }; */
/* note Gaussian_Kernel._PR_TRAFFIC_STATIC_RAW = 
{ { 1ul,0ul,1ul } }; */
class BlurX_Slice;
/* note BlurX_Slice._PR_MEMORY_DYNAMIC_RAW = 
{ { 3ul,2ul } }; */
/* note BlurX_Slice._PR_MEMORY_HEADER_DATATYPE = 
{ "int","float" }; */
/* note BlurX_Slice._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note BlurX_Slice._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul } }; */
/* note BlurX_Slice._PR_NUMBER_DYNAMIC_RAW = 200ul; */
/* note BlurX_Slice._PR_NUMBER_STATIC_RAW = 8ul; */
/* note BlurX_Slice._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,39000ul,200ul,0ul,205504000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,6677284800ul,0ul,1438072000ul,0ul,0ul,0ul,0ul,200ul,1027064000ul,
    513532000ul,102752000ul },
  { 0ul,0ul,616284000ul,400ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,513532000ul,0ul,0ul,1129816000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,200ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,616550000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,102752000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,513532000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,616284000ul,200ul,0ul,513532000ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,0ul,0ul,400ul,0ul,102752000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,2156880000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,102828200ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,616512000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,102790200ul,0ul,308256000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,1027064000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurX_Slice._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","unsigned char","int","unsigned long long int","float","double",
  "void","void*","()","{}","float[21]","unsigned char[4110080]","float[4110080]" }; */
/* note BlurX_Slice._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()","p++","-x","()x","*","/","+","<","<=",">=",
  "&&","=","+=" }; */
/* note BlurX_Slice._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,8ul,1ul,0ul,2ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,30ul,0ul,6ul,0ul,0ul,0ul,1ul,1ul,2ul,1ul,1ul },
  { 2ul,0ul,4ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,2ul,1ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,7ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurX_Slice._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 513532000ul,205504400ul,2054128000ul,0ul,0ul,0ul },
  { 0ul,0ul,102752000ul,0ul,0ul,0ul } }; */
/* note BlurX_Slice._PR_TRAFFIC_HEADER_DATATYPE = 
{ "unsigned char","int","float","float[21]","unsigned char[4110080]","float[4110080]" }; */
/* note BlurX_Slice._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note BlurX_Slice._PR_TRAFFIC_STATIC_RAW = 
{ { 0ul,3ul,0ul,1ul,1ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul } }; */
class BlurX;
/* note BlurX._AR_MAPPED_TO = "ASIC1"; */
/* note BlurX._PR_MEMORY_DYNAMIC_RAW = 
{ { 24ul,16ul } }; */
/* note BlurX._PR_MEMORY_HEADER_DATATYPE = 
{ "int","float" }; */
/* note BlurX._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note BlurX._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul } }; */
/* note BlurX._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note BlurX._PR_NUMBER_STATIC_RAW = 1ul; */
/* note BlurX._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,1560ul,8ul,0ul,8220160ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,267091392ul,0ul,57522880ul,0ul,0ul,0ul,0ul,8ul,41082560ul,
    20541280ul,4110080ul },
  { 0ul,0ul,24651360ul,16ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,20541280ul,0ul,0ul,45192640ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24662000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,4110080ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,20541280ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24651360ul,8ul,0ul,20541280ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,16ul,0ul,4110080ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,86275200ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,4113128ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24660480ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,4111608ul,0ul,12330240ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,41082560ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurX._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","unsigned char","int","unsigned long long int","float","double",
  "void","void*","()","{}","float[21]","unsigned char[4110080]","float[4110080]" }; */
/* note BlurX._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()","p++","-x","()x","*","/","+","<","<=",">=",
  "&&","=","+=" }; */
/* note BlurX._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,64ul,8ul,0ul,16ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,240ul,0ul,48ul,0ul,0ul,0ul,8ul,8ul,16ul,8ul,8ul },
  { 16ul,0ul,32ul,16ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,8ul,0ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,16ul,8ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,16ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,56ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,16ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurX._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 20541280ul,8220160ul,82165120ul,0ul,0ul,0ul },
  { 0ul,0ul,4110080ul,0ul,0ul,0ul } }; */
/* note BlurX._PR_TRAFFIC_HEADER_DATATYPE = 
{ "unsigned char","int","float","float[21]","unsigned char[4110080]","float[4110080]" }; */
/* note BlurX._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note BlurX._PR_TRAFFIC_STATIC_RAW = 
{ { 0ul,1ul,0ul,1ul,1ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul } }; */
class BlurY_Slice;
/* note BlurY_Slice._PR_MEMORY_DYNAMIC_RAW = 
{ { 3ul,2ul } }; */
/* note BlurY_Slice._PR_MEMORY_HEADER_DATATYPE = 
{ "int","float" }; */
/* note BlurY_Slice._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note BlurY_Slice._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul } }; */
/* note BlurY_Slice._PR_NUMBER_DYNAMIC_RAW = 192ul; */
/* note BlurY_Slice._PR_NUMBER_STATIC_RAW = 8ul; */
/* note BlurY_Slice._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,65856ul,192ul,0ul,394567680ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,6408999936ul,0ul,1380208128ul,0ul,0ul,0ul,0ul,192ul,985640448ul,
    98641920ul,492820224ul },
  { 0ul,0ul,591462144ul,384ul,0ul,98641920ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,98641920ul,0ul,0ul,1478460672ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,192ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,591916416ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,98641920ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,98641920ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,591462144ul,192ul,0ul,591462144ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,0ul,0ul,384ul,0ul,98641920ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,2069922816ul,0ul,0ul,98641920ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,98771904ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,591851520ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,98641920ul,98707008ul,0ul,197283840ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,985640448ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurY_Slice._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","short int","int","unsigned long long int","float","double","void",
  "void*","()","{}","float[21]","short int[4110080]","float[4110080]" }; */
/* note BlurY_Slice._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()","p++","-x","()x","*","/","+","<","<=",">=",
  "&&","=","+=" }; */
/* note BlurY_Slice._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,8ul,1ul,0ul,4ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,30ul,0ul,6ul,0ul,0ul,0ul,1ul,1ul,2ul,1ul,1ul },
  { 2ul,0ul,4ul,2ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,2ul,1ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,7ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,3ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurY_Slice._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul,197284224ul,2464101120ul,0ul,0ul,0ul },
  { 98641920ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurY_Slice._PR_TRAFFIC_HEADER_DATATYPE = 
{ "short int","int","float","float[21]","short int[4110080]","float[4110080]" }; */
/* note BlurY_Slice._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note BlurY_Slice._PR_TRAFFIC_STATIC_RAW = 
{ { 0ul,3ul,0ul,1ul,0ul,1ul },
  { 0ul,0ul,0ul,0ul,1ul,0ul } }; */
class BlurY;
/* note BlurY._AR_MAPPED_TO = "ASIC2"; */
/* note BlurY._PR_MEMORY_DYNAMIC_RAW = 
{ { 24ul,16ul } }; */
/* note BlurY._PR_MEMORY_HEADER_DATATYPE = 
{ "int","float" }; */
/* note BlurY._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note BlurY._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul } }; */
/* note BlurY._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note BlurY._PR_NUMBER_STATIC_RAW = 1ul; */
/* note BlurY._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,2744ul,8ul,0ul,16440320ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,267041664ul,0ul,57508672ul,0ul,0ul,0ul,0ul,8ul,41068352ul,
    4110080ul,20534176ul },
  { 0ul,0ul,24644256ul,16ul,0ul,4110080ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,4110080ul,0ul,0ul,61602528ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24663184ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,4110080ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,4110080ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24644256ul,8ul,0ul,24644256ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,16ul,0ul,4110080ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,86246784ul,0ul,0ul,4110080ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,4115496ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24660480ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,4110080ul,4112792ul,0ul,8220160ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,0ul,0ul,0ul,41068352ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurY._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","short int","int","unsigned long long int","float","double","void",
  "void*","()","{}","float[21]","short int[4110080]","float[4110080]" }; */
/* note BlurY._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()","p++","-x","()x","*","/","+","<","<=",">=",
  "&&","=","+=" }; */
/* note BlurY._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,64ul,8ul,0ul,32ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,240ul,0ul,48ul,0ul,0ul,0ul,8ul,8ul,16ul,8ul,8ul },
  { 16ul,0ul,32ul,16ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,8ul,0ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,16ul,8ul,0ul,16ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,16ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,56ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 8ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,8ul,24ul,0ul,16ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,16ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurY._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul,8220160ul,102670880ul,0ul,0ul,0ul },
  { 4110080ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note BlurY._PR_TRAFFIC_HEADER_DATATYPE = 
{ "short int","int","float","float[21]","short int[4110080]","float[4110080]" }; */
/* note BlurY._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note BlurY._PR_TRAFFIC_STATIC_RAW = 
{ { 0ul,1ul,0ul,1ul,0ul,1ul },
  { 0ul,0ul,0ul,0ul,1ul,0ul } }; */
class Gaussian_Smooth;
/* note Gaussian_Smooth._PR_MEMORY_DYNAMIC_RAW = 
{ { 1ul } }; */
/* note Gaussian_Smooth._PR_MEMORY_HEADER_DATATYPE = 
{ "unsigned char[4110080]" }; */
/* note Gaussian_Smooth._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note Gaussian_Smooth._PR_MEMORY_STATIC_RAW = 
{ { 0ul } }; */
/* note Gaussian_Smooth._PR_NUMBER_DYNAMIC_RAW = 26ul; */
/* note Gaussian_Smooth._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Gaussian_Smooth._PR_OPERATION_DYNAMIC_RAW = 
{ { 260ul,52ul,0ul,442ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1300ul,0ul,1456ul,0ul,0ul,624ul,286ul,26ul,0ul,26ul,78ul,78ul },
  { 468ul,52ul,0ul,260ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,260ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,286ul,52ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,26ul,0ul,0ul,0ul,0ul },
  { 260ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,52ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 364ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,52ul,0ul,572ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 52ul,52ul,0ul,260ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,26ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 130ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 312ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 156ul,0ul,390ul,0ul,52ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,130ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Gaussian_Smooth._PR_OPERATION_HEADER_DATATYPE = 
{ "int","unsigned long long int","float","double","void","void*","()",
  "{}","behavior","interface","float[21]","unsigned char[4110080]" }; */
/* note Gaussian_Smooth._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()",".","p++","&p","*p","-x","()x","*","/","+",
  "-","<","=","/=","+=" }; */
/* note Gaussian_Smooth._PR_OPERATION_STATIC_RAW = 
{ { 14ul,2ul,0ul,5ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 21ul,0ul,12ul,0ul,0ul,9ul,7ul,1ul,2ul,1ul,3ul,3ul },
  { 5ul,2ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 4ul,0ul,0ul,3ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,3ul,0ul,0ul,0ul,0ul },
  { 3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 2ul,2ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 7ul,0ul,3ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Gaussian_Smooth._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,26ul,26ul,26ul,0ul,0ul } }; */
/* note Gaussian_Smooth._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool","unsigned char","int","float","float[21]","unsigned char[4110080]" }; */
/* note Gaussian_Smooth._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Gaussian_Smooth._PR_TRAFFIC_STATIC_RAW = 
{ { 1ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,1ul,0ul,1ul,1ul } }; */
class Derivative_X_Y;
/* note Derivative_X_Y._PR_MEMORY_DYNAMIC_RAW = 
{ { 3ul } }; */
/* note Derivative_X_Y._PR_MEMORY_HEADER_DATATYPE = 
{ "int" }; */
/* note Derivative_X_Y._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note Derivative_X_Y._PR_MEMORY_STATIC_RAW = 
{ { 0ul } }; */
/* note Derivative_X_Y._PR_NUMBER_DYNAMIC_RAW = 23ul; */
/* note Derivative_X_Y._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Derivative_X_Y._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,378057578ul,23ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1606986954ul,0ul,0ul,0ul,0ul,23ul,567191040ul },
  { 0ul,188966528ul,23ul,0ul,0ul,0ul,0ul,0ul },
  { 567191040ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,23ul,0ul,0ul,0ul,0ul },
  { 0ul,283463408ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,34960ul,23ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,23ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,188966528ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,566996736ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,189063726ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 189063680ul,194350ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,94469648ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,188869376ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Derivative_X_Y._PR_OPERATION_HEADER_DATATYPE = 
{ "short int","int","unsigned long long int","void","void*","()","{}",
  "short int[4110080]" }; */
/* note Derivative_X_Y._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()","p++","*","/","+","-","<","=","+=","'" }; */
/* note Derivative_X_Y._PR_OPERATION_STATIC_RAW = 
{ { 0ul,16ul,1ul,0ul,2ul,0ul,0ul,0ul },
  { 0ul,49ul,0ul,0ul,0ul,2ul,1ul,18ul },
  { 0ul,2ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 18ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,1ul,0ul,0ul,0ul,0ul },
  { 0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,12ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 6ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Derivative_X_Y._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 378127360ul,0ul },
  { 189063680ul,0ul } }; */
/* note Derivative_X_Y._PR_TRAFFIC_HEADER_DATATYPE = 
{ "short int","short int[4110080]" }; */
/* note Derivative_X_Y._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Derivative_X_Y._PR_TRAFFIC_STATIC_RAW = 
{ { 0ul,1ul },
  { 0ul,2ul } }; */
class Magnitude_X_Y;
/* note Magnitude_X_Y._AR_MAPPED_TO = "ARM9x10core2"; */
/* note Magnitude_X_Y._PR_MEMORY_DYNAMIC_RAW = 
{ { 5ul } }; */
/* note Magnitude_X_Y._PR_MEMORY_HEADER_DATATYPE = 
{ "int" }; */
/* note Magnitude_X_Y._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note Magnitude_X_Y._PR_MEMORY_STATIC_RAW = 
{ { 0ul } }; */
/* note Magnitude_X_Y._PR_NUMBER_DYNAMIC_RAW = 22ul; */
/* note Magnitude_X_Y._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Magnitude_X_Y._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,33572ul,22ul,0ul,90421760ul,0ul,0ul,0ul,0ul },
  { 0ul,1175683608ul,0ul,0ul,0ul,0ul,90421760ul,22ul,452108888ul },
  { 0ul,0ul,22ul,0ul,90421760ul,0ul,0ul,0ul,0ul },
  { 452108800ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,90421760ul,22ul,0ul,0ul,0ul },
  { 0ul,180876960ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 90421760ul,361687040ul,0ul,180843520ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,180843520ul,22ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,22ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,180843520ul,0ul,0ul,0ul,0ul },
  { 0ul,90488662ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 90421760ul,180877004ul,0ul,0ul,0ul,44ul,0ul,0ul,0ul },
  { 0ul,90421782ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Magnitude_X_Y._PR_OPERATION_HEADER_DATATYPE = 
{ "short int","int","unsigned long long int","float","double","void","()",
  "{}","short int[4110080]" }; */
/* note Magnitude_X_Y._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()","p++","()x","*","/","+","<","=","'" }; */
/* note Magnitude_X_Y._PR_OPERATION_STATIC_RAW = 
{ { 0ul,7ul,1ul,0ul,1ul,0ul,0ul,0ul,0ul },
  { 0ul,19ul,0ul,0ul,0ul,0ul,1ul,1ul,9ul },
  { 0ul,0ul,1ul,0ul,1ul,0ul,0ul,0ul,0ul },
  { 5ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,1ul,1ul,0ul,0ul,0ul },
  { 0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,4ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,5ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Magnitude_X_Y._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 361687084ul,0ul },
  { 90421804ul,0ul } }; */
/* note Magnitude_X_Y._PR_TRAFFIC_HEADER_DATATYPE = 
{ "short int","short int[4110080]" }; */
/* note Magnitude_X_Y._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Magnitude_X_Y._PR_TRAFFIC_STATIC_RAW = 
{ { 0ul,2ul },
  { 0ul,3ul } }; */
class Non_Max_Supp;
/* note Non_Max_Supp._AR_MAPPED_TO = "ARM9x10core3"; */
/* note Non_Max_Supp._PR_MEMORY_DYNAMIC_RAW = 
{ { 5ul,7ul,8ul,1ul } }; */
/* note Non_Max_Supp._PR_MEMORY_HEADER_DATATYPE = 
{ "short int","int","void*","unsigned char[4110080]" }; */
/* note Non_Max_Supp._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local" }; */
/* note Non_Max_Supp._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul,0ul } }; */
/* note Non_Max_Supp._PR_NUMBER_DYNAMIC_RAW = 21ul; */
/* note Non_Max_Supp._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Non_Max_Supp._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,0ul,570673486ul,21ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1535262276ul,1141127936ul,0ul,0ul,0ul,981201906ul,21ul,63ul,
    102ul },
  { 0ul,0ul,0ul,484409872ul,21ul,0ul,0ul,328130880ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,21ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,82147560ul,0ul,0ul,0ul,328239040ul,0ul,0ul,0ul },
  { 0ul,86094914ul,566442572ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,78139486ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,86010434ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,328130900ul,21ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,156278972ul,21ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,164065440ul,0ul,0ul,0ul,246098240ul,0ul,0ul,120ul },
  { 0ul,0ul,0ul,410224360ul,0ul,0ul,0ul,246098180ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,156278972ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,84520ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,82093460ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,86094914ul,566442572ul,320374832ul,0ul,0ul,42ul,121600ul,0ul,0ul,
    0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,182240ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,54080ul,0ul,0ul,0ul,328488800ul,0ul,0ul,0ul } }; */
/* note Non_Max_Supp._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","unsigned char","short int","int","unsigned long long int","double",
  "void","void*","{}","unsigned char[4110080]","short int[4110080]" }; */
/* note Non_Max_Supp._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","f()","p++","*p","-x","()x","*","/","+","-","<<","<",
  ">","<=",">=","==","||","=","+=","'" }; */
/* note Non_Max_Supp._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,0ul,52ul,1ul,3ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,115ul,106ul,0ul,0ul,0ul,77ul,1ul,3ul,5ul },
  { 2ul,0ul,1ul,35ul,1ul,0ul,0ul,32ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,4ul,0ul,0ul,0ul,6ul,0ul,0ul,0ul },
  { 0ul,8ul,36ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,5ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,33ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,16ul,0ul,0ul,0ul,28ul,0ul,0ul,6ul },
  { 0ul,0ul,0ul,35ul,0ul,0ul,0ul,25ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,2ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,8ul,36ul,22ul,0ul,0ul,2ul,12ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,6ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul,23ul,0ul,0ul,0ul } }; */
/* note Non_Max_Supp._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul,81ul,0ul,0ul },
  { 21ul,21ul,0ul,0ul } }; */
/* note Non_Max_Supp._PR_TRAFFIC_HEADER_DATATYPE = 
{ "unsigned char","short int","unsigned char[4110080]","short int[4110080]" }; */
/* note Non_Max_Supp._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Non_Max_Supp._PR_TRAFFIC_STATIC_RAW = 
{ { 0ul,0ul,0ul,3ul },
  { 0ul,0ul,1ul,1ul } }; */
class Apply_Hysteresis;
/* note Apply_Hysteresis._AR_MAPPED_TO = "ARM9x10core4"; */
/* note Apply_Hysteresis._PR_MEMORY_DYNAMIC_RAW = 
{ { 1ul,9ul,4ul,4ul,1ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Apply_Hysteresis._PR_MEMORY_HEADER_DATATYPE = 
{ "short int","int","void*","int[8]","int[32768]","unsigned char[4110080]" }; */
/* note Apply_Hysteresis._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Apply_Hysteresis._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul } }; */
/* note Apply_Hysteresis._PR_NUMBER_DYNAMIC_RAW = 20ul; */
/* note Apply_Hysteresis._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Apply_Hysteresis._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,0ul,250992312ul,20ul,0ul,80ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,8663900ul,2066376813ul,0ul,40ul,0ul,0ul,450871797ul,0ul,8423738ul,
    20ul,269558976ul,25175980ul,40ul,23907583ul },
  { 128904ul,0ul,0ul,64472ul,20ul,0ul,40ul,0ul,106775ul,0ul,0ul,0ul,0ul,
    0ul,0ul,106775ul },
  { 0ul,156255217ul,23800808ul,294734956ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,8423758ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,20ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,750438664ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,8316943ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,8316943ul,0ul,40ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,0ul,0ul,134779508ul,20ul,0ul,40ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,20ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,30400ul,0ul,0ul,40ul,0ul,134886263ul,0ul,0ul,0ul,0ul,0ul,
    0ul,106775ul },
  { 0ul,0ul,0ul,94872ul,0ul,0ul,0ul,0ul,134779488ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,406387306ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 64452ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,164572160ul,282505ul,9201078ul,0ul,0ul,0ul,0ul,134779488ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,750192ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,328891000ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul } }; */
/* note Apply_Hysteresis._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","unsigned char","short int","int","unsigned long long int","float",
  "double","void","void*","()","{}","interface","int[8]","int[32768]",
  "unsigned char[4110080]","short int[4110080]" }; */
/* note Apply_Hysteresis._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()",".","p++","*p","()x","*","/","+","-","<",">",
  ">=","==","!=","&&","=","+=","'" }; */
/* note Apply_Hysteresis._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,0ul,48ul,1ul,0ul,4ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,4ul,113ul,0ul,4ul,0ul,0ul,21ul,2ul,3ul,1ul,4ul,6ul,3ul,3ul },
  
  { 6ul,0ul,0ul,2ul,1ul,0ul,2ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,1ul },
  
  { 0ul,12ul,2ul,10ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,20ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,2ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,1ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,3ul,1ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,1ul,0ul,0ul,2ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,1ul },
  
  { 0ul,0ul,0ul,3ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,15ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,9ul,1ul,26ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,3ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,12ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Apply_Hysteresis._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul,82201600ul,106109183ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul } }; */
/* note Apply_Hysteresis._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool","unsigned char","short int","unsigned char[4110080]","short int[4110080]" }; */
/* note Apply_Hysteresis._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Apply_Hysteresis._PR_TRAFFIC_STATIC_RAW = 
{ { 1ul,0ul,0ul,1ul,1ul },
  { 1ul,0ul,0ul,0ul,0ul } }; */
class DUT;
/* note DUT._AR_MAPPED_TO = "ARM9x10core1"; */
/* note DUT._PR_MEMORY_DYNAMIC_RAW = 
{ { 5ul,7ul,8ul,0ul,1ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note DUT._PR_MEMORY_HEADER_DATATYPE = 
{ "short int","int","void*","float[21]","unsigned char[4110080]","short int[4110080]",
  "float[4110080]" }; */
/* note DUT._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note DUT._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,1ul,3ul,7ul,1ul } }; */
/* note DUT._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note DUT._PR_NUMBER_STATIC_RAW = 1ul; */
/* note DUT._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,0ul,1404191737ul,550ul,0ul,719264525ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1838523060ul,20377513354ul,0ul,2875790250ul,0ul,0ul,1731687853ul,
    102752275ul,10530172ul,0ul,50ul,336948720ul,2053772875ul,31469975ul,
    513532200ul,1262908699ul,616106400ul },
  { 161130ul,0ul,0ul,2014548259ul,950ul,0ul,205504300ul,0ul,390765468ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,133468ul,0ul },
  { 0ul,708851021ul,1262775010ul,368418695ul,0ul,2669879450ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,102752275ul,10530222ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,50ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,2782627294ul,0ul,0ul,0ul,0ul,390760761ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,50ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,112890123ul,674336395ul,350ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,298527197ul,0ul,0ul,125ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul },
  { 0ul,112789551ul,205504000ul,411008050ul,0ul,719036125ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1997038808ul,550ul,0ul,1129639000ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,186046445ul,950ul,0ul,205504250ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,4713802000ul,0ul,0ul,308256075ul,0ul,461581923ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,133610ul,0ul },
  { 0ul,0ul,0ul,1104781848ul,0ul,0ul,0ul,0ul,461448383ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,186046395ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1022132726ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,1330754309ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 80565ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,308209145ul,1085697526ul,804263406ul,0ul,513760375ul,0ul,150ul,
    168619121ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,125ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,103622140ul,0ul,2053772925ul,0ul,0ul,216952ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,719222955ul,0ul,0ul,0ul,0ul,391058095ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note DUT._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","unsigned char","short int","int","unsigned long long int","float",
  "double","void","void*","()","{}","behavior","interface","int[8]","float[21]",
  "int[32768]","unsigned char[4110080]","short int[4110080]","float[4110080]" }; */
/* note DUT._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()",".","p++","&p","*p","-x","()x","*","/","+",
  "-","<<","<",">","<=",">=","==","!=","&&","||","=","/=","+=","'" }; */
/* note DUT._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,0ul,265ul,22ul,0ul,61ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,119ul,788ul,0ul,112ul,0ul,0ul,107ul,28ul,23ul,2ul,2ul,4ul,
    35ul,6ul,17ul,43ul,16ul },
  { 40ul,0ul,1ul,108ul,38ul,0ul,13ul,0ul,33ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,1ul,0ul },
  { 0ul,20ul,33ul,10ul,0ul,51ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,24ul,0ul,0ul,4ul,27ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,84ul,0ul,0ul,0ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,10ul,37ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,21ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,7ul,9ul,6ul,0ul,11ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,71ul,22ul,0ul,32ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,4ul,38ul,0ul,18ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,133ul,0ul,0ul,13ul,0ul,31ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,7ul,0ul },
  { 0ul,0ul,0ul,51ul,0ul,0ul,0ul,0ul,27ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,74ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,1ul,1ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,18ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,2ul,21ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,5ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 19ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,17ul,52ul,114ul,0ul,43ul,0ul,6ul,14ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,5ul,0ul,33ul,0ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,17ul,0ul,0ul,0ul,0ul,23ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul } }; */
/* note DUT._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul },
  { 0ul } }; */
/* note DUT._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool" }; */
/* note DUT._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note DUT._PR_TRAFFIC_STATIC_RAW = 
{ { 2ul },
  { 2ul } }; */
class Platform;
/* note Platform._AR_PES = 
{ { "ARM9x10core1","ARM_926EJS_10000_20000_0","32-bit ARM9E (ARMv5TE) family processor",
    
    { true,false,
      { { "PortA",
	  { "AMBA_AHB_20000_0_0","_20000_0_0" },
	  { "master0" },
	  { { { 268435456ull,4294967295ull } } } },
	{ "IBus",
	  { "AMBA_IBus_32","_32" },
	  { "wait" } } } },
    { 1.000000000000000e+08,0ul,0ul,32u,32u,8u,3.000000000000000e-01 },
    
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "arm926ejs_10000_20000_0","arm926ejsos_10000_20000_0","arm926ejsos_10000_20000_0",
	"arm926ejsos_10000_20000_0","","arm926ejsbf_10000_20000_0","arm926ejsovp_10000_20000_0" },
      
      { "ARM_926EJS_10000_20000_0","ARM_926EJS_OSNONE_10000_20000_0","ARM_926EJS_OS_FCFS_10000_20000_0",
	"ARM_926EJS_OS_PRIORITY_10000_20000_0","","ARM_926EJS_BF_10000_20000_0",
	"ARM_926EJS_OVP_10000_20000_0" },
      { "32-bit ARM9E (ARMv5TE) family processor","","","","","","Open Virtual Platform (OVP) ISS" },
      
      { "arm926ejs.sc","arm926ejsos.sc","arm926ejsos.sc","arm926ejsos.sc",
	"","arm926ejsbf.sc","arm926ejsovp.sc" } },
    { { "CLOCK_PERIOD",10000ull,
	{ { 2000ull,100000ull } },"Clock period","ps" },
      { "PORTA_HCLK_PERIOD",20000ull,
	{ { 1000ull,1000000ull } },
	{ "Clock period",
	  { "PORTA","AMBA AHB" } },"ps" },
      { "PORTA_H_USE_MAC_TLM",0,
	{ 0,1 },
	{ "Use MAC TLM",
	  { "PORTA","AMBA AHB" } } } } },
  { "ARM9x10core2","ARM_926EJS_10000_20000_0","32-bit ARM9E (ARMv5TE) family processor",
    
    { true,false,
      { { "PortA",
	  { "AMBA_AHB_20000_0_0","_20000_0_0" },
	  { "master0" },
	  { { { 268435456ull,4294967295ull } } } },
	{ "IBus",
	  { "AMBA_IBus_32","_32" },
	  { "wait" } } } },
    { 1.000000000000000e+08,0ul,0ul,32u,32u,8u,3.000000000000000e-01 },
    
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "arm926ejs_10000_20000_0","arm926ejsos_10000_20000_0","arm926ejsos_10000_20000_0",
	"arm926ejsos_10000_20000_0","","arm926ejsbf_10000_20000_0","arm926ejsovp_10000_20000_0" },
      
      { "ARM_926EJS_10000_20000_0","ARM_926EJS_OSNONE_10000_20000_0","ARM_926EJS_OS_FCFS_10000_20000_0",
	"ARM_926EJS_OS_PRIORITY_10000_20000_0","","ARM_926EJS_BF_10000_20000_0",
	"ARM_926EJS_OVP_10000_20000_0" },
      { "32-bit ARM9E (ARMv5TE) family processor","","","","","","Open Virtual Platform (OVP) ISS" },
      
      { "arm926ejs.sc","arm926ejsos.sc","arm926ejsos.sc","arm926ejsos.sc",
	"","arm926ejsbf.sc","arm926ejsovp.sc" } },
    { { "CLOCK_PERIOD",10000ull,
	{ { 2000ull,100000ull } },"Clock period","ps" },
      { "PORTA_HCLK_PERIOD",20000ull,
	{ { 1000ull,1000000ull } },
	{ "Clock period",
	  { "PORTA","AMBA AHB" } },"ps" },
      { "PORTA_H_USE_MAC_TLM",0,
	{ 0,1 },
	{ "Use MAC TLM",
	  { "PORTA","AMBA AHB" } } } } },
  { "ARM9x10core3","ARM_926EJS_10000_20000_0","32-bit ARM9E (ARMv5TE) family processor",
    
    { true,false,
      { { "PortA",
	  { "AMBA_AHB_20000_0_0","_20000_0_0" },
	  { "master0" },
	  { { { 268435456ull,4294967295ull } } } },
	{ "IBus",
	  { "AMBA_IBus_32","_32" },
	  { "wait" } } } },
    { 1.000000000000000e+08,0ul,0ul,32u,32u,8u,3.000000000000000e-01 },
    
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "arm926ejs_10000_20000_0","arm926ejsos_10000_20000_0","arm926ejsos_10000_20000_0",
	"arm926ejsos_10000_20000_0","","arm926ejsbf_10000_20000_0","arm926ejsovp_10000_20000_0" },
      
      { "ARM_926EJS_10000_20000_0","ARM_926EJS_OSNONE_10000_20000_0","ARM_926EJS_OS_FCFS_10000_20000_0",
	"ARM_926EJS_OS_PRIORITY_10000_20000_0","","ARM_926EJS_BF_10000_20000_0",
	"ARM_926EJS_OVP_10000_20000_0" },
      { "32-bit ARM9E (ARMv5TE) family processor","","","","","","Open Virtual Platform (OVP) ISS" },
      
      { "arm926ejs.sc","arm926ejsos.sc","arm926ejsos.sc","arm926ejsos.sc",
	"","arm926ejsbf.sc","arm926ejsovp.sc" } },
    { { "CLOCK_PERIOD",10000ull,
	{ { 2000ull,100000ull } },"Clock period","ps" },
      { "PORTA_HCLK_PERIOD",20000ull,
	{ { 1000ull,1000000ull } },
	{ "Clock period",
	  { "PORTA","AMBA AHB" } },"ps" },
      { "PORTA_H_USE_MAC_TLM",0,
	{ 0,1 },
	{ "Use MAC TLM",
	  { "PORTA","AMBA AHB" } } } } },
  { "ARM9x10core4","ARM_926EJS_10000_20000_0","32-bit ARM9E (ARMv5TE) family processor",
    
    { true,false,
      { { "PortA",
	  { "AMBA_AHB_20000_0_0","_20000_0_0" },
	  { "master0" },
	  { { { 268435456ull,4294967295ull } } } },
	{ "IBus",
	  { "AMBA_IBus_32","_32" },
	  { "wait" } } } },
    { 1.000000000000000e+08,0ul,0ul,32u,32u,8u,3.000000000000000e-01 },
    
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "arm926ejs_10000_20000_0","arm926ejsos_10000_20000_0","arm926ejsos_10000_20000_0",
	"arm926ejsos_10000_20000_0","","arm926ejsbf_10000_20000_0","arm926ejsovp_10000_20000_0" },
      
      { "ARM_926EJS_10000_20000_0","ARM_926EJS_OSNONE_10000_20000_0","ARM_926EJS_OS_FCFS_10000_20000_0",
	"ARM_926EJS_OS_PRIORITY_10000_20000_0","","ARM_926EJS_BF_10000_20000_0",
	"ARM_926EJS_OVP_10000_20000_0" },
      { "32-bit ARM9E (ARMv5TE) family processor","","","","","","Open Virtual Platform (OVP) ISS" },
      
      { "arm926ejs.sc","arm926ejsos.sc","arm926ejsos.sc","arm926ejsos.sc",
	"","arm926ejsbf.sc","arm926ejsovp.sc" } },
    { { "CLOCK_PERIOD",10000ull,
	{ { 2000ull,100000ull } },"Clock period","ps" },
      { "PORTA_HCLK_PERIOD",20000ull,
	{ { 1000ull,1000000ull } },
	{ "Clock period",
	  { "PORTA","AMBA AHB" } },"ps" },
      { "PORTA_H_USE_MAC_TLM",0,
	{ 0,1 },
	{ "Use MAC TLM",
	  { "PORTA","AMBA AHB" } } } } },
  { "ASIC1","HW_Standard","Standard RTL processor",
    { true,true,
      {  } },
    { { 5.000000000000000e+08,
	{ 0.000000000000000e+00,5.000000000000000e+08 } },
      { 16384ul,
	{ 0ul,65536ul } },
      { 32768ul,
	{ 0ul,65536ul } },128u,32u,8u,1.000000000000000e+00 },
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "stdHW","","","","","" },
      { "HW_Standard","","","","","" },
      { "Standard RTL processor","","","","","" },
      { "","","","","","" } } },
  { "ASIC2","HW_Standard","Standard RTL processor",
    { true,true,
      {  } },
    { { 5.000000000000000e+08,
	{ 0.000000000000000e+00,5.000000000000000e+08 } },
      { 16384ul,
	{ 0ul,65536ul } },
      { 32768ul,
	{ 0ul,65536ul } },128u,32u,8u,1.000000000000000e+00 },
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "stdHW","","","","","" },
      { "HW_Standard","","","","","" },
      { "Standard RTL processor","","","","","" },
      { "","","","","","" } } },
  { "DMA1","HW_Virtual","Virtual custom hardware processor",
    { true,true,
      {  } },
    { { 1.000000000000000e+09,
	{ 0.000000000000000e+00,2.000000000000000e+09 } },
      { 16384ul,
	{ 0ul,65536ul } },
      { 32768ul,
	{ 0ul,65536ul } },128u,32u,8u,1.000000000000000e+00 },
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "virtualHW","","","","","" },
      { "HW_Virtual","","","","","" },
      { "Virtual custom hardware processor","","","","","" },
      { "","","","","","" } } },
  { "DMA2","HW_Virtual","Virtual custom hardware processor",
    { true,true,
      {  } },
    { { 1.000000000000000e+09,
	{ 0.000000000000000e+00,2.000000000000000e+09 } },
      { 16384ul,
	{ 0ul,65536ul } },
      { 32768ul,
	{ 0ul,65536ul } },128u,32u,8u,1.000000000000000e+00 },
    {  },
    {  },
    {  },
    {  },
    { "/opt/sce/share/sce/db/processors/processors.sir",
      { "virtualHW","","","","","" },
      { "HW_Virtual","","","","","" },
      { "Virtual custom hardware processor","","","","","" },
      { "","","","","","" } } } }; */
/* note Platform._CR_BUSSES = 
{ { "PortA0","AMBA_AHB_20000_0_0","AMBA AHB",
    { 1u,1u,"AMBA_AHB_20000ull_0",
      { "master0","master1","master2","master3" },
      { "slave0","slave1","slave2","slave3","slave4","slave5","slave6",
	"slave7","slave8","slave9" },"",
      {  },true,
      { { { 0ull,268435455ull } },
	{ { 268435456ull,536870911ull } },
	{ { 536870912ull,805306367ull } },
	{ { 805306368ull,1073741823ull } },
	{ { 1073741824ull,1342177279ull } },
	{ { 1342177280ull,1610612735ull } },
	{ { 1610612736ull,1879048191ull } },
	{ { 1879048192ull,2147483647ull } },
	{ { 2147483648ull,3221225471ull } },
	{ { 3221225472ull,4294967295ull } } } },
    { 20000ull,5.000000000000000e-01,8.000000000000000e+08,32u,32u,8u,
      4u,1.000000000000000e+00 },
    { { "ibus","AMBA_IBus_0","AMBA interrupt bus",
	{ 0u,0u,"AMBA_IBus_0",
	  {  },
	  {  },"",
	  {  },true,
	  {  } },
	{ 0ull,5.000000000000000e-01,8.000000000000000e+08,0u,0u,8u,1u,
	  1.000000000000000e+00 },
	{  },
	{ "/opt/sce/share/sce/db/busses/busses.sir","ambaIbus_0","AMBA_IBus_0",
	  "AMBA interrupt bus","./ambaIbus.sc" },
	{ { "H_NUM_INTRPT",0u,
	    { 0u,8u,16u,32u },"Number of interrupts" } } } },
    { "/opt/sce/share/sce/db/busses/busses.sir","ambaAhb_20000_0_0","AMBA_AHB_20000_0_0",
      "AMBA AHB","ambaAhb.sc" },
    { { "HCLK_PERIOD",20000ull,
	{ { 1000ull,1000000ull } },"Clock period","ps" },
      { "H_USE_MAC_TLM",0,
	{ 0,1 },"Use MAC TLM" },
      { "H_NUM_INTRPT",0u,
	{ 0u,8u,16u,32u },"Number of interrupts" } } },
  { "IBus0","AMBA_IBus_32","AMBA interrupt bus",
    { 0u,0u,"AMBA_IBus_32",
      {  },
      {  },"",
      { "ahbMasterInt0","ahbMasterInt1","ahbMasterInt2","ahbMasterInt3",
	"ahbMasterInt4","ahbMasterInt5","ahbMasterInt6","ahbMasterInt7",
	"ahbMasterInt8","ahbMasterInt9","ahbMasterInt10","ahbMasterInt11",
	"ahbMasterInt12","ahbMasterInt13","ahbMasterInt14","ahbMasterInt15",
	"ahbMasterInt16","ahbMasterInt17","ahbMasterInt18","ahbMasterInt19",
	"ahbMasterInt20","ahbMasterInt21","ahbMasterInt22","ahbMasterInt23",
	"ahbMasterInt24","ahbMasterInt25","ahbMasterInt26","ahbMasterInt27",
	"ahbMasterInt28","ahbMasterInt29","ahbMasterInt30","ahbMasterInt31" },
      true,
      {  } },
    { 0ull,5.000000000000000e-01,8.000000000000000e+08,0u,0u,8u,1u,1.000000000000000e+00 },
    
    {  },
    { "/opt/sce/share/sce/db/busses/busses.sir","ambaIbus_32","AMBA_IBus_32",
      "AMBA interrupt bus","./ambaIbus.sc" },
    { { "H_NUM_INTRPT",32u,
	{ 0u,8u,16u,32u },"Number of interrupts" } } } }; */
/* note Platform._NR_CONNECTIVITY = 
{ { { "ARM9x10core1","PortA" },"PortA0",
    { "master0" } },
  { { "ARM9x10core1","IBus" },"IBus0",
    { "wait" } } }; */
/* note Platform._PE_ARM9x10core1_MEMORY_BITPACKING = true; */
/* note Platform._PE_ARM9x10core1_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_ARM9x10core1_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_ARM9x10core1_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,1,1,4 } }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_OPERATION_DYNAMIC_FACTOR = 1.000000000000000e+01; */
/* note Platform._PE_ARM9x10core1_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core1_WEIGHT_OPERATION_STATIC_FACTOR = 1.000000000000000e+00; */
/* note Platform._PE_ARM9x10core2_MEMORY_BITPACKING = true; */
/* note Platform._PE_ARM9x10core2_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_ARM9x10core2_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_ARM9x10core2_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,1,1,4 } }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_OPERATION_DYNAMIC_FACTOR = 1.000000000000000e+01; */
/* note Platform._PE_ARM9x10core2_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core2_WEIGHT_OPERATION_STATIC_FACTOR = 1.000000000000000e+00; */
/* note Platform._PE_ARM9x10core3_MEMORY_BITPACKING = true; */
/* note Platform._PE_ARM9x10core3_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_ARM9x10core3_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_ARM9x10core3_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,1,1,4 } }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_OPERATION_DYNAMIC_FACTOR = 1.000000000000000e+01; */
/* note Platform._PE_ARM9x10core3_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core3_WEIGHT_OPERATION_STATIC_FACTOR = 1.000000000000000e+00; */
/* note Platform._PE_ARM9x10core4_MEMORY_BITPACKING = true; */
/* note Platform._PE_ARM9x10core4_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_ARM9x10core4_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_ARM9x10core4_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,1,1,4 } }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,3.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 4.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,8.000000000000000e+00,
    1.600000000000000e+01,1.600000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    1.000000000000000e+01,1.000000000000000e+01,1.000000000000000e+01,
    2.000000000000000e+01,2.000000000000000e+01,4.000000000000000e+01,
    8.000000000000000e+01,8.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_OPERATION_DYNAMIC_FACTOR = 1.000000000000000e+01; */
/* note Platform._PE_ARM9x10core4_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,2.000000000000000e+00,
    4.000000000000000e+00,4.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    5.000000000000000e+00,5.000000000000000e+00,5.000000000000000e+00,
    1.000000000000000e+01,1.000000000000000e+01,2.000000000000000e+01,
    4.000000000000000e+01,4.000000000000000e+01,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,8.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ARM9x10core4_WEIGHT_OPERATION_STATIC_FACTOR = 1.000000000000000e+00; */
/* note Platform._PE_ASIC1_MEMORY_BITPACKING = true; */
/* note Platform._PE_ASIC1_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_ASIC1_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_ASIC1_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,4,4,4 } }; */
/* note Platform._PE_ASIC1_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ASIC1_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_ASIC1_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_ASIC1_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ASIC1_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ASIC1_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_ASIC1_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_ASIC1_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ASIC2_MEMORY_BITPACKING = true; */
/* note Platform._PE_ASIC2_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_ASIC2_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_ASIC2_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,4,4,4 } }; */
/* note Platform._PE_ASIC2_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ASIC2_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_ASIC2_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_ASIC2_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_ASIC2_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,6.000000000000000e+00,
    6.000000000000000e+00,6.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,2.000000000000000e+00,2.000000000000000e+00,
    2.000000000000000e+00,2.000000000000000e+00,3.000000000000000e+00,
    3.000000000000000e+00,3.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_ASIC2_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_ASIC2_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_ASIC2_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,1.000000000000000e+00,
    1.000000000000000e+00,1.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_DMA1_MEMORY_BITPACKING = true; */
/* note Platform._PE_DMA1_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_DMA1_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_DMA1_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,4,4,4 } }; */
/* note Platform._PE_DMA1_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_DMA1_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_DMA1_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_DMA1_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_DMA1_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_DMA1_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_DMA1_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_DMA1_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_DMA2_MEMORY_BITPACKING = true; */
/* note Platform._PE_DMA2_MEMORY_HEADER_DATATYPE = 
{ "bool","char","short int","int","long int","long long int","float","double",
  "long double","bit","bit4","void*" }; */
/* note Platform._PE_DMA2_MEMORY_HEADER_ITEMTYPE = 
{ "Size","Alignment" }; */
/* note Platform._PE_DMA2_MEMORY_LAYOUT = 
{ { 1,1,2,4,4,8,4,8,8,0,0,4 },
  { 1,1,2,4,4,4,4,4,4,4,4,4 } }; */
/* note Platform._PE_DMA2_WEIGHT_MEMORY_DYNAMIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_DMA2_WEIGHT_MEMORY_HEADER_DATATYPE = 
{ "pthread_barrier_t","unsigned long long int","long int[16]","char[48]",
  "int","float","char[40]","int[2]","char","pthread_condattr_t","char[128]",
  "struct _IO_marker","void","char[1]","pthread_mutexattr_t","struct __pthread_internal_list",
  "pthread_cond_t","unsigned short int","long long int","event","__sigset_t",
  "short int","struct drand48_data","long double","lldiv_t","fd_set","div_t",
  "_LIB_VERSION_TYPE","struct random_data","unsigned char[4110080]","bool",
  "int[32768]","char[56]","char[21]","ldiv_t","unsigned short int[7]",
  "struct exception","_G_fpos_t","char[32]","__mbstate_t","short int[4110080]",
  "void*","struct _IO_FILE","__huge_val_t","float[4110080]","unsigned char",
  "__huge_valf_t","char[4]","unsigned char[4]","struct timespec","long int",
  "pthread_rwlockattr_t","pthread_barrierattr_t","unsigned int","unsigned long int[16]",
  "float[21]","unsigned char[8]","struct timeval","unsigned short int[3]",
  "unsigned long int","double","enum __codecvt_result","char[71]","pthread_mutex_t",
  "int[8]","pthread_attr_t","pthread_rwlock_t","_G_fpos64_t","char[20]",
  "char[8]","__fsid_t" }; */
/* note Platform._PE_DMA2_WEIGHT_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PE_DMA2_WEIGHT_MEMORY_STATIC = 
{ { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 },
  { 3.200000000000000e+01,8.000000000000000e+00,6.400000000000000e+01,
    4.800000000000000e+01,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+01,8.000000000000000e+00,1.000000000000000e+00,
    4.000000000000000e+00,1.280000000000000e+02,1.200000000000000e+01,
    0.000000000000000e+00,1.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.800000000000000e+01,2.000000000000000e+00,
    8.000000000000000e+00,0.000000000000000e+00,6.400000000000000e+01,
    2.000000000000000e+00,2.400000000000000e+01,8.000000000000000e+00,
    1.600000000000000e+01,6.400000000000000e+01,8.000000000000000e+00,
    4.000000000000000e+00,2.800000000000000e+01,4.110080000000000e+06,
    1.000000000000000e+00,1.310720000000000e+05,5.600000000000000e+01,
    2.100000000000000e+01,8.000000000000000e+00,1.400000000000000e+01,
    3.200000000000000e+01,1.200000000000000e+01,3.200000000000000e+01,
    8.000000000000000e+00,8.220160000000000e+06,4.000000000000000e+00,
    1.240000000000000e+02,8.000000000000000e+00,1.644032000000000e+07,
    1.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    4.000000000000000e+00,8.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,4.000000000000000e+00,
    6.400000000000000e+01,8.400000000000000e+01,8.000000000000000e+00,
    8.000000000000000e+00,6.000000000000000e+00,4.000000000000000e+00,
    8.000000000000000e+00,4.000000000000000e+00,7.100000000000000e+01,
    4.000000000000000e+01,3.200000000000000e+01,5.600000000000000e+01,
    5.600000000000000e+01,1.200000000000000e+01,2.000000000000000e+01,
    8.000000000000000e+00,8.000000000000000e+00 } }; */
/* note Platform._PE_DMA2_WEIGHT_OPERATION_DYNAMIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PE_DMA2_WEIGHT_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","unsigned short int","int",
  "unsigned int","long int","unsigned long int","long long int","unsigned long long int",
  "float","double","long double","void","event","void*" }; */
/* note Platform._PE_DMA2_WEIGHT_OPERATION_HEADER_ITEMTYPE = 
{ "void","#1","#i","()","this","[]","f()",".","->","p++","p--","[:]","++p",
  "--p","&p","*p","+x","-x","~","!","sizeof(E)","sizeof(T)","()x","@",
  "*","/","%","+","-","<<",">>","<",">","<=",">=","==","!=","&","^","|",
  "&&","||",":?","=","*=","/=","%=","+=","-=","<<=",">>=","&=","^=","|=",
  "'" }; */
/* note Platform._PE_DMA2_WEIGHT_OPERATION_STATIC = 
{ { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 },
  { 0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00,0.000000000000000e+00,
    0.000000000000000e+00,0.000000000000000e+00 } }; */
/* note Platform._PR_MEMORY_DYNAMIC_RAW = 
{ { 5ul,7ul,8ul,0ul,1ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Platform._PR_MEMORY_HEADER_DATATYPE = 
{ "short int","int","void*","float[21]","unsigned char[4110080]","short int[4110080]",
  "float[4110080]" }; */
/* note Platform._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Platform._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,1ul,5ul,7ul,1ul } }; */
/* note Platform._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note Platform._PR_NUMBER_STATIC_RAW = 1ul; */
/* note Platform._PR_OPERATION_DYNAMIC_RAW = 
{ { 0ul,0ul,0ul,1404191787ul,550ul,0ul,719264525ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,1838523060ul,20377513354ul,0ul,2875790250ul,0ul,0ul,1731687853ul,
    102752275ul,10530172ul,0ul,150ul,336948720ul,2053772875ul,31469975ul,
    513532300ul,1262908699ul,616106400ul },
  { 161130ul,0ul,0ul,2014548259ul,950ul,0ul,205504300ul,0ul,390765468ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,133468ul,0ul },
  { 0ul,708851021ul,1262775010ul,368418695ul,0ul,2669879450ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,102752275ul,10530322ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,150ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,2782627294ul,0ul,0ul,0ul,0ul,390760761ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,100ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,112890123ul,674336395ul,350ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,298527197ul,0ul,0ul,125ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul },
  { 0ul,112789551ul,205504000ul,411008050ul,0ul,719036125ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1997038808ul,550ul,0ul,1129639000ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,186046445ul,950ul,0ul,205504250ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,4713802000ul,0ul,0ul,308256075ul,0ul,461581923ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,133610ul,0ul },
  { 0ul,0ul,0ul,1104781848ul,0ul,0ul,0ul,0ul,461448383ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,186046395ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1022132726ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,1330754309ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 80565ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,308209145ul,1085697526ul,804263406ul,0ul,513760375ul,0ul,150ul,
    168619121ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,125ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,103622140ul,0ul,2053772925ul,0ul,0ul,216952ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,719222955ul,0ul,0ul,0ul,0ul,391058095ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Platform._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","unsigned char","short int","int","unsigned long long int","float",
  "double","void","void*","()","{}","behavior","interface","int[8]","float[21]",
  "int[32768]","unsigned char[4110080]","short int[4110080]","float[4110080]" }; */
/* note Platform._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()",".","p++","&p","*p","-x","()x","*","/","+",
  "-","<<","<",">","<=",">=","==","!=","&&","||","=","/=","+=","'" }; */
/* note Platform._PR_OPERATION_STATIC_RAW = 
{ { 0ul,0ul,0ul,267ul,22ul,0ul,61ul,0ul,24ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,119ul,788ul,0ul,112ul,0ul,0ul,107ul,28ul,23ul,2ul,6ul,4ul,
    35ul,6ul,21ul,43ul,16ul },
  { 40ul,0ul,1ul,108ul,38ul,0ul,13ul,0ul,33ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,1ul,0ul },
  { 0ul,20ul,33ul,10ul,0ul,51ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,24ul,0ul,0ul,4ul,31ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,84ul,0ul,0ul,0ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,10ul,37ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,21ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,7ul,9ul,6ul,0ul,11ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,71ul,22ul,0ul,32ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,4ul,38ul,0ul,18ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,133ul,0ul,0ul,13ul,0ul,31ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,7ul,0ul },
  { 0ul,0ul,0ul,51ul,0ul,0ul,0ul,0ul,27ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,74ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,1ul,1ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,18ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,2ul,21ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,5ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 19ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,17ul,52ul,114ul,0ul,43ul,0ul,6ul,14ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,5ul,0ul,33ul,0ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul },
  { 0ul,0ul,0ul,17ul,0ul,0ul,0ul,0ul,23ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul } }; */
/* note Platform._PR_TRAFFIC_DYNAMIC_RAW = 
{ { 0ul },
  { 0ul } }; */
/* note Platform._PR_TRAFFIC_HEADER_DATATYPE = 
{ "bool" }; */
/* note Platform._PR_TRAFFIC_HEADER_ITEMTYPE = 
{ "in","out" }; */
/* note Platform._PR_TRAFFIC_STATIC_RAW = 
{ { 2ul },
  { 2ul } }; */
/* note Platform._SCC_PUBLIC = true; */
class Main;
/* note Main._PR_MEMORY_DYNAMIC_RAW = 
{ { 5ul,7ul,8ul,0ul,1ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Main._PR_MEMORY_HEADER_DATATYPE = 
{ "short int","int","void*","float[21]","unsigned char[4110080]","short int[4110080]",
  "float[4110080]" }; */
/* note Main._PR_MEMORY_HEADER_ITEMTYPE = 
{ "local","global" }; */
/* note Main._PR_MEMORY_STATIC_RAW = 
{ { 0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,1ul,0ul,1ul,7ul,7ul,1ul } }; */
/* note Main._PR_NUMBER_DYNAMIC_RAW = 1ul; */
/* note Main._PR_NUMBER_STATIC_RAW = 0ul; */
/* note Main._PR_OPERATION_DYNAMIC_RAW = 
{ { 31ul,60ul,0ul,0ul,1404192312ul,0ul,0ul,681ul,0ul,719264525ul,0ul,211ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1838523060ul,20377513747ul,0ul,0ul,351ul,2875790390ul,
    0ul,0ul,1731688073ul,102752788ul,10530172ul,0ul,250ul,336948720ul,
    91ul,2053772875ul,30ul,180ul,20ul,31469975ul,513532350ul,1262908699ul,
    616106400ul },
  { 161130ul,0ul,0ul,0ul,2014548309ul,0ul,0ul,1081ul,0ul,205504300ul,0ul,
    390765468ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,133468ul,
    0ul },
  { 0ul,60ul,708851021ul,1262775010ul,368418695ul,0ul,0ul,0ul,2669879450ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,261ul,0ul,0ul,70ul,0ul,102752275ul,10530423ul,181ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,250ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2782627344ul,0ul,0ul,0ul,0ul,0ul,0ul,390760761ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,200ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,112890123ul,674336395ul,350ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,298527197ul,0ul,0ul,0ul,0ul,125ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,112789551ul,205504000ul,411008050ul,0ul,0ul,0ul,719036125ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  
  { 0ul,0ul,0ul,0ul,1997038808ul,0ul,0ul,681ul,0ul,1129639000ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,186046445ul,0ul,0ul,1061ul,0ul,205504290ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,50ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,4713802100ul,0ul,0ul,0ul,0ul,308256075ul,0ul,461581923ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,133610ul,0ul },
  { 0ul,0ul,0ul,0ul,1104781848ul,0ul,0ul,40ul,0ul,0ul,0ul,461448383ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,186046395ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,1022132747ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,1330754309ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,60ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 80565ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,308209145ul,1085697526ul,804263458ul,0ul,0ul,110ul,513760435ul,
    0ul,150ul,168619121ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,125ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,103622140ul,0ul,0ul,0ul,2053772925ul,0ul,0ul,216952ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,719222955ul,0ul,0ul,0ul,0ul,0ul,0ul,391058095ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Main._PR_OPERATION_HEADER_DATATYPE = 
{ "bool","char","unsigned char","short int","int","unsigned int","unsigned long int",
  "unsigned long long int","float","double","void","void*","()","{}","behavior",
  "interface","int[8]","char[21]","float[21]","char[40]","char[71]","char[128]",
  "int[32768]","unsigned char[4110080]","short int[4110080]","float[4110080]" }; */
/* note Main._PR_OPERATION_HEADER_ITEMTYPE = 
{ "#1","#i","()","[]","f()",".","p++","&p","*p","-x","()x","*","/","%",
  "+","-","<<","<",">","<=",">=","==","!=","&&","||","=","/=","+=","'" }; */
/* note Main._PR_OPERATION_STATIC_RAW = 
{ { 1ul,2ul,0ul,0ul,318ul,0ul,0ul,29ul,0ul,61ul,0ul,50ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,119ul,818ul,0ul,0ul,17ul,119ul,0ul,0ul,162ul,76ul,25ul,
    2ul,10ul,4ul,5ul,35ul,4ul,7ul,4ul,6ul,25ul,43ul,16ul },
  { 40ul,0ul,0ul,1ul,116ul,0ul,0ul,45ul,0ul,13ul,0ul,40ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,1ul,0ul },
  { 0ul,2ul,20ul,33ul,10ul,0ul,0ul,0ul,51ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,55ul,0ul,3ul,3ul,0ul,4ul,38ul,10ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,12ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,86ul,0ul,0ul,0ul,0ul,0ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,8ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,10ul,37ul,6ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,21ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,7ul,9ul,6ul,2ul,0ul,0ul,11ul,0ul,0ul,5ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,71ul,0ul,0ul,29ul,0ul,32ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,4ul,0ul,0ul,44ul,0ul,20ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,137ul,0ul,0ul,0ul,0ul,13ul,0ul,31ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,7ul,0ul },
  { 0ul,0ul,0ul,0ul,51ul,0ul,0ul,2ul,0ul,0ul,0ul,27ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,75ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,1ul,1ul,0ul,0ul,0ul,0ul,2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,19ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,2ul,21ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,2ul,0ul,0ul,7ul,0ul,0ul,0ul,0ul,1ul,0ul,4ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,5ul,0ul,2ul,0ul,0ul,0ul,0ul,7ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 19ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 2ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,17ul,52ul,118ul,0ul,0ul,5ul,46ul,0ul,6ul,18ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,1ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,5ul,0ul,0ul,0ul,33ul,0ul,0ul,6ul,0ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul },
  { 0ul,0ul,0ul,0ul,17ul,0ul,0ul,0ul,0ul,0ul,0ul,23ul,0ul,0ul,0ul,0ul,
    0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul,0ul } }; */
/* note Main._PR_TRAFFIC_DYNAMIC_RAW = 
{  }; */
/* note Main._PR_TRAFFIC_HEADER_DATATYPE = 
{  }; */
/* note Main._PR_TRAFFIC_HEADER_ITEMTYPE = 
{  }; */
/* note Main._PR_TRAFFIC_STATIC_RAW = 
{  }; */

// interface class definitions ///////////////////////////////////////

#line 49 "CannyA8_S2.sc"
class i_img_sender
{
private:
public:

#line 8771 "CannyA8_S4.h"
    virtual ~i_img_sender(void){};

#line 49 "CannyA8_S2.sc"
    virtual void send(unsigned char [4110080]) = 0;
private:
};

#line 50 "CannyA8_S2.sc"
class i_img_receiver
{
private:
public:

#line 8785 "CannyA8_S4.h"
    virtual ~i_img_receiver(void){};

#line 50 "CannyA8_S2.sc"
    virtual void receive(unsigned char (*)[4110080]) = 0;
private:
};

#line 51 "CannyA8_S2.sc"
class i_img_tranceiver
{
private:
public:

#line 8799 "CannyA8_S4.h"
    virtual ~i_img_tranceiver(void){};

#line 51 "CannyA8_S2.sc"
    virtual void receive(unsigned char (*)[4110080]) = 0; virtual void send(unsigned char [4110080]) = 0;
private:
};

class i_time_sender
{
private:
public:

#line 8812 "CannyA8_S4.h"
    virtual ~i_time_sender(void){};

#line 55 "CannyA8_S2.sc"
    virtual void send(unsigned long long int) = 0;
private:
};

#line 56 "CannyA8_S2.sc"
class i_time_receiver
{
private:
public:

#line 8826 "CannyA8_S4.h"
    virtual ~i_time_receiver(void){};

#line 56 "CannyA8_S2.sc"
    virtual void receive(unsigned long long int *) = 0;
private:
};

#line 57 "CannyA8_S2.sc"
class i_time_tranceiver
{
private:
public:

#line 8840 "CannyA8_S4.h"
    virtual ~i_time_tranceiver(void){};

#line 57 "CannyA8_S2.sc"
    virtual void receive(unsigned long long int *) = 0; virtual void send(unsigned long long int) = 0;
private:
};

// behavior and channel class definitions ////////////////////////////

#line 53 "CannyA8_S2.sc"
class c_img_queue : public _specc::channel, public i_img_sender, public i_img_receiver, public i_img_tranceiver
{
private:

#line 53 "CannyA8_S2.sc"
    const unsigned long int (&size);
public:

#line 8859 "CannyA8_S4.h"
    c_img_queue(const unsigned long int (&size));
    virtual ~c_img_queue(void);
    void cleanup(void);
    void receive(unsigned char (*)[4110080]);
    void send(unsigned char [4110080]);
    void setup(void);
private:

#line 53 "CannyA8_S2.sc"
    unsigned char (*buffer)[4110080]; unsigned long int n; unsigned long int p; _specc::event r; _specc::event s; unsigned long int wr; unsigned long int ws;
};




class c_time_queue : public _specc::channel, public i_time_sender, public i_time_receiver, public i_time_tranceiver
{
private:

#line 59 "CannyA8_S2.sc"
    const unsigned long int (&size);
public:

#line 8883 "CannyA8_S4.h"
    c_time_queue(const unsigned long int (&size));
    virtual ~c_time_queue(void);
    void cleanup(void);
    void receive(unsigned long long int *);
    void send(unsigned long long int);
    void setup(void);
private:

#line 59 "CannyA8_S2.sc"
    unsigned long long int *buffer; unsigned long int n; unsigned long int p; _specc::event r; _specc::event s; unsigned long int wr; unsigned long int ws;
};
class Stimulus : public _specc::behavior
{
private:

#line 61 "CannyA8_S2.sc"
    i_img_sender (&ImgOut); i_time_sender (&StartTime);

#line 8902 "CannyA8_S4.h"
    /* note ImgOut._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgOut._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note StartTime._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note StartTime._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note StartTime._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note StartTime._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
public:
    Stimulus(unsigned int _idcnt, i_img_sender (&ImgOut), i_time_sender (&StartTime));
    virtual ~Stimulus(void);
    void main(void);
    int read_pgm_image(const char *, unsigned char *, int, int);
private:

#line 63 "CannyA8_S2.sc"
    unsigned char Image[4110080];

#line 8933 "CannyA8_S4.h"
    /* note Image._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note Image._PR_MEMORY_HEADER_DATATYPE = 
    { "unsigned char[4110080]" }; */
    /* note Image._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note Image._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note Image._PR_TRAFFIC_DYNAMIC_RAW = 
    {  }; */
    /* note Image._PR_TRAFFIC_HEADER_DATATYPE = 
    {  }; */
    /* note Image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    {  }; */
    /* note Image._PR_TRAFFIC_STATIC_RAW = 
    {  }; */
};

#line 157 "CannyA8_S2.sc"
class Monitor : public _specc::behavior
{
private:

#line 157 "CannyA8_S2.sc"
    i_img_receiver (&ImgIn); i_time_receiver (&StartTime);

#line 8960 "CannyA8_S4.h"
    /* note ImgIn._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgIn._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note StartTime._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note StartTime._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note StartTime._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note StartTime._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
public:
    Monitor(unsigned int _idcnt, i_img_receiver (&ImgIn), i_time_receiver (&StartTime));
    virtual ~Monitor(void);
    void main(void);
    int write_pgm_image(const char *, unsigned char *, int, int, const char *, int);
private:

#line 159 "CannyA8_S2.sc"
    unsigned char EdgeImage[4110080];

#line 8991 "CannyA8_S4.h"
    /* note EdgeImage._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note EdgeImage._PR_MEMORY_HEADER_DATATYPE = 
    { "unsigned char[4110080]" }; */
    /* note EdgeImage._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note EdgeImage._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note EdgeImage._PR_TRAFFIC_DYNAMIC_RAW = 
    {  }; */
    /* note EdgeImage._PR_TRAFFIC_HEADER_DATATYPE = 
    {  }; */
    /* note EdgeImage._PR_TRAFFIC_HEADER_ITEMTYPE = 
    {  }; */
    /* note EdgeImage._PR_TRAFFIC_STATIC_RAW = 
    {  }; */
};

#line 248 "CannyA8_S2.sc"
class DataIn : public _specc::behavior
{
private:

#line 248 "CannyA8_S2.sc"
    i_img_receiver (&ImgIn); i_img_sender (&ImgOut);

#line 9018 "CannyA8_S4.h"
    /* note ImgIn._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgIn._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note ImgOut._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgOut._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
public:
    DataIn(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut));
    virtual ~DataIn(void);
    void main();
private:

#line 250 "CannyA8_S2.sc"
    unsigned char Image[4110080];

#line 9048 "CannyA8_S4.h"
    /* note Image._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note Image._PR_MEMORY_HEADER_DATATYPE = 
    { "unsigned char[4110080]" }; */
    /* note Image._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note Image._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note Image._PR_TRAFFIC_DYNAMIC_RAW = 
    {  }; */
    /* note Image._PR_TRAFFIC_HEADER_DATATYPE = 
    {  }; */
    /* note Image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    {  }; */
    /* note Image._PR_TRAFFIC_STATIC_RAW = 
    {  }; */
};

#line 262 "CannyA8_S2.sc"
class DataOut : public _specc::behavior
{
private:

#line 262 "CannyA8_S2.sc"
    i_img_receiver (&ImgIn); i_img_sender (&ImgOut);

#line 9075 "CannyA8_S4.h"
    /* note ImgIn._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgIn._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note ImgOut._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgOut._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
public:
    DataOut(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut));
    virtual ~DataOut(void);
    void main();
private:

#line 264 "CannyA8_S2.sc"
    unsigned char Image[4110080];

#line 9105 "CannyA8_S4.h"
    /* note Image._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note Image._PR_MEMORY_HEADER_DATATYPE = 
    { "unsigned char[4110080]" }; */
    /* note Image._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note Image._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note Image._PR_TRAFFIC_DYNAMIC_RAW = 
    {  }; */
    /* note Image._PR_TRAFFIC_HEADER_DATATYPE = 
    {  }; */
    /* note Image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    {  }; */
    /* note Image._PR_TRAFFIC_STATIC_RAW = 
    {  }; */
};

#line 276 "CannyA8_S2.sc"
class Receive_Image : public _specc::behavior
{
private:

#line 276 "CannyA8_S2.sc"
    i_img_receiver (&ImgIn); unsigned char (&image)[4110080];

#line 9132 "CannyA8_S4.h"
    /* note ImgIn._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgIn._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note image._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 26ul,0ul } }; */
    /* note image._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note image._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    Receive_Image(unsigned int _idcnt, i_img_receiver (&ImgIn), unsigned char (&image)[4110080]);
    virtual ~Receive_Image(void);
    void main(void);
private:
};

#line 288 "CannyA8_S2.sc"
class Gaussian_Kernel : public _specc::behavior
{
private:

#line 288 "CannyA8_S2.sc"
    float (&gaussian_kernel)[21]; int (&kernel_center);

#line 9166 "CannyA8_S4.h"
    /* note gaussian_kernel._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 26ul,0ul } }; */
    /* note gaussian_kernel._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[21]" }; */
    /* note gaussian_kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note gaussian_kernel._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note kernel_center._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 26ul } }; */
    /* note kernel_center._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int" }; */
    /* note kernel_center._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note kernel_center._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul } }; */
public:
    Gaussian_Kernel(unsigned int _idcnt, float (&gaussian_kernel)[21], int (&kernel_center));
    virtual ~Gaussian_Kernel(void);
    void main(void);
    void make_gaussian_kernel(float, float *, int *);
private:
};

#line 341 "CannyA8_S2.sc"
class BlurX_Slice : public _specc::behavior
{
private:

#line 341 "CannyA8_S2.sc"
    unsigned char (&image)[4110080]; float (&kernel)[21]; int (&center);
    int (&rowStart); int (&rowEnd); float (&tempim)[4110080];

#line 9200 "CannyA8_S4.h"
    /* note center._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 205504000ul,1027064000ul } }; */
    /* note center._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int","float" }; */
    /* note center._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note center._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul,0ul } }; */
    /* note image._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 513532000ul,0ul } }; */
    /* note image._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note image._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note kernel._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 1027064000ul,0ul } }; */
    /* note kernel._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[21]" }; */
    /* note kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note kernel._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note rowEnd._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 200ul } }; */
    /* note rowEnd._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int" }; */
    /* note rowEnd._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note rowEnd._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul } }; */
    /* note rowStart._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 200ul } }; */
    /* note rowStart._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int" }; */
    /* note rowStart._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note rowStart._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul } }; */
    /* note tempim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 102752000ul,0ul } }; */
    /* note tempim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[4110080]" }; */
    /* note tempim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note tempim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    BlurX_Slice(unsigned int _idcnt, unsigned char (&image)[4110080], float (&kernel)[21], int (&center), int (&rowStart), int (&rowEnd), float (&tempim)[4110080]);
    virtual ~BlurX_Slice(void);
    void blur_x(int, int);
    void main(void);
private:
};

#line 376 "CannyA8_S2.sc"
class BlurX : public _specc::behavior
{
private:

#line 376 "CannyA8_S2.sc"
    unsigned char (&image)[4110080]; float (&kernel)[21]; int (&center);
    float (&tempim)[4110080];

#line 9266 "CannyA8_S4.h"
    /* note center._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 8220160ul,41082560ul } }; */
    /* note center._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int","float" }; */
    /* note center._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note center._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul,0ul } }; */
    /* note image._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 20541280ul,0ul } }; */
    /* note image._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note image._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note kernel._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 41082560ul,0ul } }; */
    /* note kernel._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[21]" }; */
    /* note kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note kernel._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note tempim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 4110080ul,0ul } }; */
    /* note tempim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[4110080]" }; */
    /* note tempim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note tempim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    BlurX(unsigned int _idcnt, unsigned char (&image)[4110080], float (&kernel)[21], int (&center), float (&tempim)[4110080]);
    virtual ~BlurX(void);
    void main(void);
private:
    int _scc_const_port_0;
    int _scc_const_port_1;
    int _scc_const_port_2;
    int _scc_const_port_3;
    int _scc_const_port_4;
    int _scc_const_port_5;
    int _scc_const_port_6;
    int _scc_const_port_7;
    int _scc_const_port_8;
    int _scc_const_port_9;
    int _scc_const_port_10;
    int _scc_const_port_11;
    int _scc_const_port_12;
    int _scc_const_port_13;
    int _scc_const_port_14;
    int _scc_const_port_15;

#line 379 "CannyA8_S2.sc"
    BlurX_Slice sliceX1;

#line 9324 "CannyA8_S4.h"
    /* note sliceX1._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 380 "CannyA8_S2.sc"
    BlurX_Slice sliceX2;

#line 9330 "CannyA8_S4.h"
    /* note sliceX2._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 381 "CannyA8_S2.sc"
    BlurX_Slice sliceX3;

#line 9336 "CannyA8_S4.h"
    /* note sliceX3._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 382 "CannyA8_S2.sc"
    BlurX_Slice sliceX4;

#line 9342 "CannyA8_S4.h"
    /* note sliceX4._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 383 "CannyA8_S2.sc"
    BlurX_Slice sliceX5;

#line 9348 "CannyA8_S4.h"
    /* note sliceX5._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 384 "CannyA8_S2.sc"
    BlurX_Slice sliceX6;

#line 9354 "CannyA8_S4.h"
    /* note sliceX6._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 385 "CannyA8_S2.sc"
    BlurX_Slice sliceX7;

#line 9360 "CannyA8_S4.h"
    /* note sliceX7._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 386 "CannyA8_S2.sc"
    BlurX_Slice sliceX8;

#line 9366 "CannyA8_S4.h"
    /* note sliceX8._PR_NUMBER_DYNAMIC_RAW = 1ul; */
};

#line 404 "CannyA8_S2.sc"
class BlurY_Slice : public _specc::behavior
{
private:

#line 404 "CannyA8_S2.sc"
    float (&tempim)[4110080]; float (&kernel)[21]; int (&center);
    int (&colStart); int (&colEnd); short int (&smoothedim)[4110080];

#line 9379 "CannyA8_S4.h"
    /* note center._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 197283840ul,985640448ul } }; */
    /* note center._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int","float" }; */
    /* note center._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note center._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul,0ul } }; */
    /* note colEnd._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 192ul } }; */
    /* note colEnd._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int" }; */
    /* note colEnd._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note colEnd._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul } }; */
    /* note colStart._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 192ul } }; */
    /* note colStart._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int" }; */
    /* note colStart._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note colStart._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul } }; */
    /* note kernel._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 985640448ul,0ul } }; */
    /* note kernel._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[21]" }; */
    /* note kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note kernel._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note smoothedim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 98641920ul,0ul } }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note smoothedim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note tempim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 492820224ul,0ul } }; */
    /* note tempim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[4110080]" }; */
    /* note tempim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note tempim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    BlurY_Slice(unsigned int _idcnt, float (&tempim)[4110080], float (&kernel)[21], int (&center), int (&colStart), int (&colEnd), short int (&smoothedim)[4110080]);
    virtual ~BlurY_Slice(void);
    void blur_y(int, int);
    void main(void);
private:
};

#line 439 "CannyA8_S2.sc"
class BlurY : public _specc::behavior
{
private:

#line 439 "CannyA8_S2.sc"
    float (&tempim)[4110080]; float (&kernel)[21]; int (&center);
    short int (&smoothedim)[4110080];

#line 9445 "CannyA8_S4.h"
    /* note center._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 8220160ul,41068352ul } }; */
    /* note center._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int","float" }; */
    /* note center._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note center._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul,0ul } }; */
    /* note kernel._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 41068352ul,0ul } }; */
    /* note kernel._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[21]" }; */
    /* note kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note kernel._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note smoothedim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 4110080ul,0ul } }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note smoothedim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note tempim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 20534176ul,0ul } }; */
    /* note tempim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[4110080]" }; */
    /* note tempim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note tempim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    BlurY(unsigned int _idcnt, float (&tempim)[4110080], float (&kernel)[21], int (&center), short int (&smoothedim)[4110080]);
    virtual ~BlurY(void);
    void main(void);
private:
    int _scc_const_port_0;
    int _scc_const_port_1;
    int _scc_const_port_2;
    int _scc_const_port_3;
    int _scc_const_port_4;
    int _scc_const_port_5;
    int _scc_const_port_6;
    int _scc_const_port_7;
    int _scc_const_port_8;
    int _scc_const_port_9;
    int _scc_const_port_10;
    int _scc_const_port_11;
    int _scc_const_port_12;
    int _scc_const_port_13;
    int _scc_const_port_14;
    int _scc_const_port_15;

#line 442 "CannyA8_S2.sc"
    BlurY_Slice sliceY1;

#line 9503 "CannyA8_S4.h"
    /* note sliceY1._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 443 "CannyA8_S2.sc"
    BlurY_Slice sliceY2;

#line 9509 "CannyA8_S4.h"
    /* note sliceY2._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 444 "CannyA8_S2.sc"
    BlurY_Slice sliceY3;

#line 9515 "CannyA8_S4.h"
    /* note sliceY3._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 445 "CannyA8_S2.sc"
    BlurY_Slice sliceY4;

#line 9521 "CannyA8_S4.h"
    /* note sliceY4._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 446 "CannyA8_S2.sc"
    BlurY_Slice sliceY5;

#line 9527 "CannyA8_S4.h"
    /* note sliceY5._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 447 "CannyA8_S2.sc"
    BlurY_Slice sliceY6;

#line 9533 "CannyA8_S4.h"
    /* note sliceY6._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 448 "CannyA8_S2.sc"
    BlurY_Slice sliceY7;

#line 9539 "CannyA8_S4.h"
    /* note sliceY7._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 449 "CannyA8_S2.sc"
    BlurY_Slice sliceY8;

#line 9545 "CannyA8_S4.h"
    /* note sliceY8._PR_NUMBER_DYNAMIC_RAW = 1ul; */
};

#line 467 "CannyA8_S2.sc"
class Gaussian_Smooth : public _specc::behavior
{
private:

#line 467 "CannyA8_S2.sc"
    i_img_receiver (&ImgIn); unsigned char (&image)[4110080]; float (&kernel)[21]; int (&center);

#line 9557 "CannyA8_S4.h"
    /* note ImgIn._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgIn._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note center._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 26ul } }; */
    /* note center._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int" }; */
    /* note center._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note center._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul } }; */
    /* note image._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 26ul,0ul } }; */
    /* note image._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note image._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note kernel._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 26ul,0ul } }; */
    /* note kernel._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[21]" }; */
    /* note kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note kernel._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    Gaussian_Smooth(unsigned int _idcnt, i_img_receiver (&ImgIn), unsigned char (&image)[4110080], float (&kernel)[21], int (&center));
    virtual ~Gaussian_Smooth(void);
    void main(void);
private:

#line 476 "CannyA8_S2.sc"
    Gaussian_Kernel gauss;

#line 9601 "CannyA8_S4.h"
    /* note gauss._PR_NUMBER_DYNAMIC_RAW = 26ul; */

#line 475 "CannyA8_S2.sc"
    Receive_Image receive;

#line 9607 "CannyA8_S4.h"
    /* note receive._PR_NUMBER_DYNAMIC_RAW = 26ul; */
};

#line 487 "CannyA8_S2.sc"
class Derivative_X_Y : public _specc::behavior
{
private:

#line 487 "CannyA8_S2.sc"
    short int (&smoothedim)[4110080]; short int (&delta_x)[4110080]; short int (&delta_y)[4110080];

#line 9619 "CannyA8_S4.h"
    /* note delta_x._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 94531840ul,0ul } }; */
    /* note delta_x._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_x._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note delta_x._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note delta_y._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 94531840ul,0ul } }; */
    /* note delta_y._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_y._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note delta_y._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note smoothedim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 378127360ul,0ul } }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note smoothedim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    Derivative_X_Y(unsigned int _idcnt, short int (&smoothedim)[4110080], short int (&delta_x)[4110080], short int (&delta_y)[4110080]);
    virtual ~Derivative_X_Y(void);
    void derivative_x_y(int, int);
    void main(void);
private:
};

#line 543 "CannyA8_S2.sc"
class Magnitude_X_Y : public _specc::behavior
{
private:

#line 543 "CannyA8_S2.sc"
    short int (&delta_x)[4110080]; short int (&delta_y)[4110080]; short int (&magnitude)[4110080];
    short int (&delta_xThrough)[4110080]; short int (&delta_yThrough)[4110080];

#line 9661 "CannyA8_S4.h"
    /* note delta_x._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 180843542ul,0ul } }; */
    /* note delta_x._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_x._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note delta_x._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note delta_xThrough._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 22ul,0ul } }; */
    /* note delta_xThrough._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_xThrough._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note delta_xThrough._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note delta_y._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 180843542ul,0ul } }; */
    /* note delta_y._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_y._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note delta_y._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note delta_yThrough._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 22ul,0ul } }; */
    /* note delta_yThrough._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_yThrough._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note delta_yThrough._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note magnitude._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 90421760ul,0ul } }; */
    /* note magnitude._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note magnitude._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note magnitude._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    Magnitude_X_Y(unsigned int _idcnt, short int (&delta_x)[4110080], short int (&delta_y)[4110080], short int (&magnitude)[4110080], short int (&delta_xThrough)[4110080], short int (&delta_yThrough)[4110080]);
    virtual ~Magnitude_X_Y(void);
    void magnitude_x_y(int, int);
    void main(void);
private:
};

#line 575 "CannyA8_S2.sc"
class Non_Max_Supp : public _specc::behavior
{
private:

#line 575 "CannyA8_S2.sc"
    short int (&gradx)[4110080]; short int (&grady)[4110080]; short int (&mag)[4110080]; unsigned char (&nms)[4110080];
    short int (&magThrough)[4110080];

#line 9719 "CannyA8_S4.h"
    /* note gradx._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 20ul,0ul } }; */
    /* note gradx._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note gradx._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note gradx._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note grady._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 20ul,0ul } }; */
    /* note grady._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note grady._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note grady._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note mag._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 41ul,0ul } }; */
    /* note mag._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note mag._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note mag._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note magThrough._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 21ul,0ul } }; */
    /* note magThrough._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note magThrough._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note magThrough._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note nms._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 21ul,0ul } }; */
    /* note nms._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note nms._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "out" }; */
    /* note nms._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    Non_Max_Supp(unsigned int _idcnt, short int (&gradx)[4110080], short int (&grady)[4110080], short int (&mag)[4110080], unsigned char (&nms)[4110080], short int (&magThrough)[4110080]);
    virtual ~Non_Max_Supp(void);
    void main(void);
    void non_max_supp(int, int, unsigned char *);
private:
};

#line 797 "CannyA8_S2.sc"
class Apply_Hysteresis : public _specc::behavior
{
private:

#line 797 "CannyA8_S2.sc"
    short int (&mag)[4110080]; unsigned char (&nms)[4110080]; i_img_sender (&ImgOut);

#line 9776 "CannyA8_S4.h"
    /* note ImgOut._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgOut._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note mag._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 106109183ul,0ul } }; */
    /* note mag._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note mag._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note mag._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
    /* note nms._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 82201600ul,0ul } }; */
    /* note nms._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note nms._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in" }; */
    /* note nms._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul } }; */
public:
    Apply_Hysteresis(unsigned int _idcnt, short int (&mag)[4110080], unsigned char (&nms)[4110080], i_img_sender (&ImgOut));
    virtual ~Apply_Hysteresis(void);
    void apply_hysteresis(int, int, float, float, unsigned char *);
    void follow_edges(unsigned char *, short int *, short int, int);
    void main(void);
private:

#line 799 "CannyA8_S2.sc"
    unsigned char EdgeImage[4110080];

#line 9814 "CannyA8_S4.h"
    /* note EdgeImage._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note EdgeImage._PR_MEMORY_HEADER_DATATYPE = 
    { "unsigned char[4110080]" }; */
    /* note EdgeImage._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note EdgeImage._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note EdgeImage._PR_TRAFFIC_DYNAMIC_RAW = 
    {  }; */
    /* note EdgeImage._PR_TRAFFIC_HEADER_DATATYPE = 
    {  }; */
    /* note EdgeImage._PR_TRAFFIC_HEADER_ITEMTYPE = 
    {  }; */
    /* note EdgeImage._PR_TRAFFIC_STATIC_RAW = 
    {  }; */
};

#line 943 "CannyA8_S2.sc"
class DUT : public _specc::behavior
{
private:

#line 943 "CannyA8_S2.sc"
    i_img_receiver (&ImgIn); i_img_sender (&ImgOut);

#line 9841 "CannyA8_S4.h"
    /* note ImgIn._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgIn._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note ImgOut._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgOut._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
public:
    DUT(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut));
    virtual ~DUT(void);
    void main(void);
private:

#line 947 "CannyA8_S2.sc"
    _specc::piped<int,1> center;

#line 9871 "CannyA8_S4.h"
    /* note center._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note center._PR_MEMORY_HEADER_DATATYPE = 
    { "int" }; */
    /* note center._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note center._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note center._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 16440320ul,82150912ul },
      { 1ul,0ul } }; */
    /* note center._PR_TRAFFIC_HEADER_DATATYPE = 
    { "int","float" }; */
    /* note center._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note center._PR_TRAFFIC_STATIC_RAW = 
    { { 2ul,0ul },
      { 1ul,0ul } }; */

#line 951 "CannyA8_S2.sc"
    _specc::piped<short int [4110080],1> delta_x;

#line 9894 "CannyA8_S4.h"
    /* note delta_x._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note delta_x._PR_MEMORY_HEADER_DATATYPE = 
    { "short int[4110080]" }; */
    /* note delta_x._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note delta_x._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note delta_x._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 8220161ul,0ul },
      { 4110080ul,0ul } }; */
    /* note delta_x._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_x._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note delta_x._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 952 "CannyA8_S2.sc"
    _specc::piped<short int [4110080],1> delta_x2;

#line 9917 "CannyA8_S4.h"
    /* note delta_x2._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note delta_x2._PR_MEMORY_HEADER_DATATYPE = 
    { "short int[4110080]" }; */
    /* note delta_x2._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note delta_x2._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note delta_x2._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul,0ul },
      { 1ul,0ul } }; */
    /* note delta_x2._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_x2._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note delta_x2._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 953 "CannyA8_S2.sc"
    _specc::piped<short int [4110080],1> delta_y;

#line 9940 "CannyA8_S4.h"
    /* note delta_y._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note delta_y._PR_MEMORY_HEADER_DATATYPE = 
    { "short int[4110080]" }; */
    /* note delta_y._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note delta_y._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note delta_y._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 8220161ul,0ul },
      { 4110080ul,0ul } }; */
    /* note delta_y._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_y._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note delta_y._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 954 "CannyA8_S2.sc"
    _specc::piped<short int [4110080],1> delta_y2;

#line 9963 "CannyA8_S4.h"
    /* note delta_y2._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note delta_y2._PR_MEMORY_HEADER_DATATYPE = 
    { "short int[4110080]" }; */
    /* note delta_y2._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note delta_y2._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note delta_y2._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul,0ul },
      { 1ul,0ul } }; */
    /* note delta_y2._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note delta_y2._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note delta_y2._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 945 "CannyA8_S2.sc"
    _specc::piped<unsigned char [4110080],1> image;

#line 9986 "CannyA8_S4.h"
    /* note image._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note image._PR_MEMORY_HEADER_DATATYPE = 
    { "unsigned char[4110080]" }; */
    /* note image._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note image._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note image._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 20541280ul,0ul },
      { 1ul,0ul } }; */
    /* note image._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note image._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note image._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 946 "CannyA8_S2.sc"
    _specc::piped<float [21],1> kernel;

#line 10009 "CannyA8_S4.h"
    /* note kernel._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note kernel._PR_MEMORY_HEADER_DATATYPE = 
    { "float[21]" }; */
    /* note kernel._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note kernel._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note kernel._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 82150912ul,0ul },
      { 1ul,0ul } }; */
    /* note kernel._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[21]" }; */
    /* note kernel._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note kernel._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,2ul },
      { 0ul,1ul } }; */

#line 955 "CannyA8_S2.sc"
    _specc::piped<short int [4110080],1> magnitude;

#line 10032 "CannyA8_S4.h"
    /* note magnitude._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note magnitude._PR_MEMORY_HEADER_DATATYPE = 
    { "short int[4110080]" }; */
    /* note magnitude._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note magnitude._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note magnitude._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 1ul,0ul },
      { 4110080ul,0ul } }; */
    /* note magnitude._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note magnitude._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note magnitude._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 956 "CannyA8_S2.sc"
    _specc::piped<short int [4110080],1> magnitude2;

#line 10055 "CannyA8_S4.h"
    /* note magnitude2._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note magnitude2._PR_MEMORY_HEADER_DATATYPE = 
    { "short int[4110080]" }; */
    /* note magnitude2._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note magnitude2._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note magnitude2._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 5305459ul,0ul },
      { 1ul,0ul } }; */
    /* note magnitude2._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note magnitude2._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note magnitude2._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 949 "CannyA8_S2.sc"
    _specc::piped<unsigned char [4110080],1> nms;

#line 10078 "CannyA8_S4.h"
    /* note nms._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note nms._PR_MEMORY_HEADER_DATATYPE = 
    { "unsigned char[4110080]" }; */
    /* note nms._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note nms._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note nms._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 4110080ul,0ul },
      { 1ul,0ul } }; */
    /* note nms._PR_TRAFFIC_HEADER_DATATYPE = 
    { "unsigned char","unsigned char[4110080]" }; */
    /* note nms._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note nms._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 950 "CannyA8_S2.sc"
    _specc::piped<short int [4110080],1> smoothedim;

#line 10101 "CannyA8_S4.h"
    /* note smoothedim._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note smoothedim._PR_MEMORY_HEADER_DATATYPE = 
    { "short int[4110080]" }; */
    /* note smoothedim._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note smoothedim._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note smoothedim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 16440320ul,0ul },
      { 4110080ul,0ul } }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "short int","short int[4110080]" }; */
    /* note smoothedim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note smoothedim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 948 "CannyA8_S2.sc"
    _specc::piped<float [4110080],1> tempim;

#line 10124 "CannyA8_S4.h"
    /* note tempim._PR_MEMORY_DYNAMIC_RAW = 
    { { 0ul } }; */
    /* note tempim._PR_MEMORY_HEADER_DATATYPE = 
    { "float[4110080]" }; */
    /* note tempim._PR_MEMORY_HEADER_ITEMTYPE = 
    { "global" }; */
    /* note tempim._PR_MEMORY_STATIC_RAW = 
    { { 1ul } }; */
    /* note tempim._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 20534176ul,0ul },
      { 4110080ul,0ul } }; */
    /* note tempim._PR_TRAFFIC_HEADER_DATATYPE = 
    { "float","float[4110080]" }; */
    /* note tempim._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note tempim._PR_TRAFFIC_STATIC_RAW = 
    { { 0ul,1ul },
      { 0ul,1ul } }; */

#line 964 "CannyA8_S2.sc"
    Apply_Hysteresis apply_hysteresis;

#line 10147 "CannyA8_S4.h"
    /* note apply_hysteresis._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 959 "CannyA8_S2.sc"
    BlurX blurX;

#line 10153 "CannyA8_S4.h"
    /* note blurX._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 960 "CannyA8_S2.sc"
    BlurY blurY;

#line 10159 "CannyA8_S4.h"
    /* note blurY._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 961 "CannyA8_S2.sc"
    Derivative_X_Y derivative_x_y;

#line 10165 "CannyA8_S4.h"
    /* note derivative_x_y._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 958 "CannyA8_S2.sc"
    Gaussian_Smooth gaussian_smooth;

#line 10171 "CannyA8_S4.h"
    /* note gaussian_smooth._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 962 "CannyA8_S2.sc"
    Magnitude_X_Y magnitude_x_y;

#line 10177 "CannyA8_S4.h"
    /* note magnitude_x_y._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 963 "CannyA8_S2.sc"
    Non_Max_Supp non_max_supp;

#line 10183 "CannyA8_S4.h"
    /* note non_max_supp._PR_NUMBER_DYNAMIC_RAW = 1ul; */
};

#line 1010 "CannyA8_S2.sc"
class Platform : public _specc::behavior
{
private:

#line 1010 "CannyA8_S2.sc"
    i_img_receiver (&ImgIn); i_img_sender (&ImgOut);

#line 10195 "CannyA8_S4.h"
    /* note ImgIn._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgIn._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgIn._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
    /* note ImgOut._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note ImgOut._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note ImgOut._PR_TRAFFIC_STATIC_RAW = 
    { { 1ul },
      { 1ul } }; */
public:
    Platform(unsigned int _idcnt, i_img_receiver (&ImgIn), i_img_sender (&ImgOut));
    virtual ~Platform(void);
    void main();
private:
    unsigned long int _scc_const_port_0;
    unsigned long int _scc_const_port_1;

#line 1014 "CannyA8_S2.sc"
    DUT canny;

#line 10227 "CannyA8_S4.h"
    /* note canny._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 1013 "CannyA8_S2.sc"
    DataIn din;

#line 10233 "CannyA8_S4.h"
    /* note din._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 1015 "CannyA8_S2.sc"
    DataOut dout;

#line 10239 "CannyA8_S4.h"
    /* note dout._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 1012 "CannyA8_S2.sc"
    c_img_queue q1;

#line 10245 "CannyA8_S4.h"
    /* note q1._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note q1._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note q1._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note q1._PR_TRAFFIC_STATIC_RAW = 
    { { 2ul },
      { 2ul } }; */

#line 1012 "CannyA8_S2.sc"
    c_img_queue q2;

#line 10260 "CannyA8_S4.h"
    /* note q2._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note q2._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note q2._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note q2._PR_TRAFFIC_STATIC_RAW = 
    { { 2ul },
      { 2ul } }; */
};

#line 1028 "CannyA8_S2.sc"
class Main : public _specc::class_type
{
private:
public:

#line 10279 "CannyA8_S4.h"
    Main(unsigned int _idcnt);
    virtual ~Main(void);
    int main(void);
private:
    unsigned long int _scc_const_port_0;
    unsigned long int _scc_const_port_1;
    unsigned long int _scc_const_port_2;

#line 1034 "CannyA8_S2.sc"
    Monitor monitor;

#line 10291 "CannyA8_S4.h"
    /* note monitor._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 1033 "CannyA8_S2.sc"
    Platform platform;

#line 10297 "CannyA8_S4.h"
    /* note platform._PR_NUMBER_DYNAMIC_RAW = 1ul; */

#line 1030 "CannyA8_S2.sc"
    c_img_queue q1;

#line 10303 "CannyA8_S4.h"
    /* note q1._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note q1._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note q1._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note q1._PR_TRAFFIC_STATIC_RAW = 
    { { 2ul },
      { 2ul } }; */

#line 1030 "CannyA8_S2.sc"
    c_img_queue q2;

#line 10318 "CannyA8_S4.h"
    /* note q2._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note q2._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note q2._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note q2._PR_TRAFFIC_STATIC_RAW = 
    { { 2ul },
      { 2ul } }; */

#line 1031 "CannyA8_S2.sc"
    c_time_queue qt;

#line 10333 "CannyA8_S4.h"
    /* note qt._PR_TRAFFIC_DYNAMIC_RAW = 
    { { 0ul },
      { 0ul } }; */
    /* note qt._PR_TRAFFIC_HEADER_DATATYPE = 
    { "bool" }; */
    /* note qt._PR_TRAFFIC_HEADER_ITEMTYPE = 
    { "in","out" }; */
    /* note qt._PR_TRAFFIC_STATIC_RAW = 
    { { 2ul },
      { 2ul } }; */

#line 1032 "CannyA8_S2.sc"
    Stimulus stimulus;

#line 10348 "CannyA8_S4.h"
    /* note stimulus._PR_NUMBER_DYNAMIC_RAW = 1ul; */
};

// variable and function declarations ////////////////////////////////

#line 49 "/opt/sce/inc/sim.sh"
extern const int _SPECC_VERSION_MAJOR;
extern const int _SPECC_VERSION_MINOR;

#line 42 "/opt/sce/inc/sim/bit.sh"
extern "C" char *bit2str(unsigned int, char *, ...);

#line 48 "/opt/sce/inc/sim/bit.sh"
extern "C" char *ubit2str(unsigned int, char *, ...);




extern "C" void str2bit(unsigned int, const char *, ...);




extern "C" void str2ubit(unsigned int, const char *, ...);

#line 41 "/opt/sce/inc/sim/longlong.sh"
extern "C" char *ll2str(unsigned int, char *, long long int);




extern "C" char *ull2str(unsigned int, char *, unsigned long long int);




extern "C" long long int str2ll(unsigned int, const char *);



extern "C" unsigned long long int str2ull(unsigned int, const char *);

#line 71 "/opt/sce/inc/sim/sim.sh"
extern "C" unsigned long long int thread_id(void);

extern "C" void sim_exit(int);

#line 73 "/opt/sce/inc/sim/time.sh"
extern "C" unsigned long long int now(void);

extern "C" unsigned long long int delta(void);


extern "C" const char *time2str(char [21], unsigned long long int);



extern "C" unsigned long long int str2time(const char *);

#line 33 "/usr/include/alloca.h"
extern "C" void *alloca(unsigned long int);

#line 55 "/usr/include/bits/mathcalls.h"
extern "C" double __acos(double); extern "C" float __acosf(float); extern "C" long double __acosl(long double); extern "C" double acos(double); extern "C" float acosf(float); extern "C" long double acosl(long double);

extern "C" double __asin(double); extern "C" float __asinf(float); extern "C" long double __asinl(long double); extern "C" double asin(double); extern "C" float asinf(float); extern "C" long double asinl(long double);

extern "C" double __atan(double); extern "C" float __atanf(float); extern "C" long double __atanl(long double); extern "C" double atan(double); extern "C" float atanf(float); extern "C" long double atanl(long double);

extern "C" double __atan2(double, double); extern "C" float __atan2f(float, float); extern "C" long double __atan2l(long double, long double); extern "C" double atan2(double, double); extern "C" float atan2f(float, float); extern "C" long double atan2l(long double, long double);


extern "C" double __cos(double); extern "C" float __cosf(float); extern "C" long double __cosl(long double); extern "C" double cos(double); extern "C" float cosf(float); extern "C" long double cosl(long double);

extern "C" double __sin(double); extern "C" float __sinf(float); extern "C" long double __sinl(long double); extern "C" double sin(double); extern "C" float sinf(float); extern "C" long double sinl(long double);

extern "C" double __tan(double); extern "C" float __tanf(float); extern "C" long double __tanl(long double); extern "C" double tan(double); extern "C" float tanf(float); extern "C" long double tanl(long double);




extern "C" double __cosh(double); extern "C" float __coshf(float); extern "C" long double __coshl(long double); extern "C" double cosh(double); extern "C" float coshf(float); extern "C" long double coshl(long double);

extern "C" double __sinh(double); extern "C" float __sinhf(float); extern "C" long double __sinhl(long double); extern "C" double sinh(double); extern "C" float sinhf(float); extern "C" long double sinhl(long double);

extern "C" double __tanh(double); extern "C" float __tanhf(float); extern "C" long double __tanhl(long double); extern "C" double tanh(double); extern "C" float tanhf(float); extern "C" long double tanhl(long double);

#line 89 "/usr/include/bits/mathcalls.h"
extern "C" double __acosh(double); extern "C" float __acoshf(float); extern "C" long double __acoshl(long double); extern "C" double acosh(double); extern "C" float acoshf(float); extern "C" long double acoshl(long double);

extern "C" double __asinh(double); extern "C" float __asinhf(float); extern "C" long double __asinhl(long double); extern "C" double asinh(double); extern "C" float asinhf(float); extern "C" long double asinhl(long double);

extern "C" double __atanh(double); extern "C" float __atanhf(float); extern "C" long double __atanhl(long double); extern "C" double atanh(double); extern "C" float atanhf(float); extern "C" long double atanhl(long double);

#line 101 "/usr/include/bits/mathcalls.h"
extern "C" double __exp(double); extern "C" float __expf(float); extern "C" long double __expl(long double); extern "C" double exp(double); extern "C" float expf(float); extern "C" long double expl(long double);


extern "C" double __frexp(double, int *); extern "C" float __frexpf(float, int *); extern "C" long double __frexpl(long double, int *); extern "C" double frexp(double, int *); extern "C" float frexpf(float, int *); extern "C" long double frexpl(long double, int *);


extern "C" double __ldexp(double, int); extern "C" float __ldexpf(float, int); extern "C" long double __ldexpl(long double, int); extern "C" double ldexp(double, int); extern "C" float ldexpf(float, int); extern "C" long double ldexpl(long double, int);


extern "C" double __log(double); extern "C" float __logf(float); extern "C" long double __logl(long double); extern "C" double log(double); extern "C" float logf(float); extern "C" long double logl(long double);


extern "C" double __log10(double); extern "C" float __log10f(float); extern "C" long double __log10l(long double); extern "C" double log10(double); extern "C" float log10f(float); extern "C" long double log10l(long double);


extern "C" double __modf(double, double *); extern "C" float __modff(float, float *); extern "C" long double __modfl(long double, long double *); extern "C" double modf(double, double *); extern "C" float modff(float, float *); extern "C" long double modfl(long double, long double *);

#line 129 "/usr/include/bits/mathcalls.h"
extern "C" double __expm1(double); extern "C" float __expm1f(float); extern "C" long double __expm1l(long double); extern "C" double expm1(double); extern "C" float expm1f(float); extern "C" long double expm1l(long double);


extern "C" double __log1p(double); extern "C" float __log1pf(float); extern "C" long double __log1pl(long double); extern "C" double log1p(double); extern "C" float log1pf(float); extern "C" long double log1pl(long double);


extern "C" double __logb(double); extern "C" float __logbf(float); extern "C" long double __logbl(long double); extern "C" double logb(double); extern "C" float logbf(float); extern "C" long double logbl(long double);

#line 142 "/usr/include/bits/mathcalls.h"
extern "C" double __exp2(double); extern "C" float __exp2f(float); extern "C" long double __exp2l(long double); extern "C" double exp2(double); extern "C" float exp2f(float); extern "C" long double exp2l(long double);


extern "C" double __log2(double); extern "C" float __log2f(float); extern "C" long double __log2l(long double); extern "C" double log2(double); extern "C" float log2f(float); extern "C" long double log2l(long double);

#line 154 "/usr/include/bits/mathcalls.h"
extern "C" double __pow(double, double); extern "C" float __powf(float, float); extern "C" long double __powl(long double, long double); extern "C" double pow(double, double); extern "C" float powf(float, float); extern "C" long double powl(long double, long double);


extern "C" double __sqrt(double); extern "C" float __sqrtf(float); extern "C" long double __sqrtl(long double); extern "C" double sqrt(double); extern "C" float sqrtf(float); extern "C" long double sqrtl(long double);

#line 163 "/usr/include/bits/mathcalls.h"
extern "C" double __hypot(double, double); extern "C" float __hypotf(float, float); extern "C" long double __hypotl(long double, long double); extern "C" double hypot(double, double); extern "C" float hypotf(float, float); extern "C" long double hypotl(long double, long double);

#line 170 "/usr/include/bits/mathcalls.h"
extern "C" double __cbrt(double); extern "C" float __cbrtf(float); extern "C" long double __cbrtl(long double); extern "C" double cbrt(double); extern "C" float cbrtf(float); extern "C" long double cbrtl(long double);

#line 179 "/usr/include/bits/mathcalls.h"
extern "C" double __ceil(double); extern "C" float __ceilf(float); extern "C" long double __ceill(long double); extern "C" double ceil(double); extern "C" float ceilf(float); extern "C" long double ceill(long double);


extern "C" double __fabs(double); extern "C" float __fabsf(float); extern "C" long double __fabsl(long double); extern "C" double fabs(double); extern "C" float fabsf(float); extern "C" long double fabsl(long double);


extern "C" double __floor(double); extern "C" float __floorf(float); extern "C" long double __floorl(long double); extern "C" double floor(double); extern "C" float floorf(float); extern "C" long double floorl(long double);


extern "C" double __fmod(double, double); extern "C" float __fmodf(float, float); extern "C" long double __fmodl(long double, long double); extern "C" double fmod(double, double); extern "C" float fmodf(float, float); extern "C" long double fmodl(long double, long double);




extern "C" int __isinf(double); extern "C" int __isinff(float); extern "C" int __isinfl(long double);


extern "C" int __finite(double); extern "C" int __finitef(float); extern "C" int __finitel(long double);

#line 202 "/usr/include/bits/mathcalls.h"
extern "C" int isinf(double); extern "C" int isinff(float); extern "C" int isinfl(long double);


extern "C" int finite(double); extern "C" int finitef(float); extern "C" int finitel(long double);


extern "C" double __drem(double, double); extern "C" float __dremf(float, float); extern "C" long double __dreml(long double, long double); extern "C" double drem(double, double); extern "C" float dremf(float, float); extern "C" long double dreml(long double, long double);



extern "C" double __significand(double); extern "C" float __significandf(float); extern "C" long double __significandl(long double); extern "C" double significand(double); extern "C" float significandf(float); extern "C" long double significandl(long double);

#line 218 "/usr/include/bits/mathcalls.h"
extern "C" double __copysign(double, double); extern "C" float __copysignf(float, float); extern "C" long double __copysignl(long double, long double); extern "C" double copysign(double, double); extern "C" float copysignf(float, float); extern "C" long double copysignl(long double, long double);

#line 225 "/usr/include/bits/mathcalls.h"
extern "C" double __nan(const char *); extern "C" float __nanf(const char *); extern "C" long double __nanl(const char *); extern "C" double nan(const char *); extern "C" float nanf(const char *); extern "C" long double nanl(const char *);

#line 231 "/usr/include/bits/mathcalls.h"
extern "C" int __isnan(double); extern "C" int __isnanf(float); extern "C" int __isnanl(long double);



extern "C" int isnan(double); extern "C" int isnanf(float); extern "C" int isnanl(long double);


extern "C" double __j0(double); extern "C" float __j0f(float); extern "C" long double __j0l(long double); extern "C" double j0(double); extern "C" float j0f(float); extern "C" long double j0l(long double);
extern "C" double __j1(double); extern "C" float __j1f(float); extern "C" long double __j1l(long double); extern "C" double j1(double); extern "C" float j1f(float); extern "C" long double j1l(long double);
extern "C" double __jn(int, double); extern "C" float __jnf(int, float); extern "C" long double __jnl(int, long double); extern "C" double jn(int, double); extern "C" float jnf(int, float); extern "C" long double jnl(int, long double);
extern "C" double __y0(double); extern "C" float __y0f(float); extern "C" long double __y0l(long double); extern "C" double y0(double); extern "C" float y0f(float); extern "C" long double y0l(long double);
extern "C" double __y1(double); extern "C" float __y1f(float); extern "C" long double __y1l(long double); extern "C" double y1(double); extern "C" float y1f(float); extern "C" long double y1l(long double);
extern "C" double __yn(int, double); extern "C" float __ynf(int, float); extern "C" long double __ynl(int, long double); extern "C" double yn(int, double); extern "C" float ynf(int, float); extern "C" long double ynl(int, long double);

#line 250 "/usr/include/bits/mathcalls.h"
extern "C" double __erf(double); extern "C" float __erff(float); extern "C" long double __erfl(long double); extern "C" double erf(double); extern "C" float erff(float); extern "C" long double erfl(long double);
extern "C" double __erfc(double); extern "C" float __erfcf(float); extern "C" long double __erfcl(long double); extern "C" double erfc(double); extern "C" float erfcf(float); extern "C" long double erfcl(long double);
extern "C" double __lgamma(double); extern "C" float __lgammaf(float); extern "C" long double __lgammal(long double); extern "C" double lgamma(double); extern "C" float lgammaf(float); extern "C" long double lgammal(long double);

#line 259 "/usr/include/bits/mathcalls.h"
extern "C" double __tgamma(double); extern "C" float __tgammaf(float); extern "C" long double __tgammal(long double); extern "C" double tgamma(double); extern "C" float tgammaf(float); extern "C" long double tgammal(long double);

#line 265 "/usr/include/bits/mathcalls.h"
extern "C" double __gamma(double); extern "C" float __gammaf(float); extern "C" long double __gammal(long double); extern "C" double gamma(double); extern "C" float gammaf(float); extern "C" long double gammal(long double);

#line 272 "/usr/include/bits/mathcalls.h"
extern "C" double __lgamma_r(double, int *); extern "C" float __lgammaf_r(float, int *); extern "C" long double __lgammal_r(long double, int *); extern "C" double lgamma_r(double, int *); extern "C" float lgammaf_r(float, int *); extern "C" long double lgammal_r(long double, int *);

#line 280 "/usr/include/bits/mathcalls.h"
extern "C" double __rint(double); extern "C" float __rintf(float); extern "C" long double __rintl(long double); extern "C" double rint(double); extern "C" float rintf(float); extern "C" long double rintl(long double);


extern "C" double __nextafter(double, double); extern "C" float __nextafterf(float, float); extern "C" long double __nextafterl(long double, long double); extern "C" double nextafter(double, double); extern "C" float nextafterf(float, float); extern "C" long double nextafterl(long double, long double);

extern "C" double __nexttoward(double, long double); extern "C" float __nexttowardf(float, long double); extern "C" long double __nexttowardl(long double, long double); extern "C" double nexttoward(double, long double); extern "C" float nexttowardf(float, long double); extern "C" long double nexttowardl(long double, long double);



extern "C" double __remainder(double, double); extern "C" float __remainderf(float, float); extern "C" long double __remainderl(long double, long double); extern "C" double remainder(double, double); extern "C" float remainderf(float, float); extern "C" long double remainderl(long double, long double);



extern "C" double __scalbn(double, int); extern "C" float __scalbnf(float, int); extern "C" long double __scalbnl(long double, int); extern "C" double scalbn(double, int); extern "C" float scalbnf(float, int); extern "C" long double scalbnl(long double, int);



extern "C" int __ilogb(double); extern "C" int __ilogbf(float); extern "C" int __ilogbl(long double); extern "C" int ilogb(double); extern "C" int ilogbf(float); extern "C" int ilogbl(long double);




extern "C" double __scalbln(double, long int); extern "C" float __scalblnf(float, long int); extern "C" long double __scalblnl(long double, long int); extern "C" double scalbln(double, long int); extern "C" float scalblnf(float, long int); extern "C" long double scalblnl(long double, long int);



extern "C" double __nearbyint(double); extern "C" float __nearbyintf(float); extern "C" long double __nearbyintl(long double); extern "C" double nearbyint(double); extern "C" float nearbyintf(float); extern "C" long double nearbyintl(long double);



extern "C" double __round(double); extern "C" float __roundf(float); extern "C" long double __roundl(long double); extern "C" double round(double); extern "C" float roundf(float); extern "C" long double roundl(long double);



extern "C" double __trunc(double); extern "C" float __truncf(float); extern "C" long double __truncl(long double); extern "C" double trunc(double); extern "C" float truncf(float); extern "C" long double truncl(long double);




extern "C" double __remquo(double, double, int *); extern "C" float __remquof(float, float, int *); extern "C" long double __remquol(long double, long double, int *); extern "C" double remquo(double, double, int *); extern "C" float remquof(float, float, int *); extern "C" long double remquol(long double, long double, int *);

#line 326 "/usr/include/bits/mathcalls.h"
extern "C" long int __lrint(double); extern "C" long int __lrintf(float); extern "C" long int __lrintl(long double); extern "C" long int lrint(double); extern "C" long int lrintf(float); extern "C" long int lrintl(long double);
extern "C" long long int __llrint(double); extern "C" long long int __llrintf(float); extern "C" long long int __llrintl(long double); extern "C" long long int llrint(double); extern "C" long long int llrintf(float); extern "C" long long int llrintl(long double);



extern "C" long int __lround(double); extern "C" long int __lroundf(float); extern "C" long int __lroundl(long double); extern "C" long int lround(double); extern "C" long int lroundf(float); extern "C" long int lroundl(long double);
extern "C" long long int __llround(double); extern "C" long long int __llroundf(float); extern "C" long long int __llroundl(long double); extern "C" long long int llround(double); extern "C" long long int llroundf(float); extern "C" long long int llroundl(long double);



extern "C" double __fdim(double, double); extern "C" float __fdimf(float, float); extern "C" long double __fdiml(long double, long double); extern "C" double fdim(double, double); extern "C" float fdimf(float, float); extern "C" long double fdiml(long double, long double);


extern "C" double __fmax(double, double); extern "C" float __fmaxf(float, float); extern "C" long double __fmaxl(long double, long double); extern "C" double fmax(double, double); extern "C" float fmaxf(float, float); extern "C" long double fmaxl(long double, long double);


extern "C" double __fmin(double, double); extern "C" float __fminf(float, float); extern "C" long double __fminl(long double, long double); extern "C" double fmin(double, double); extern "C" float fminf(float, float); extern "C" long double fminl(long double, long double);



extern "C" int __fpclassify(double); extern "C" int __fpclassifyf(float); extern "C" int __fpclassifyl(long double);



extern "C" int __signbit(double); extern "C" int __signbitf(float); extern "C" int __signbitl(long double);




extern "C" double __fma(double, double, double); extern "C" float __fmaf(float, float, float); extern "C" long double __fmal(long double, long double, long double); extern "C" double fma(double, double, double); extern "C" float fmaf(float, float, float); extern "C" long double fmal(long double, long double, long double);

#line 364 "/usr/include/bits/mathcalls.h"
extern "C" double __scalb(double, double); extern "C" float __scalbf(float, float); extern "C" long double __scalbl(long double, long double); extern "C" double scalb(double, double); extern "C" float scalbf(float, float); extern "C" long double scalbl(long double, long double);

#line 27 "/usr/include/bits/sys_errlist.h"
extern int sys_nerr;
extern const char *const sys_errlist[];

#line 346 "/usr/include/libio.h"
extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;

#line 416 "/usr/include/libio.h"
extern "C" int __underflow(struct _IO_FILE *);
extern "C" int __uflow(struct _IO_FILE *);
extern "C" int __overflow(struct _IO_FILE *, int);

#line 460 "/usr/include/libio.h"
extern "C" int _IO_getc(struct _IO_FILE *);
extern "C" int _IO_putc(int, struct _IO_FILE *);
extern "C" int _IO_feof(struct _IO_FILE *);
extern "C" int _IO_ferror(struct _IO_FILE *);

extern "C" int _IO_peekc_locked(struct _IO_FILE *);

#line 471 "/usr/include/libio.h"
extern "C" void _IO_flockfile(struct _IO_FILE *);
extern "C" void _IO_funlockfile(struct _IO_FILE *);
extern "C" int _IO_ftrylockfile(struct _IO_FILE *);

#line 490 "/usr/include/libio.h"
extern "C" int _IO_vfscanf(struct _IO_FILE *, const char *, void *, int *);

extern "C" int _IO_vfprintf(struct _IO_FILE *, const char *, void *);

extern "C" long int _IO_padn(struct _IO_FILE *, int, long int);
extern "C" unsigned long int _IO_sgetn(struct _IO_FILE *, void *, unsigned long int);

extern "C" long int _IO_seekoff(struct _IO_FILE *, long int, int, int);
extern "C" long int _IO_seekpos(struct _IO_FILE *, long int, int);

extern "C" void _IO_free_backup_area(struct _IO_FILE *);

#line 157 "/usr/include/math.h"
extern int signgam;

#line 303 "/usr/include/math.h"
extern _LIB_VERSION_TYPE _LIB_VERSION;

#line 329 "/usr/include/math.h"
extern "C" int matherr(struct exception *);

#line 165 "/usr/include/stdio.h"
extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;

#line 177 "/usr/include/stdio.h"
extern "C" int remove(const char *);

extern "C" int rename(const char *, const char *);

#line 194 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *tmpfile(void);

#line 208 "/usr/include/stdio.h"
extern "C" char *tmpnam(char *);

#line 214 "/usr/include/stdio.h"
extern "C" char *tmpnam_r(char *);

#line 226 "/usr/include/stdio.h"
extern "C" char *tempnam(const char *, const char *);

#line 236 "/usr/include/stdio.h"
extern "C" int fclose(struct _IO_FILE *);




extern "C" int fflush(struct _IO_FILE *);

#line 251 "/usr/include/stdio.h"
extern "C" int fflush_unlocked(struct _IO_FILE *);

#line 271 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *fopen(const char *, const char *);

#line 277 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *freopen(const char *, const char *, struct _IO_FILE *);

#line 305 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *fdopen(int, const char *);

#line 331 "/usr/include/stdio.h"
extern "C" void setbuf(struct _IO_FILE *, char *);



extern "C" int setvbuf(struct _IO_FILE *, char *, int, unsigned long int);

#line 342 "/usr/include/stdio.h"
extern "C" void setbuffer(struct _IO_FILE *, char *, unsigned long int);



extern "C" void setlinebuf(struct _IO_FILE *);

#line 355 "/usr/include/stdio.h"
extern "C" int fprintf(struct _IO_FILE *, const char *, ...);

#line 361 "/usr/include/stdio.h"
extern "C" int printf(const char *, ...);

extern "C" int sprintf(char *, const char *, ...);

#line 370 "/usr/include/stdio.h"
extern "C" int vfprintf(struct _IO_FILE *, const char *, void *);

#line 376 "/usr/include/stdio.h"
extern "C" int vprintf(const char *, void *);

extern "C" int vsprintf(char *, const char *, void *);

#line 385 "/usr/include/stdio.h"
extern "C" int snprintf(char *, unsigned long int, const char *, ...);



extern "C" int vsnprintf(char *, unsigned long int, const char *, void *);

#line 429 "/usr/include/stdio.h"
extern "C" int fscanf(struct _IO_FILE *, const char *, ...);

#line 435 "/usr/include/stdio.h"
extern "C" int scanf(const char *, ...);

extern "C" int sscanf(const char *, const char *, ...);

#line 456 "/usr/include/stdio.h"
extern "C" int __isoc99_fscanf(struct _IO_FILE *, const char *, ...);

extern "C" int __isoc99_scanf(const char *, ...);
extern "C" int __isoc99_sscanf(const char *, const char *, ...);

#line 475 "/usr/include/stdio.h"
extern "C" int vfscanf(struct _IO_FILE *, const char *, void *);

#line 483 "/usr/include/stdio.h"
extern "C" int vscanf(const char *, void *);



extern "C" int vsscanf(const char *, const char *, void *);

#line 512 "/usr/include/stdio.h"
extern "C" int __isoc99_vfscanf(struct _IO_FILE *, const char *, void *);


extern "C" int __isoc99_vscanf(const char *, void *);

extern "C" int __isoc99_vsscanf(const char *, const char *, void *);

#line 535 "/usr/include/stdio.h"
extern "C" int fgetc(struct _IO_FILE *);
extern "C" int getc(struct _IO_FILE *);

#line 542 "/usr/include/stdio.h"
extern "C" int getchar(void);

#line 554 "/usr/include/stdio.h"
extern "C" int getc_unlocked(struct _IO_FILE *);
extern "C" int getchar_unlocked(void);

#line 565 "/usr/include/stdio.h"
extern "C" int fgetc_unlocked(struct _IO_FILE *);

#line 577 "/usr/include/stdio.h"
extern "C" int fputc(int, struct _IO_FILE *);
extern "C" int putc(int, struct _IO_FILE *);

#line 584 "/usr/include/stdio.h"
extern "C" int putchar(int);

#line 598 "/usr/include/stdio.h"
extern "C" int fputc_unlocked(int, struct _IO_FILE *);

#line 606 "/usr/include/stdio.h"
extern "C" int putc_unlocked(int, struct _IO_FILE *);
extern "C" int putchar_unlocked(int);

#line 614 "/usr/include/stdio.h"
extern "C" int getw(struct _IO_FILE *);


extern "C" int putw(int, struct _IO_FILE *);

#line 626 "/usr/include/stdio.h"
extern "C" char *fgets(char *, int, struct _IO_FILE *);

#line 634 "/usr/include/stdio.h"
extern "C" char *gets(char *);

#line 684 "/usr/include/stdio.h"
extern "C" int fputs(const char *, struct _IO_FILE *);

#line 690 "/usr/include/stdio.h"
extern "C" int puts(const char *);

#line 697 "/usr/include/stdio.h"
extern "C" int ungetc(int, struct _IO_FILE *);

#line 704 "/usr/include/stdio.h"
extern "C" unsigned long int fread(void *, unsigned long int, unsigned long int, struct _IO_FILE *);

#line 710 "/usr/include/stdio.h"
extern "C" unsigned long int fwrite(const void *, unsigned long int, unsigned long int, struct _IO_FILE *);

#line 732 "/usr/include/stdio.h"
extern "C" unsigned long int fread_unlocked(void *, unsigned long int, unsigned long int, struct _IO_FILE *);

extern "C" unsigned long int fwrite_unlocked(const void *, unsigned long int, unsigned long int, struct _IO_FILE *);

#line 744 "/usr/include/stdio.h"
extern "C" int fseek(struct _IO_FILE *, long int, int);




extern "C" long int ftell(struct _IO_FILE *);




extern "C" void rewind(struct _IO_FILE *);

#line 768 "/usr/include/stdio.h"
extern "C" int fseeko(struct _IO_FILE *, long int, int);




extern "C" long int ftello(struct _IO_FILE *);

#line 793 "/usr/include/stdio.h"
extern "C" int fgetpos(struct _IO_FILE *, _G_fpos_t *);




extern "C" int fsetpos(struct _IO_FILE *, const _G_fpos_t *);

#line 821 "/usr/include/stdio.h"
extern "C" void clearerr(struct _IO_FILE *);

extern "C" int feof(struct _IO_FILE *);

extern "C" int ferror(struct _IO_FILE *);




extern "C" void clearerr_unlocked(struct _IO_FILE *);
extern "C" int feof_unlocked(struct _IO_FILE *);
extern "C" int ferror_unlocked(struct _IO_FILE *);

#line 841 "/usr/include/stdio.h"
extern "C" void perror(const char *);

#line 853 "/usr/include/stdio.h"
extern "C" int fileno(struct _IO_FILE *);




extern "C" int fileno_unlocked(struct _IO_FILE *);

#line 868 "/usr/include/stdio.h"
extern "C" struct _IO_FILE *popen(const char *, const char *);

#line 874 "/usr/include/stdio.h"
extern "C" int pclose(struct _IO_FILE *);

#line 880 "/usr/include/stdio.h"
extern "C" char *ctermid(char *);

#line 908 "/usr/include/stdio.h"
extern "C" void flockfile(struct _IO_FILE *);



extern "C" int ftrylockfile(struct _IO_FILE *);


extern "C" void funlockfile(struct _IO_FILE *);

#line 140 "/usr/include/stdlib.h"
extern "C" unsigned long int __ctype_get_mb_cur_max(void);




extern "C" double atof(const char *);


extern "C" int atoi(const char *);


extern "C" long int atol(const char *);

#line 158 "/usr/include/stdlib.h"
extern "C" long long int atoll(const char *);

#line 165 "/usr/include/stdlib.h"
extern "C" double strtod(const char *, char **);

#line 173 "/usr/include/stdlib.h"
extern "C" float strtof(const char *, char **);


extern "C" long double strtold(const char *, char **);

#line 184 "/usr/include/stdlib.h"
extern "C" long int strtol(const char *, char **, int);



extern "C" unsigned long int strtoul(const char *, char **, int);

#line 210 "/usr/include/stdlib.h"
extern "C" long long int strtoll(const char *, char **, int);




extern "C" unsigned long long int strtoull(const char *, char **, int);

#line 311 "/usr/include/stdlib.h"
extern "C" char *l64a(long int);


extern "C" long int a64l(const char *);

#line 327 "/usr/include/stdlib.h"
extern "C" long int random(void);


extern "C" void srandom(unsigned int);

#line 336 "/usr/include/stdlib.h"
extern "C" char *initstate(unsigned int, char *, unsigned long int);




extern "C" char *setstate(char *);

#line 360 "/usr/include/stdlib.h"
extern "C" int random_r(struct random_data *, int *);


extern "C" int srandom_r(unsigned int, struct random_data *);


extern "C" int initstate_r(unsigned int, char *, unsigned long int, struct random_data *);




extern "C" int setstate_r(char *, struct random_data *);

#line 380 "/usr/include/stdlib.h"
extern "C" int rand(void);

extern "C" void srand(unsigned int);




extern "C" int rand_r(unsigned int *);

#line 395 "/usr/include/stdlib.h"
extern "C" double drand48(void);
extern "C" double erand48(unsigned short int [3]);


extern "C" long int lrand48(void);
extern "C" long int nrand48(unsigned short int [3]);



extern "C" long int mrand48(void);
extern "C" long int jrand48(unsigned short int [3]);



extern "C" void srand48(long int);
extern "C" unsigned short int *seed48(unsigned short int [3]);

extern "C" void lcong48(unsigned short int [7]);

#line 428 "/usr/include/stdlib.h"
extern "C" int drand48_r(struct drand48_data *, double *);

extern "C" int erand48_r(unsigned short int [3], struct drand48_data *, double *);




extern "C" int lrand48_r(struct drand48_data *, long int *);


extern "C" int nrand48_r(unsigned short int [3], struct drand48_data *, long int *);

#line 444 "/usr/include/stdlib.h"
extern "C" int mrand48_r(struct drand48_data *, long int *);


extern "C" int jrand48_r(unsigned short int [3], struct drand48_data *, long int *);

#line 453 "/usr/include/stdlib.h"
extern "C" int srand48_r(long int, struct drand48_data *);


extern "C" int seed48_r(unsigned short int [3], struct drand48_data *);


extern "C" int lcong48_r(unsigned short int [7], struct drand48_data *);

#line 471 "/usr/include/stdlib.h"
extern "C" void *malloc(unsigned long int);

extern "C" void *calloc(unsigned long int, unsigned long int);

#line 485 "/usr/include/stdlib.h"
extern "C" void *realloc(void *, unsigned long int);


extern "C" void free(void *);




extern "C" void cfree(void *);

#line 503 "/usr/include/stdlib.h"
extern "C" void *valloc(unsigned long int);




extern "C" int posix_memalign(void **, unsigned long int, unsigned long int);

#line 514 "/usr/include/stdlib.h"
extern "C" void abort(void);



extern "C" int atexit(void (*)(void));

#line 536 "/usr/include/stdlib.h"
extern "C" int on_exit(void (*)(int, void *), void *);

#line 544 "/usr/include/stdlib.h"
extern "C" void exit(int);

#line 560 "/usr/include/stdlib.h"
extern "C" void _Exit(int);

#line 567 "/usr/include/stdlib.h"
extern "C" char *getenv(const char *);




extern "C" char *__secure_getenv(const char *);

#line 579 "/usr/include/stdlib.h"
extern "C" int putenv(char *);

#line 585 "/usr/include/stdlib.h"
extern "C" int setenv(const char *, const char *, int);



extern "C" int unsetenv(const char *);

#line 596 "/usr/include/stdlib.h"
extern "C" int clearenv(void);

#line 606 "/usr/include/stdlib.h"
extern "C" char *mktemp(char *);

#line 620 "/usr/include/stdlib.h"
extern "C" int mkstemp(char *);

#line 642 "/usr/include/stdlib.h"
extern "C" int mkstemps(char *, int);

#line 663 "/usr/include/stdlib.h"
extern "C" char *mkdtemp(char *);

#line 717 "/usr/include/stdlib.h"
extern "C" int system(const char *);

#line 734 "/usr/include/stdlib.h"
extern "C" char *realpath(const char *, char *);

#line 755 "/usr/include/stdlib.h"
extern "C" void *bsearch(const void *, const void *, unsigned long int, unsigned long int, int (*)(const void *, const void *));

#line 761 "/usr/include/stdlib.h"
extern "C" void qsort(void *, unsigned long int, unsigned long int, int (*)(const void *, const void *));

#line 771 "/usr/include/stdlib.h"
extern "C" int abs(int);
extern "C" long int labs(long int);



extern "C" long long int llabs(long long int);

#line 785 "/usr/include/stdlib.h"
extern "C" div_t div(int, int);

extern "C" ldiv_t ldiv(long int, long int);

#line 793 "/usr/include/stdlib.h"
extern "C" lldiv_t lldiv(long long int, long long int);

#line 808 "/usr/include/stdlib.h"
extern "C" char *ecvt(double, int, int *, int *);

#line 814 "/usr/include/stdlib.h"
extern "C" char *fcvt(double, int, int *, int *);

#line 820 "/usr/include/stdlib.h"
extern "C" char *gcvt(double, int, char *);

#line 826 "/usr/include/stdlib.h"
extern "C" char *qecvt(long double, int, int *, int *);


extern "C" char *qfcvt(long double, int, int *, int *);


extern "C" char *qgcvt(long double, int, char *);

#line 838 "/usr/include/stdlib.h"
extern "C" int ecvt_r(double, int, int *, int *, char *, unsigned long int);


extern "C" int fcvt_r(double, int, int *, int *, char *, unsigned long int);



extern "C" int qecvt_r(long double, int, int *, int *, char *, unsigned long int);



extern "C" int qfcvt_r(long double, int, int *, int *, char *, unsigned long int);

#line 860 "/usr/include/stdlib.h"
extern "C" int mblen(const char *, unsigned long int);


extern "C" int mbtowc(int *, const char *, unsigned long int);



extern "C" int wctomb(char *, int);



extern "C" unsigned long int mbstowcs(int *, const char *, unsigned long int);


extern "C" unsigned long int wcstombs(char *, const int *, unsigned long int);

#line 885 "/usr/include/stdlib.h"
extern "C" int rpmatch(const char *);

#line 948 "/usr/include/stdlib.h"
extern "C" int getloadavg(double [], int);

#line 44 "/usr/include/string.h"
extern "C" void *memcpy(void *, const void *, unsigned long int);




extern "C" void *memmove(void *, const void *, unsigned long int);

#line 57 "/usr/include/string.h"
extern "C" void *memccpy(void *, const void *, int, unsigned long int);

#line 65 "/usr/include/string.h"
extern "C" void *memset(void *, int, unsigned long int);


extern "C" int memcmp(const void *, const void *, unsigned long int);

#line 95 "/usr/include/string.h"
extern "C" void *memchr(const void *, int, unsigned long int);

#line 128 "/usr/include/string.h"
extern "C" char *strcpy(char *, const char *);


extern "C" char *strncpy(char *, const char *, unsigned long int);




extern "C" char *strcat(char *, const char *);


extern "C" char *strncat(char *, const char *, unsigned long int);



extern "C" int strcmp(const char *, const char *);


extern "C" int strncmp(const char *, const char *, unsigned long int);



extern "C" int strcoll(const char *, const char *);


extern "C" unsigned long int strxfrm(char *, const char *, unsigned long int);

#line 175 "/usr/include/string.h"
extern "C" char *strdup(const char *);

#line 235 "/usr/include/string.h"
extern "C" char *strchr(const char *, int);

#line 262 "/usr/include/string.h"
extern "C" char *strrchr(const char *, int);

#line 284 "/usr/include/string.h"
extern "C" unsigned long int strcspn(const char *, const char *);



extern "C" unsigned long int strspn(const char *, const char *);

#line 314 "/usr/include/string.h"
extern "C" char *strpbrk(const char *, const char *);

#line 342 "/usr/include/string.h"
extern "C" char *strstr(const char *, const char *);

#line 348 "/usr/include/string.h"
extern "C" char *strtok(char *, const char *);

#line 354 "/usr/include/string.h"
extern "C" char *__strtok_r(char *, const char *, char **);




extern "C" char *strtok_r(char *, const char *, char **);

#line 399 "/usr/include/string.h"
extern "C" unsigned long int strlen(const char *);

#line 413 "/usr/include/string.h"
extern "C" char *strerror(int);

#line 431 "/usr/include/string.h"
extern "C" int __xpg_strerror_r(int, char *, unsigned long int);

#line 451 "/usr/include/string.h"
extern "C" void __bzero(void *, unsigned long int);



extern "C" void bcopy(const void *, void *, unsigned long int);



extern "C" void bzero(void *, unsigned long int);


extern "C" int bcmp(const void *, const void *, unsigned long int);

#line 489 "/usr/include/string.h"
extern "C" char *index(const char *, int);

#line 517 "/usr/include/string.h"
extern "C" char *rindex(const char *, int);

#line 523 "/usr/include/string.h"
extern "C" int ffs(int);

#line 536 "/usr/include/string.h"
extern "C" int strcasecmp(const char *, const char *);



extern "C" int strncasecmp(const char *, const char *, unsigned long int);

#line 559 "/usr/include/string.h"
extern "C" char *strsep(char **, const char *);

#line 109 "/usr/include/sys/select.h"
extern "C" int select(int, fd_set *, fd_set *, fd_set *, struct timeval *);

#line 121 "/usr/include/sys/select.h"
extern "C" int pselect(int, fd_set *, fd_set *, fd_set *, const struct timespec *, const __sigset_t *);

#line 11344 "CannyA8_S4.h"
extern "C" void __PRF_channelAccess(unsigned int, unsigned int);
extern "C" void __PRF_startProfiler(const char *const, const char *const, unsigned int *, unsigned int);
void _scc_bit4_err_handle(const _bit4&);

//////////////////////////////////////////////////////////////////////
// End of file CannyA8_S4.h
//////////////////////////////////////////////////////////////////////
